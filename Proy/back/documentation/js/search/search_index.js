var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.367,1,2.417]],["body/controllers/AppController.html",[0,0.602,1,3.965,2,1.289,3,0.264,4,0.23,5,0.23,6,3.996,7,0.197,8,0.653,9,5.62,10,1.289,11,0.022,12,0.447,13,4.687,14,0.527,15,1.196,16,0.505,17,0.447,18,3.638,19,3.996,20,0.264,21,0.264,22,1.086,23,1.82,24,0.613,25,4.687,26,0.018,27,0.018]],["title/modules/AppModule.html",[28,2.674,29,2.417]],["body/modules/AppModule.html",[1,2.759,2,0.9,3,0.117,4,0.102,5,0.102,11,0.022,16,0.617,17,0.198,18,3.047,19,1.775,20,0.117,21,0.117,26,0.01,27,0.01,28,3.052,29,4.829,30,1.573,31,1.422,32,1.775,33,1.775,34,1.422,35,3.444,36,1.775,37,1.775,38,1.775,39,3.047,40,3.047,41,3.047,42,3.047,43,3.047,44,3.047,45,3.047,46,3.047,47,2.829,48,3.047,49,3.047,50,3.047,51,1.373,52,3.047,53,2.788,54,1.775,55,1.775,56,2.082,57,2.759,58,2.759,59,2.759,60,2.759,61,2.759,62,2.759,63,2.759,64,2.759,65,2.759,66,2.759,67,2.759,68,2.759,69,2.759,70,2.759,71,2.759,72,2.082,73,2.471,74,2.082,75,2.082,76,2.082,77,2.082,78,2.082,79,2.082,80,2.082,81,2.082,82,2.082,83,2.082,84,2.082,85,2.082,86,2.082,87,2.082,88,2.082,89,2.082,90,2.082,91,2.082,92,2.082,93,2.082,94,3.27,95,1.573,96,2.082,97,2.082,98,2.082,99,2.082,100,2.082,101,2.082,102,2.082,103,2.082,104,2.082,105,2.082,106,2.082,107,2.082,108,2.082,109,2.082,110,2.082,111,2.082,112,2.082]],["title/injectables/AppService.html",[18,2.042,113,0.398]],["body/injectables/AppService.html",[3,0.275,4,0.24,5,0.24,7,0.206,8,0.671,9,5.705,11,0.022,12,0.466,14,0.551,15,1.229,16,0.426,17,0.466,18,3.44,20,0.275,21,0.275,24,0.64,26,0.018,27,0.018,113,0.671,114,1.508,115,4.173,116,4.895,117,4.895,118,4.895]],["title/controllers/AutorController.html",[0,0.367,67,2.417]],["body/controllers/AutorController.html",[0,0.382,2,1.012,3,0.207,4,0.18,5,0.18,7,0.154,8,0.558,10,1.545,11,0.022,12,0.535,14,0.632,15,1.023,16,0.489,17,0.35,20,0.207,21,0.207,22,0.852,24,0.481,26,0.015,27,0.015,39,2.122,67,3.389,119,3.136,120,1.2,121,3.136,122,2.658,123,2.046,124,3.758,125,3.136,126,3.749,127,1.476,128,2.122,129,3.003,130,3.678,131,0.746,132,0.746,133,0.473,134,0.746,135,1.346,136,3.749,137,1.516,138,4.231,139,3.678,140,1.012,141,2.122,142,3.678,143,1.516,144,2.122,145,1.837,146,2.046,147,1.428,148,1.428,149,3.678,150,1.2,151,1.428,152,3.678,153,3.678,154,1.926,155,1.926,156,3.678,157,3.678,158,3.136,159,3.678,160,3.136,161,3.678,162,3.678,163,2.779,164,3.678]],["title/injectables/AutorService.html",[39,2.042,113,0.398]],["body/injectables/AutorService.html",[3,0.176,4,0.154,5,0.154,7,0.132,8,0.5,11,0.022,12,0.535,14,0.581,15,1.064,16,0.387,17,0.299,20,0.176,21,0.176,22,0.727,23,1.218,24,0.776,26,0.013,27,0.013,39,2.564,51,1.46,113,0.5,114,0.966,123,1.832,124,3.51,126,4.243,127,1.378,131,0.776,132,0.776,133,0.492,134,0.776,135,1.889,137,1.293,140,1.223,160,2.674,165,2.674,166,1.81,167,3.789,168,0.966,169,1.148,170,3.136,171,1.535,172,3.789,173,3.136,174,1.725,175,3.136,176,3.136,177,2.077,178,1.083,179,0.815,180,2.077,181,1.59,182,1.466,183,2.142,184,2.142,185,3.136,186,3.526,187,2.142,188,1.68,189,2.674,190,2.674,191,3.136,192,3.136,193,1.223,194,1.466,195,3.136,196,1.68,197,3.136,198,2.077,199,3.358,200,2.778,201,1.535,202,1.73,203,3.136,204,1.809,205,3.136,206,1.083]],["title/controllers/BuscadorController.html",[0,0.367,64,2.417]],["body/controllers/BuscadorController.html",[0,0.44,2,1.168,3,0.239,4,0.208,5,0.208,7,0.178,8,0.614,10,1.168,11,0.022,12,0.404,14,0.478,15,1.31,16,0.524,17,0.404,20,0.239,21,0.239,22,0.984,24,0.555,26,0.016,27,0.016,40,2.449,64,3.724,120,1.384,129,2.12,131,0.638,132,0.638,133,0.404,134,0.638,141,2.449,147,1.648,148,1.648,150,1.384,151,1.648,154,1.648,155,1.648,198,2.549,207,3.619,208,4.244,209,4.649,210,4.244,211,1.861,212,2.921,213,4.244,214,3.619,215,2.449,216,4.244,217,4.244,218,4.244,219,2.449,220,4.244,221,4.244,222,4.244,223,4.244]],["title/injectables/BuscadorService.html",[40,2.042,113,0.398]],["body/injectables/BuscadorService.html",[3,0.186,4,0.162,5,0.162,7,0.139,8,0.519,11,0.022,12,0.44,14,0.372,15,1.29,16,0.402,17,0.315,20,0.186,21,0.186,22,0.766,24,0.604,26,0.014,27,0.014,40,2.661,51,1.494,113,0.519,114,1.019,131,0.694,132,0.694,133,0.44,134,0.694,140,0.91,166,1.462,168,1.019,169,1.21,171,1.593,174,1.284,178,1.142,179,0.86,181,1.019,183,2.259,184,2.259,186,2.259,188,2.471,193,0.91,198,2.826,201,1.142,202,1.421,206,1.142,214,3.933,215,2.661,224,2.82,225,4.613,226,3.307,227,4.613,228,3.307,229,2.82,230,2.82,231,3.485,232,2.499,233,2.499,234,2.499,235,2.499,236,2.499,237,2.82,238,3.307,239,3.307,240,2.259,241,2.259,242,3.485,243,2.499,244,2.82,245,2.82,246,3.933,247,2.499,248,3.933,249,3.307,250,1.652,251,3.307,252,1.908,253,3.307,254,2.259,255,2.259,256,3.307,257,2.499,258,3.307,259,3.307,260,2.82,261,3.307,262,3.307,263,1.908,264,1.908,265,3.307,266,3.307]],["title/controllers/CambioContraController.html",[0,0.367,69,2.417]],["body/controllers/CambioContraController.html",[0,0.444,2,1.176,3,0.24,4,0.21,5,0.21,7,0.179,8,0.616,10,1.176,11,0.022,12,0.407,14,0.481,16,0.526,17,0.407,20,0.24,21,0.24,22,0.99,24,0.559,26,0.017,27,0.017,41,2.466,69,3.741,120,1.394,128,2.466,129,2.135,131,0.643,132,0.643,133,0.407,134,0.643,143,1.762,146,2.258,147,1.659,148,1.659,150,1.394,151,1.659,154,1.659,155,1.659,209,4.67,211,1.874,212,2.934,215,2.466,219,2.466,267,3.644,268,4.274,269,4.67,270,4.274,271,4.274,272,1.998,273,2.919,274,4.274,275,4.274,276,4.274,277,4.274,278,4.274]],["title/injectables/CambioContraService.html",[41,2.042,113,0.398]],["body/injectables/CambioContraService.html",[3,0.219,4,0.191,5,0.191,7,0.163,8,0.58,11,0.022,12,0.491,14,0.438,15,1.267,16,0.503,17,0.371,20,0.219,21,0.219,22,0.902,24,0.674,26,0.016,27,0.016,41,2.972,51,1.501,113,0.58,114,1.199,131,0.775,132,0.775,133,0.491,134,0.775,140,1.07,166,1.589,168,1.199,169,1.424,171,1.344,174,1.51,178,1.344,179,1.339,180,2.408,181,1.587,193,1.07,201,1.344,202,1.587,206,1.344,269,5.243,279,3.317,280,3.89,281,3.89,282,3.89,283,3.519,284,2.432,285,3.89,286,3.89,287,3.317,288,3.89,289,2.939,290,2.657,291,2.657,292,2.657,293,2.244,294,2.084,295,3.89]],["title/controllers/CargaLLoteController.html",[0,0.367,71,2.417]],["body/controllers/CargaLLoteController.html",[0,0.413,2,1.095,3,0.224,4,0.195,5,0.195,7,0.167,8,0.588,10,1.095,11,0.022,12,0.379,14,0.448,16,0.455,17,0.379,20,0.224,21,0.224,22,0.922,23,1.545,26,0.016,27,0.016,42,3.017,71,3.572,120,1.298,131,0.599,132,0.599,133,0.379,134,0.599,140,1.439,143,2.408,146,2.408,166,1.607,179,1.359,241,3.572,250,2.612,252,2.296,272,2.444,296,3.393,297,3.98,298,5.23,299,5.23,300,3.98,301,3.98,302,3.393,303,3.393,304,3.98,305,3.393,306,2.718,307,3.007,308,3.98,309,3.393,310,3.393,311,3.98,312,3.98,313,3.98,314,3.98,315,3.98,316,3.393,317,3.393,318,3.98]],["title/injectables/CargaLLoteService.html",[42,2.042,113,0.398]],["body/injectables/CargaLLoteService.html",[3,0.11,4,0.096,5,0.096,7,0.082,8,0.351,11,0.022,12,0.422,14,0.437,15,1.19,16,0.421,17,0.187,20,0.11,21,0.11,22,0.455,23,0.762,24,0.509,26,0.009,27,0.009,42,1.802,51,1.152,113,0.351,114,0.605,131,0.666,132,0.666,133,0.422,134,0.666,135,0.719,140,1.417,166,1.417,168,0.605,169,0.719,171,1.079,177,2.071,178,0.678,179,1.622,181,1.198,193,0.859,194,0.918,196,1.052,201,1.079,202,1.49,206,1.343,240,1.341,250,1.56,252,2.556,254,2.656,255,1.341,263,3.414,264,1.802,306,1.341,307,1.484,316,2.663,317,1.674,319,1.674,320,3.123,321,3.123,322,3.888,323,1.964,324,1.964,325,1.964,326,3.123,327,1.964,328,1.964,329,4.431,330,3.123,331,1.964,332,3.315,333,2.359,334,2.359,335,1.964,336,3.123,337,3.123,338,1.674,339,1.952,340,2.656,341,1.964,342,1.964,343,1.964,344,1.964,345,1.964,346,1.964,347,1.964,348,1.964,349,1.964,350,1.964,351,2.656,352,1.964,353,3.123,354,1.964,355,1.964,356,1.964,357,1.964,358,1.484,359,2.663,360,1.964,361,1.964,362,1.964,363,1.964,364,1.674,365,1.964,366,1.674,367,1.964,368,2.359,369,4.431,370,4.08,371,1.484,372,1.964,373,1.964,374,1.674,375,1.964,376,2.431,377,1.964,378,1.964,379,1.964,380,1.964,381,1.964,382,1.674,383,3.123,384,1.964,385,3.888,386,1.964,387,1.674,388,1.964,389,1.674,390,1.964,391,1.964,392,1.674,393,2.431,394,1.964,395,1.964,396,1.964,397,1.964,398,1.964,399,1.964,400,1.341,401,1.674,402,1.341,403,1.341,404,1.341,405,1.341,406,1.133,407,1.674,408,1.674,409,3.315,410,1.484,411,1.674,412,1.674,413,1.674,414,1.964,415,1.227,416,1.964,417,1.964,418,3.123,419,1.964,420,1.964,421,1.964,422,2.663,423,2.133,424,3.315,425,3.123,426,1.964,427,3.123,428,1.964,429,1.964,430,1.964,431,3.123,432,3.888,433,1.964,434,1.484,435,1.964,436,3.123,437,3.123,438,1.964,439,1.964,440,1.964,441,1.964,442,1.964,443,1.964,444,1.964,445,1.964,446,1.964,447,1.964,448,1.964,449,1.964,450,1.964]],["title/controllers/CarreraController.html",[0,0.367,58,2.417]],["body/controllers/CarreraController.html",[0,0.306,2,0.812,3,0.166,4,0.145,5,0.145,7,0.124,8,0.479,10,1.593,11,0.022,12,0.552,14,0.652,16,0.435,17,0.281,20,0.166,21,0.166,24,0.758,26,0.013,27,0.013,43,2.456,58,2.908,120,0.963,122,2.28,123,1.755,127,1.592,128,1.704,129,1.475,131,0.822,132,0.822,133,0.521,134,0.822,137,1.217,140,1.66,143,1.755,144,1.704,145,1.475,146,1.755,147,1.146,148,1.146,150,0.963,151,1.146,154,2.342,155,2.249,179,0.768,198,1.99,211,2.844,212,2.28,219,1.704,272,2.333,273,2.017,451,2.518,452,2.456,453,2.456,454,4.128,455,1.704,456,2.231,457,2.953,458,2.231,459,2.953,460,2.661,461,1.704,462,2.231,463,2.953,464,2.017,465,2.953,466,2.953,467,2.953,468,2.953,469,2.953,470,1.582,471,2.953,472,2.518,473,2.231,474,2.518,475,2.518,476,2.231,477,2.231,478,2.953,479,2.017,480,1.846,481,2.518,482,2.231,483,2.231,484,2.953,485,2.518]],["title/injectables/CarreraService.html",[43,2.042,113,0.398]],["body/injectables/CarreraService.html",[3,0.14,4,0.122,5,0.122,7,0.104,8,0.421,11,0.022,12,0.54,14,0.607,15,0.929,16,0.393,17,0.236,20,0.14,21,0.14,22,0.575,23,0.963,24,0.811,26,0.011,27,0.011,43,2.16,51,1.305,113,0.421,114,0.765,122,2.006,123,1.544,124,3.14,125,3.193,127,1.521,131,0.811,132,0.811,133,0.514,134,0.811,135,1.838,137,1.544,140,1.559,166,1.843,168,0.765,169,0.908,171,1.293,174,1.751,177,2.348,178,0.857,179,1.172,180,2.348,181,1.661,182,1.75,193,1.382,194,1.16,196,1.329,198,1.75,200,2.341,201,1.735,202,1.91,204,1.432,206,1.735,243,4.073,264,1.432,290,1.695,292,1.695,415,1.551,452,2.16,453,2.16,455,2.16,460,2.341,461,2.16,476,2.829,477,1.875,486,2.116,487,2.482,488,2.482,489,2.482,490,2.482,491,2.482,492,2.482,493,2.482,494,3.845,495,2.482,496,2.898,497,1.695,498,2.482,499,2.482,500,1.875,501,2.482,502,2.482]],["title/controllers/DescargaController.html",[0,0.367,65,2.417]],["body/controllers/DescargaController.html",[0,0.351,2,0.93,3,0.19,4,0.166,5,0.166,7,0.142,8,0.527,10,0.93,11,0.022,12,0.322,14,0.38,15,1.108,16,0.549,17,0.322,20,0.19,21,0.19,26,0.014,27,0.014,44,2.703,65,3.2,120,1.103,131,0.509,132,0.509,133,0.446,134,0.509,147,1.313,148,1.313,150,1.103,151,1.313,154,1.313,155,1.313,166,1.479,168,1.042,177,2.19,179,1.397,193,0.93,202,1.042,212,1.811,215,2.703,219,1.95,250,1.689,294,2.879,305,2.883,306,2.309,307,2.554,309,2.883,333,3.539,334,3.539,339,2.113,371,4.385,382,2.883,497,2.309,503,2.883,504,4.685,505,4.685,506,3.381,507,5.803,508,4.061,509,3.381,510,5.375,511,2.554,512,3.381,513,3.381,514,2.309,515,3.381,516,3.381,517,3.381,518,3.381,519,4.685,520,3.381,521,2.883,522,3.381,523,3.381,524,3.381,525,3.381,526,3.381,527,4.685,528,3.381,529,3.381,530,3.381,531,3.381,532,3.381,533,3.381,534,2.309]],["title/injectables/DescargaService.html",[44,2.042,113,0.398]],["body/injectables/DescargaService.html",[3,0.232,4,0.202,5,0.202,7,0.173,8,0.603,11,0.022,12,0.51,14,0.465,15,1.104,16,0.466,17,0.393,20,0.232,21,0.232,22,0.957,24,0.54,26,0.016,27,0.016,44,3.09,51,1.546,113,0.603,114,1.272,127,1.315,131,0.806,132,0.806,133,0.51,134,0.806,166,1.636,168,1.272,169,1.511,171,1.426,174,1.603,178,1.426,179,1.073,180,2.504,181,1.272,193,1.136,194,1.93,202,1.272,284,2.581,294,2.211,339,2.581,534,2.82,535,3.52,536,5.357,537,4.129,538,4.129,539,5.357,540,4.129,541,4.129,542,4.129,543,3.52,544,4.129,545,4.129]],["title/controllers/EstadisticasController.html",[0,0.367,61,2.417]],["body/controllers/EstadisticasController.html",[0,0.47,2,1.246,3,0.255,4,0.222,5,0.222,7,0.19,8,0.639,10,1.246,11,0.022,12,0.432,14,0.51,16,0.541,17,0.432,20,0.255,21,0.255,24,0.593,26,0.017,27,0.017,45,3.279,61,3.881,120,1.477,141,2.613,147,1.758,148,1.758,150,1.477,151,1.758,154,1.758,155,1.758,211,2.492,470,2.426,546,3.862,547,4.529,548,6.512,549,4.529,550,4.529,551,4.529,552,4.529,553,4.529]],["title/injectables/EstadisticasService.html",[45,2.042,113,0.398]],["body/injectables/EstadisticasService.html",[3,0.235,4,0.204,5,0.204,7,0.175,8,0.607,11,0.022,12,0.569,14,0.469,16,0.469,17,0.397,20,0.235,21,0.235,24,0.706,26,0.016,27,0.016,45,3.111,51,1.642,113,0.607,114,1.285,131,0.627,132,0.627,133,0.514,134,0.627,166,1.644,168,1.661,169,1.527,171,2.064,174,1.619,178,1.441,181,1.285,182,1.95,193,1.148,201,1.441,202,1.661,284,2.607,554,3.556,555,1.863,556,4.081,557,6.317,558,4.171,559,4.171,560,4.171,561,4.171,562,4.171]],["title/controllers/GetLibroController.html",[0,0.367,66,2.417]],["body/controllers/GetLibroController.html",[0,0.447,2,1.184,3,0.242,4,0.211,5,0.211,7,0.181,8,0.619,10,1.184,11,0.022,12,0.41,14,0.484,16,0.528,17,0.41,20,0.242,21,0.242,22,0.998,24,0.563,26,0.017,27,0.017,46,2.483,66,3.758,120,1.404,127,1.351,131,0.647,132,0.647,133,0.41,134,0.647,140,1.184,145,2.15,147,1.671,148,1.671,150,1.404,151,1.671,154,1.671,155,1.671,163,3.252,212,2.306,219,2.483,563,3.67,564,3.174,565,4.691,566,3.67,567,4.691,568,4.304,569,4.304,570,4.304,571,4.304,572,4.304,573,4.304]],["title/injectables/GetLibroService.html",[46,2.042,113,0.398]],["body/injectables/GetLibroService.html",[3,0.217,4,0.19,5,0.19,7,0.162,8,0.577,11,0.022,12,0.489,14,0.435,16,0.447,17,0.368,20,0.217,21,0.217,22,0.896,24,0.671,26,0.016,27,0.016,46,2.96,51,1.497,113,0.577,114,1.191,127,1.259,131,0.772,132,0.772,133,0.489,134,0.772,140,1.411,145,1.931,166,1.584,168,1.191,169,1.415,171,1.335,174,1.501,178,1.335,179,1.005,180,2.398,181,1.191,182,1.807,183,2.64,184,2.64,186,2.64,187,2.64,188,2.07,193,1.063,201,1.335,202,1.581,206,1.335,231,2.921,232,2.921,233,2.921,234,2.921,235,2.921,236,2.921,240,2.64,241,2.64,247,2.921,284,2.416,508,2.921,565,4.374,566,3.296,574,3.296,575,3.866,576,3.866,577,3.866]],["title/interfaces/Libro.html",[564,2.042,578,1.654]],["body/interfaces/Libro.html",[3,0.235,4,0.205,5,0.205,7,0.176,11,0.022,15,1.484,20,0.235,26,0.016,27,0.016,127,1.608,133,0.65,351,4.088,400,4.32,402,4.32,403,4.32,404,4.32,405,4.088,406,3.649,555,1.867,564,3.118,578,1.956,579,2.616,580,3.569,581,3.569,582,3.569]],["title/controllers/LibroController.html",[0,0.367,62,2.417]],["body/controllers/LibroController.html",[0,0.254,2,0.674,3,0.138,4,0.12,5,0.245,7,0.103,8,0.417,10,1.475,11,0.022,12,0.511,14,0.603,15,0.922,16,0.491,17,0.234,20,0.138,21,0.138,24,0.738,26,0.011,27,0.011,47,1.987,62,2.534,73,1.852,120,0.8,122,2.674,123,1.53,127,1.385,129,2.926,131,0.807,132,0.807,133,0.476,134,0.807,135,0.897,137,1.011,140,1.552,141,1.414,143,1.53,144,1.414,145,1.225,146,1.53,147,0.952,148,0.952,150,0.8,151,0.952,154,1.938,155,1.938,166,1.231,177,1.734,179,0.964,181,0.755,193,0.674,198,1.146,201,0.847,202,1.143,211,1.075,212,1.313,215,1.414,250,1.225,252,1.414,254,1.675,263,2.582,272,2.506,273,1.675,310,3.163,366,2.09,368,1.852,370,2.803,376,1.533,393,1.533,423,2.534,452,2.141,453,2.141,454,2.803,455,1.414,456,1.852,461,1.414,462,1.852,464,1.675,470,1.313,472,2.09,473,1.852,474,2.09,476,2.803,479,1.675,480,1.533,481,2.09,482,1.852,483,1.852,485,2.09,496,2.582,511,1.852,564,3.254,583,2.09,584,2.452,585,2.452,586,2.452,587,2.452,588,2.452,589,2.452,590,2.09,591,2.452,592,3.71,593,2.452,594,2.09,595,2.09,596,2.09,597,2.452,598,2.09,599,1.675,600,2.452,601,2.452,602,2.09,603,2.09,604,2.452,605,2.09,606,2.452,607,2.452,608,2.452,609,2.09,610,1.852,611,2.452,612,3.71,613,2.452,614,2.452,615,2.452,616,2.452,617,2.452,618,2.452,619,2.452,620,2.452]],["title/injectables/LibroService.html",[47,1.895,113,0.398]],["body/injectables/LibroService.html",[3,0.091,4,0.079,5,0.214,7,0.068,8,0.299,11,0.022,12,0.448,14,0.491,15,1.11,16,0.409,17,0.153,20,0.091,21,0.091,22,0.373,23,0.625,24,0.705,26,0.008,27,0.008,47,1.424,51,1.024,113,0.299,114,0.496,121,2.266,122,2.111,123,1.096,124,1.661,127,1.153,129,0.804,131,0.707,132,0.707,133,0.448,134,0.707,135,1.597,137,1.096,140,1.43,166,1.679,168,0.496,169,0.589,171,0.918,174,1.032,177,2.196,178,0.556,179,1.351,180,1.842,181,1.532,183,1.815,184,2.319,186,1.815,187,1.815,188,2.516,193,1.084,194,0.752,196,0.862,198,1.842,200,1.661,201,1.361,202,1.601,204,1.533,206,1.623,229,2.266,230,3.361,231,2.565,232,2.565,233,2.565,234,2.565,235,2.565,236,1.216,237,2.895,240,2.98,241,1.815,242,1.216,243,2.008,244,2.266,245,2.266,246,2.266,247,2.008,250,1.969,252,2.274,257,1.216,260,1.372,263,3.202,264,1.533,272,1.242,290,1.099,291,1.099,292,1.099,302,1.372,303,1.372,306,1.099,333,2.008,334,2.008,338,1.372,339,1.661,340,1.815,351,1.099,358,1.216,368,1.216,370,2.978,374,1.372,376,2.122,387,1.372,389,1.372,392,1.372,393,2.122,400,1.099,401,1.372,402,1.099,403,1.099,404,1.099,405,1.099,406,0.928,407,2.266,408,1.372,409,1.372,410,1.216,411,1.372,412,1.372,413,1.372,415,1.661,422,1.372,423,1.815,452,1.533,453,1.533,455,1.533,460,2.464,461,1.533,494,1.372,508,2.008,521,1.372,543,2.266,564,2.71,596,1.372,609,2.895,610,2.978,621,1.372,622,1.609,623,1.609,624,2.658,625,1.609,626,1.609,627,1.609,628,1.609,629,2.658,630,1.609,631,1.609,632,1.372,633,2.658,634,1.609,635,1.609,636,2.658,637,1.609,638,2.658,639,1.609,640,1.609,641,3.395,642,1.609,643,1.609,644,1.609,645,2.658,646,1.609,647,1.609,648,1.609,649,1.609,650,1.609,651,1.609,652,1.609,653,1.609,654,3.395,655,1.609,656,1.609,657,2.658,658,2.658,659,1.609,660,1.609,661,1.609,662,1.609,663,1.609,664,1.609,665,1.609,666,1.609,667,1.609,668,1.609,669,1.609,670,1.609,671,1.609,672,1.609,673,1.609,674,1.609,675,1.609,676,1.609,677,1.609,678,1.609,679,1.609,680,1.609,681,1.609,682,1.609,683,1.609,684,1.372,685,1.609,686,1.372,687,1.609,688,1.609,689,1.609,690,1.372,691,1.609]],["title/classes/Libro_Upload.html",[21,0.199,599,2.417]],["body/classes/Libro_Upload.html",[3,0.211,4,0.184,5,0.184,7,0.158,10,1.829,11,0.022,12,0.633,15,1.41,16,0.327,20,0.211,21,0.283,26,0.015,27,0.015,127,1.394,133,0.633,351,3.439,400,3.878,402,3.878,403,3.878,404,3.878,405,3.439,406,3.275,555,1.739,581,3.204,582,3.204,599,3.439,692,2.839,693,3.204,694,6.083,695,3.758,696,3.758,697,3.758,698,3.758,699,3.758,700,3.758,701,3.758,702,2.839]],["title/controllers/LoginController.html",[0,0.367,63,2.417]],["body/controllers/LoginController.html",[0,0.461,2,1.223,3,0.25,4,0.218,5,0.218,7,0.187,8,0.632,10,1.223,11,0.022,12,0.424,14,0.5,16,0.536,17,0.424,20,0.25,21,0.25,22,1.03,24,0.582,26,0.017,27,0.017,48,2.565,63,3.837,120,1.45,131,0.669,132,0.669,133,0.424,134,0.669,143,1.833,146,2.539,272,2.078,703,3.791,704,4.259,705,3.791,706,4.446,707,3.791,708,4.446,709,4.446,710,4.446,711,4.446,712,4.446,713,4.446]],["title/injectables/LoginService.html",[48,2.042,113,0.398]],["body/injectables/LoginService.html",[3,0.155,4,0.136,5,0.136,7,0.116,8,0.457,11,0.022,12,0.505,14,0.311,15,0.57,16,0.491,17,0.263,20,0.155,21,0.155,23,1.866,24,0.693,26,0.012,27,0.012,48,2.341,51,1.466,113,0.457,114,0.852,131,0.61,132,0.61,133,0.505,134,0.61,135,1.012,166,1.323,168,0.852,169,1.012,171,1.829,174,1.073,178,0.955,179,1.533,181,1.25,182,1.292,187,1.888,188,1.481,193,0.761,194,1.292,201,0.955,202,1.481,206,1.402,250,2.401,272,1.292,283,2.772,291,1.888,293,1.595,294,2.173,376,1.728,393,1.728,434,2.089,470,1.481,496,2.773,497,1.888,514,3.284,555,1.402,556,2.772,704,3.686,705,3.46,707,2.357,714,2.357,715,4.099,716,4.058,717,2.765,718,2.357,719,2.089,720,3.46,721,2.765,722,2.357,723,2.089,724,3.46,725,2.765,726,2.765,727,2.357,728,2.357,729,2.765,730,2.357,731,2.357,732,2.357,733,2.357,734,2.357,735,2.357,736,2.765,737,2.089,738,2.765,739,4.058,740,4.058,741,2.765,742,2.765,743,4.099,744,2.765,745,2.357,746,2.089,747,2.357,748,2.357,749,2.089,750,2.765,751,2.357,752,2.765,753,2.765,754,2.765,755,2.765,756,2.765,757,2.765,758,2.765,759,1.595,760,2.765]],["title/controllers/MateriaController.html",[0,0.367,59,2.417]],["body/controllers/MateriaController.html",[0,0.304,2,0.806,3,0.165,4,0.144,5,0.144,7,0.123,8,0.477,10,1.589,11,0.022,12,0.55,14,0.65,16,0.503,17,0.279,20,0.165,21,0.165,24,0.756,26,0.013,27,0.013,49,2.443,59,2.892,120,0.956,122,2.268,123,1.746,127,1.589,128,1.691,131,0.819,132,0.819,133,0.519,134,0.819,137,1.209,140,1.656,141,1.691,143,1.746,144,1.691,145,1.464,146,1.746,147,1.138,148,1.138,150,0.956,151,1.138,154,2.242,155,2.242,211,2.882,273,2.002,452,2.443,453,2.443,455,1.691,456,2.215,458,2.215,460,3.762,461,1.691,462,2.215,464,2.002,470,1.57,473,2.215,475,2.499,479,2.002,480,1.833,482,2.215,483,2.215,567,2.499,761,2.499,762,4.421,763,4.643,764,2.932,765,2.932,766,2.932,767,2.932,768,2.932,769,2.932,770,2.932,771,2.499,772,2.932,773,2.932,774,2.932,775,2.932,776,2.932,777,2.932,778,2.932]],["title/injectables/MateriaService.html",[49,2.042,113,0.398]],["body/injectables/MateriaService.html",[3,0.141,4,0.123,5,0.123,7,0.105,8,0.424,11,0.022,12,0.562,14,0.609,16,0.328,17,0.238,20,0.141,21,0.141,24,0.828,26,0.011,27,0.011,49,2.174,51,1.406,113,0.424,114,0.771,122,2.018,123,1.869,127,1.396,131,0.814,132,0.814,133,0.515,134,0.814,135,0.916,137,1.032,140,1.488,163,1.891,166,1.846,168,0.771,169,0.916,171,1.742,174,2.1,178,0.864,179,0.979,181,1.667,182,1.761,190,2.133,193,1.488,194,1.17,196,1.34,198,2.118,199,2.847,200,2.833,201,1.869,202,1.95,204,1.444,206,1.742,264,1.444,290,1.709,292,1.709,406,2.174,452,2.174,453,2.174,455,1.444,458,2.847,460,3.153,461,1.444,470,1.34,477,1.891,500,1.891,555,1.301,556,2.574,763,4.3,779,2.133,780,2.502,781,2.502,782,2.502,783,2.502,784,2.502,785,2.502,786,2.502,787,5.044,788,2.502,789,4.532,790,2.502,791,2.502,792,3.768,793,2.502,794,2.502,795,2.502]],["title/controllers/MilibroController.html",[0,0.367,70,2.417]],["body/controllers/MilibroController.html",[0,0.453,2,1.201,3,0.246,4,0.214,5,0.214,7,0.183,8,0.625,10,1.201,11,0.022,12,0.416,14,0.491,16,0.531,17,0.416,20,0.246,21,0.246,22,1.012,24,0.571,26,0.017,27,0.017,47,2.339,70,3.793,120,1.424,128,2.519,129,2.181,131,0.657,132,0.657,134,0.657,143,1.8,146,2.289,147,1.695,148,1.695,150,1.424,151,1.695,154,1.695,155,1.695,211,1.915,272,2.595,454,4.195,590,3.723,595,3.723,602,3.723,603,3.723,796,3.723,797,4.366,798,4.366,799,4.366,800,4.366,801,4.366]],["title/controllers/NacionalidadController.html",[0,0.367,68,2.417]],["body/controllers/NacionalidadController.html",[0,0.382,2,1.012,3,0.207,4,0.18,5,0.18,7,0.154,8,0.558,10,1.545,11,0.022,12,0.535,14,0.632,16,0.489,17,0.35,20,0.207,21,0.207,22,0.852,24,0.649,26,0.015,27,0.015,50,2.122,68,3.389,120,1.2,123,2.046,126,2.779,127,1.379,131,0.746,132,0.746,133,0.473,134,0.746,136,2.779,137,1.516,140,1.365,143,1.516,144,2.122,145,1.837,146,2.046,147,1.428,148,1.428,150,1.2,151,1.428,154,2.18,155,2.18,211,2.636,219,2.122,272,2.319,464,2.512,479,2.512,480,2.299,802,3.136,803,4.962,804,6.012,805,3.678,806,4.962,807,3.678,808,3.678,809,3.678,810,3.678,811,3.678,812,3.678,813,3.678,814,3.678,815,3.678,816,3.678,817,3.678,818,3.678,819,3.678]],["title/injectables/NacionalidadService.html",[50,2.042,113,0.398]],["body/injectables/NacionalidadService.html",[3,0.183,4,0.16,5,0.16,7,0.137,8,0.514,11,0.022,12,0.545,14,0.593,15,1.087,16,0.398,17,0.311,20,0.183,21,0.183,22,0.756,23,1.267,24,0.787,26,0.014,27,0.014,50,2.636,51,1.485,113,0.514,114,1.005,123,1.884,127,1.295,131,0.793,132,0.793,133,0.503,134,0.793,135,1.93,137,1.884,140,1.257,166,1.826,167,3.896,168,1.005,169,1.194,171,1.578,172,3.896,174,1.774,177,2.136,178,1.127,179,0.848,180,2.136,181,1.625,182,1.525,189,4.497,193,1.257,194,1.525,196,1.748,198,2.136,199,2.465,200,2.857,201,1.578,202,1.761,204,1.882,206,1.578,496,1.882,500,2.465,820,2.782,821,5.715,822,3.263,823,3.263,824,3.263,825,3.263,826,3.263,827,3.263]],["title/classes/RegisterUser.html",[21,0.199,828,2.417]],["body/classes/RegisterUser.html",[3,0.176,4,0.154,5,0.154,7,0.132,10,1.631,11,0.022,12,0.565,15,1.442,16,0.273,20,0.176,21,0.25,23,2.702,26,0.013,27,0.013,127,1.378,133,0.565,135,1.889,206,1.535,250,2.22,252,3.42,289,4.243,293,2.978,294,2.765,359,3.789,376,2.778,393,3.706,496,2.564,555,1.535,692,2.369,694,5.249,702,2.369,746,3.9,828,3.035,829,2.674,830,4.401,831,5.162,832,3.136,833,3.136,834,3.136,835,3.136,836,4.444,837,4.444,838,4.444,839,4.444,840,4.444,841,3.136,842,3.136,843,3.136,844,3.136,845,4.444,846,5.928,847,3.136,848,3.136,849,3.136,850,3.136,851,3.136,852,5.928,853,5.928]],["title/guards/RolesGuard.html",[150,1.154,854,2.674]],["body/guards/RolesGuard.html",[3,0.161,4,0.141,5,0.141,7,0.12,8,0.469,11,0.022,12,0.468,14,0.469,15,0.591,16,0.427,17,0.273,20,0.161,21,0.161,22,0.665,23,1.619,24,0.749,26,0.013,27,0.013,95,2.168,113,0.469,131,0.739,132,0.739,133,0.468,134,0.739,136,3.15,150,1.36,168,0.884,179,1.553,193,0.789,201,0.991,202,1.285,254,3.682,255,1.96,257,2.168,263,3.447,364,3.555,371,2.168,415,1.794,423,1.96,434,2.168,496,1.655,514,3.911,555,0.991,715,3.555,720,2.446,722,2.446,723,2.168,743,4.596,749,2.168,751,2.446,759,1.655,855,2.869,856,2.446,857,5.391,858,4.169,859,2.869,860,5.974,861,2.869,862,4.169,863,6.165,864,2.869,865,4.169,866,4.169,867,4.169,868,2.869,869,2.869,870,2.869,871,4.169,872,2.869,873,2.869,874,2.869,875,2.869,876,2.869,877,4.169,878,2.869,879,5.391,880,2.869,881,2.869,882,2.869,883,4.911,884,4.911,885,4.169,886,4.911,887,2.869,888,2.869,889,2.869,890,2.869,891,2.869,892,2.869,893,2.869,894,2.869,895,2.869]],["title/injectables/SqlService.html",[51,0.92,113,0.398]],["body/injectables/SqlService.html",[3,0.177,4,0.155,5,0.155,7,0.132,8,0.502,11,0.022,12,0.617,14,0.355,15,1.067,16,0.388,17,0.3,20,0.177,21,0.177,23,2.01,24,0.412,26,0.013,27,0.013,51,1.159,113,0.502,114,0.971,131,0.474,132,0.474,133,0.425,134,0.474,166,1.424,168,1.595,171,1.089,177,2.085,179,0.819,181,1.374,193,0.867,201,1.089,202,1.374,215,2.573,248,4.799,293,2.573,340,2.153,514,3.536,555,1.541,686,2.688,718,5.064,719,4.487,727,2.688,737,4.252,896,2.688,897,5.628,898,5.628,899,6.34,900,5.628,901,4.461,902,4.461,903,3.152,904,3.152,905,4.461,906,3.152,907,4.461,908,3.152,909,3.152,910,3.152,911,3.152,912,4.461,913,4.461,914,3.152,915,4.461,916,2.688,917,3.152,918,3.152,919,3.152,920,3.152,921,3.152,922,3.152,923,3.152,924,5.177,925,3.152,926,3.152,927,3.152,928,3.152,929,3.152,930,3.152]],["title/controllers/TestController.html",[0,0.367,57,2.417]],["body/controllers/TestController.html",[0,0.414,2,1.098,3,0.225,4,0.196,5,0.196,7,0.168,8,0.59,10,1.442,11,0.022,12,0.499,14,0.59,16,0.456,17,0.38,20,0.225,21,0.225,22,0.925,23,1.55,24,0.522,26,0.016,27,0.016,51,1.038,57,3.58,120,1.302,124,3.883,135,1.461,146,2.412,166,1.821,177,2.45,178,1.379,179,1.521,180,2.735,181,1.615,182,1.866,193,1.098,196,3.134,206,1.379,284,2.496,534,2.727,931,3.404,932,3.404,933,6.212,934,3.993,935,3.993,936,3.993,937,5.241,938,3.993,939,3.993,940,3.404]],["title/interfaces/Usuario.html",[578,1.654,759,2.042]],["body/interfaces/Usuario.html",[3,0.256,4,0.223,5,0.223,7,0.191,11,0.021,15,1.461,20,0.256,26,0.017,27,0.017,127,1.398,133,0.64,135,2.277,158,3.876,293,3.589,294,3.493,555,1.967,578,2.125,579,2.842,746,4.7,759,3.286,830,5.304,941,3.876,942,4.546,943,3.876,944,4.546]],["title/controllers/UsuariosController.html",[0,0.367,60,2.417]],["body/controllers/UsuariosController.html",[0,0.375,2,0.994,3,0.203,4,0.177,5,0.177,7,0.152,8,0.552,10,1.531,11,0.022,12,0.53,14,0.626,16,0.519,17,0.344,20,0.203,21,0.203,22,0.837,24,0.728,26,0.015,27,0.015,52,2.084,60,3.348,73,2.729,120,1.178,123,2.021,127,1.366,128,2.084,131,0.737,132,0.737,133,0.467,134,0.737,137,1.489,138,4.18,140,1.349,141,2.084,143,2.021,144,2.084,145,1.804,146,2.021,147,1.402,148,1.402,150,1.178,151,1.402,154,1.903,155,1.903,211,2.44,480,2.258,594,3.08,605,3.08,828,4.076,945,3.08,946,3.612,947,5.088,948,4.744,949,3.612,950,3.612,951,3.08,952,3.612,953,3.612,954,4.18,955,3.612,956,3.612,957,3.612,958,3.612,959,3.612,960,3.612,961,3.612]],["title/injectables/UsuariosService.html",[52,2.042,113,0.398]],["body/injectables/UsuariosService.html",[3,0.15,4,0.131,5,0.131,7,0.112,8,0.445,11,0.022,12,0.555,14,0.586,16,0.454,17,0.255,20,0.15,21,0.15,24,0.682,26,0.012,27,0.012,51,1.446,52,2.284,113,0.445,114,0.824,127,0.972,131,0.709,132,0.709,133,0.497,134,0.709,140,1.297,166,1.817,168,0.824,169,0.978,171,1.8,174,2.023,178,0.923,179,1.514,180,2.436,181,1.858,182,2.203,188,1.432,193,0.735,194,1.249,204,1.542,206,1.367,242,2.02,255,1.826,263,1.542,283,2.704,287,3.375,289,2.02,291,3.22,294,2.525,339,1.671,358,2.02,424,2.279,470,1.432,497,1.826,534,1.826,555,1.367,556,2.704,684,2.279,690,2.279,728,2.279,730,2.279,731,2.279,732,3.375,733,2.279,734,2.279,735,2.279,737,2.02,745,3.375,747,2.279,748,2.279,749,2.02,759,3.361,940,2.279,947,4.443,948,3.375,951,3.375,954,3.375,962,2.279,963,3.959,964,5.211,965,2.673,966,2.673,967,2.673,968,2.673,969,2.673,970,2.673,971,2.673,972,2.673,973,2.673,974,2.673,975,2.673,976,2.673,977,2.673,978,2.673,979,2.673,980,2.673,981,3.959,982,2.673,983,2.673,984,2.673,985,2.673,986,2.673,987,2.673,988,2.673,989,2.673,990,2.673,991,2.673]],["title/coverage.html",[992,3.652]],["body/coverage.html",[0,0.709,1,1.818,5,0.13,6,2.269,11,0.022,18,1.535,21,0.222,26,0.012,27,0.012,34,1.818,39,1.535,40,1.535,41,1.535,42,1.535,43,1.535,44,1.535,45,1.535,46,1.535,47,1.426,48,1.535,49,1.535,50,1.535,51,0.692,52,1.535,57,1.818,58,1.818,59,1.818,60,1.818,61,1.818,62,1.818,63,1.818,64,1.818,65,1.818,66,1.818,67,1.818,68,1.818,69,1.818,70,1.818,71,1.818,113,0.763,115,2.269,119,2.269,133,0.254,150,0.868,165,2.269,207,2.269,224,2.269,267,2.269,279,2.269,296,2.269,319,2.269,340,1.818,415,4.549,451,2.269,486,2.269,503,2.269,535,2.269,546,2.269,554,2.269,563,2.269,564,1.535,574,2.269,578,2.431,580,2.269,583,2.269,599,1.818,621,2.269,693,2.269,703,2.269,704,1.664,714,2.269,759,1.535,761,2.269,762,1.818,779,2.269,796,2.269,802,2.269,820,2.269,828,1.818,829,2.269,854,2.011,856,2.269,896,2.269,931,2.269,941,2.269,945,2.269,962,2.269,992,2.011,993,2.661,994,2.661,995,2.661,996,6.426,997,5.553,998,5.553,999,4.702,1000,5.2,1001,2.269,1002,6.021,1003,4.702,1004,2.269,1005,2.269,1006,2.661,1007,2.661,1008,2.661,1009,2.661,1010,2.661]],["title/dependencies.html",[31,2.908,1011,2.518]],["body/dependencies.html",[11,0.022,17,0.403,21,0.306,26,0.016,27,0.016,31,2.889,95,3.195,143,1.744,283,2.889,332,3.606,511,3.195,598,3.606,610,3.195,632,3.606,702,3.195,723,3.195,771,3.606,916,3.606,1012,4.229,1013,4.229,1014,5.441,1015,4.229,1016,4.229,1017,4.229,1018,4.229,1019,4.229,1020,4.229,1021,4.229,1022,4.229,1023,4.229,1024,4.229,1025,4.229,1026,4.229,1027,4.229,1028,4.229,1029,4.229,1030,4.229,1031,4.229,1032,4.229,1033,4.229,1034,4.229,1035,4.229,1036,4.229,1037,4.229,1038,4.229,1039,4.229,1040,4.229,1041,4.229,1042,4.229,1043,4.229,1044,4.229,1045,4.229,1046,4.229,1047,4.229]],["title/miscellaneous/enumerations.html",[1048,2.017,1049,3.63]],["body/miscellaneous/enumerations.html",[7,0.22,11,0.021,26,0.019,27,0.019,129,3.1,211,2.722,212,3.324,719,4.999,1048,3.574,1049,4.461,1050,6.206,1051,5.233,1052,5.233]],["title/miscellaneous/functions.html",[1048,2.017,1053,3.63]],["body/miscellaneous/functions.html",[7,0.231,11,0.019,26,0.019,27,0.019,34,4.611,1005,4.684,1048,3.752,1053,4.684,1054,5.493]],["title/index.html",[7,0.124,1055,2.953,1056,2.953]],["body/index.html",[4,0.193,11,0.022,26,0.016,27,0.016,188,2.111,932,4.43,992,2.977,1057,3.941,1058,3.941,1059,5.196,1060,3.941,1061,3.941,1062,3.941,1063,3.941,1064,3.941,1065,3.941,1066,3.36,1067,5.813,1068,3.941,1069,3.941,1070,3.941,1071,3.941,1072,5.813,1073,6.726,1074,3.941,1075,3.941,1076,3.941,1077,6.597,1078,3.941,1079,3.941,1080,5.196,1081,3.941,1082,3.941,1083,3.941,1084,3.941,1085,5.196,1086,3.941,1087,3.941,1088,3.941,1089,5.196,1090,5.196,1091,3.941,1092,3.941,1093,3.941,1094,3.941,1095,3.941,1096,3.36,1097,3.941,1098,3.941,1099,3.941,1100,3.941,1101,3.941,1102,3.941,1103,3.941,1104,3.941,1105,3.941,1106,3.36,1107,3.941,1108,3.941,1109,3.941,1110,3.941,1111,3.941,1112,3.941,1113,3.36]],["title/interfaces/login.html",[578,1.654,704,2.212]],["body/interfaces/login.html",[3,0.282,4,0.246,5,0.246,7,0.211,11,0.021,15,1.39,20,0.282,26,0.018,27,0.018,133,0.577,293,3.749,555,2.09,578,2.345,579,3.136,704,3.783,724,5.541,943,4.277,1004,4.277,1114,5.016]],["title/interfaces/materia.html",[578,1.654,762,2.417]],["body/interfaces/materia.html",[3,0.28,4,0.244,5,0.244,7,0.209,11,0.021,15,1.334,20,0.28,26,0.018,27,0.018,127,1.478,133,0.574,135,2.463,406,3.736,555,2.08,578,2.325,579,3.11,762,4.113,1001,4.242,1115,4.975]],["title/modules.html",[30,3.652]],["body/modules.html",[11,0.019,26,0.019,27,0.019,29,3.786,30,4.188,1096,4.726,1116,5.544,1117,5.544,1118,5.544]],["title/overview.html",[1119,4.122]],["body/overview.html",[2,1.009,11,0.022,18,3.235,26,0.015,27,0.015,28,3.742,29,5.038,31,2.505,32,3.126,33,3.126,34,2.505,35,3.126,36,3.126,37,3.126,38,3.126,39,3.235,40,3.235,41,3.235,42,3.235,43,3.235,44,3.235,45,3.235,46,3.235,47,3.003,48,3.235,49,3.235,50,3.235,51,1.457,52,3.235,53,4.222,54,3.126,55,3.126,114,1.13,206,1.71,264,2.116,410,2.77,579,2.292,692,2.77,854,2.77,1119,3.126,1120,3.667,1121,3.667]],["title/properties.html",[555,1.47,1011,2.518]],["body/properties.html",[11,0.022,26,0.019,27,0.019,555,1.872,1066,4.621,1106,4.621,1113,4.621,1122,5.42,1123,5.42,1124,5.42]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"controllers/CambioContraController.html":{},"injectables/CambioContraService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"controllers/EstadisticasController.html":{},"injectables/EstadisticasService.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"interfaces/Libro.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"classes/Libro_Upload.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"classes/RegisterUser.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"controllers/TestController.html":{},"interfaces/Usuario.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/login.html":{},"interfaces/materia.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":415,"title":{},"body":{"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"injectables/LibroService.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1123,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1046,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1026,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1025,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1007,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":996,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1002,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1000,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":997,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":998,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":999,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1003,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1008,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":206,"title":{},"body":{"injectables/AutorService.html":{},"injectables/BuscadorService.html":{},"injectables/CambioContraService.html":{},"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{},"classes/RegisterUser.html":{},"controllers/TestController.html":{},"injectables/UsuariosService.html":{},"overview.html":{}}}],["1,$2",{"_index":197,"title":{},"body":{"injectables/AutorService.html":{}}}],["1.1.1",{"_index":1042,"title":{},"body":{"dependencies.html":{}}}],["1.1.23",{"_index":1013,"title":{},"body":{"dependencies.html":{}}}],["1.20.2",{"_index":1021,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":1037,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":1018,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":289,"title":{},"body":{"injectables/CambioContraService.html":{},"classes/RegisterUser.html":{},"injectables/UsuariosService.html":{}}}],["10.0.0",{"_index":1014,"title":{},"body":{"dependencies.html":{}}}],["10.2.10",{"_index":1017,"title":{},"body":{"dependencies.html":{}}}],["129.0.0",{"_index":1034,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1121,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1120,"title":{},"body":{"overview.html":{}}}],["16.3.1",{"_index":1028,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":264,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"injectables/LibroService.html":{},"injectables/MateriaService.html":{},"overview.html":{}}}],["2',[hashedpassword,id",{"_index":295,"title":{},"body":{"injectables/CambioContraService.html":{}}}],["2)',[bod.nombre",{"_index":791,"title":{},"body":{"injectables/MateriaService.html":{}}}],["3",{"_index":409,"title":{},"body":{"injectables/CargaLLoteService.html":{},"injectables/LibroService.html":{}}}],["3)',[n,fk,id",{"_index":795,"title":{},"body":{"injectables/MateriaService.html":{}}}],["3.1.1",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["3000h",{"_index":753,"title":{},"body":{"injectables/LoginService.html":{}}}],["4",{"_index":410,"title":{},"body":{"injectables/CargaLLoteService.html":{},"injectables/LibroService.html":{},"overview.html":{}}}],["4.4.0",{"_index":1023,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":411,"title":{},"body":{"injectables/CargaLLoteService.html":{},"injectables/LibroService.html":{}}}],["5.0.3",{"_index":1041,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":1019,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":412,"title":{},"body":{"injectables/CargaLLoteService.html":{},"injectables/LibroService.html":{}}}],["7,$8",{"_index":413,"title":{},"body":{"injectables/CargaLLoteService.html":{},"injectables/LibroService.html":{}}}],["7.8.1",{"_index":1047,"title":{},"body":{"dependencies.html":{}}}],["8.11.3",{"_index":1043,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":1035,"title":{},"body":{"dependencies.html":{}}}],["9.4.1",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["a.fk_nacionalidad",{"_index":191,"title":{},"body":{"injectables/AutorService.html":{}}}],["a.id_autor",{"_index":183,"title":{},"body":{"injectables/AutorService.html":{},"injectables/BuscadorService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{}}}],["a.nombre",{"_index":184,"title":{},"body":{"injectables/AutorService.html":{},"injectables/BuscadorService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{}}}],["acceso",{"_index":879,"title":{},"body":{"guards/RolesGuard.html":{}}}],["actualizada",{"_index":502,"title":{},"body":{"injectables/CarreraService.html":{}}}],["actualusada",{"_index":691,"title":{},"body":{"injectables/LibroService.html":{}}}],["administrador",{"_index":211,"title":{},"body":{"controllers/BuscadorController.html":{},"controllers/CambioContraController.html":{},"controllers/CarreraController.html":{},"controllers/EstadisticasController.html":{},"controllers/LibroController.html":{},"controllers/MateriaController.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"controllers/UsuariosController.html":{},"miscellaneous/enumerations.html":{}}}],["administrador','profesor",{"_index":219,"title":{},"body":{"controllers/BuscadorController.html":{},"controllers/CambioContraController.html":{},"controllers/CarreraController.html":{},"controllers/DescargaController.html":{},"controllers/GetLibroController.html":{},"controllers/NacionalidadController.html":{}}}],["administrador'])@post",{"_index":807,"title":{},"body":{"controllers/NacionalidadController.html":{}}}],["administrador'])@usepipes(validationpipe",{"_index":952,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["administrador/carga_l_lote/carga_l_lote.controller",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["administrador/carga_l_lote/carga_l_lote.service",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["administrador/carrera/carrera.controller",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["administrador/carrera/carrera.service",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["administrador/estadisticas/estadisticas.controller",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["administrador/estadisticas/estadisticas.service",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["administrador/materia/materia.controller",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["administrador/materia/materia.service",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["administrador/nacionalidad/nacionalidad.controller",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["administrador/nacionalidad/nacionalidad.service",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["administrador/registrar_arc/registrar_arc.controller",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["administrador/registrar_arc/registrar_arc.service",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["administrador/usuarios/usuarios.controller",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["administrador/usuarios/usuarios.service",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["agregar",{"_index":249,"title":{},"body":{"injectables/BuscadorService.html":{}}}],["ajusta",{"_index":305,"title":{},"body":{"controllers/CargaLLoteController.html":{},"controllers/DescargaController.html":{}}}],["al",{"_index":423,"title":{},"body":{"injectables/CargaLLoteService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"guards/RolesGuard.html":{}}}],["amazing",{"_index":1097,"title":{},"body":{"index.html":{}}}],["ammada",{"_index":261,"title":{},"body":{"injectables/BuscadorService.html":{}}}],["ap",{"_index":476,"title":{},"body":{"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/LibroController.html":{}}}],["app",{"_index":1075,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_pipe",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application/pdf",{"_index":528,"title":{},"body":{"controllers/DescargaController.html":{}}}],["applications",{"_index":1065,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["archivo",{"_index":370,"title":{},"body":{"injectables/CargaLLoteService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{}}}],["archivo.pdf",{"_index":520,"title":{},"body":{"controllers/DescargaController.html":{}}}],["archivos",{"_index":395,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["asaltos",{"_index":976,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["async",{"_index":166,"title":{},"body":{"injectables/AutorService.html":{},"injectables/BuscadorService.html":{},"injectables/CambioContraService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"injectables/EstadisticasService.html":{},"injectables/GetLibroService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{},"injectables/SqlService.html":{},"controllers/TestController.html":{},"injectables/UsuariosService.html":{}}}],["attachment",{"_index":529,"title":{},"body":{"controllers/DescargaController.html":{}}}],["au1234_ggqqgato$$ap",{"_index":720,"title":{},"body":{"injectables/LoginService.html":{},"guards/RolesGuard.html":{}}}],["autenticación",{"_index":760,"title":{},"body":{"injectables/LoginService.html":{}}}],["auth",{"_index":1030,"title":{},"body":{"dependencies.html":{}}}],["author",{"_index":1106,"title":{},"body":{"index.html":{},"properties.html":{}}}],["autor",{"_index":121,"title":{},"body":{"controllers/AutorController.html":{},"injectables/LibroService.html":{}}}],["autor.service",{"_index":149,"title":{},"body":{"controllers/AutorController.html":{}}}],["autor_nombre",{"_index":239,"title":{},"body":{"injectables/BuscadorService.html":{}}}],["autorcontroller",{"_index":67,"title":{"controllers/AutorController.html":{}},"body":{"modules/AppModule.html":{},"controllers/AutorController.html":{},"coverage.html":{}}}],["autorizado",{"_index":895,"title":{},"body":{"guards/RolesGuard.html":{}}}],["autorservice",{"_index":39,"title":{"injectables/AutorService.html":{}},"body":{"modules/AppModule.html":{},"controllers/AutorController.html":{},"injectables/AutorService.html":{},"coverage.html":{},"overview.html":{}}}],["autro:autorservice",{"_index":153,"title":{},"body":{"controllers/AutorController.html":{}}}],["await",{"_index":181,"title":{},"body":{"injectables/AutorService.html":{},"injectables/BuscadorService.html":{},"injectables/CambioContraService.html":{},"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"injectables/DescargaService.html":{},"injectables/EstadisticasService.html":{},"injectables/GetLibroService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{},"injectables/SqlService.html":{},"controllers/TestController.html":{},"injectables/UsuariosService.html":{}}}],["axios",{"_index":332,"title":{},"body":{"injectables/CargaLLoteService.html":{},"dependencies.html":{}}}],["backers",{"_index":1098,"title":{},"body":{"index.html":{}}}],["base",{"_index":674,"title":{},"body":{"injectables/LibroService.html":{}}}],["bcrypt",{"_index":283,"title":{},"body":{"injectables/CambioContraService.html":{},"injectables/LoginService.html":{},"injectables/UsuariosService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":741,"title":{},"body":{"injectables/LoginService.html":{}}}],["bcrypt.gensalt(asaltos",{"_index":982,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["bcrypt.hash(contra",{"_index":288,"title":{},"body":{"injectables/CambioContraService.html":{}}}],["bcrypt.hash(user.password",{"_index":983,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["bod",{"_index":460,"title":{},"body":{"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"injectables/LibroService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{}}}],["bod.fk_carrera",{"_index":792,"title":{},"body":{"injectables/MateriaService.html":{}}}],["bod.nombre",{"_index":477,"title":{},"body":{"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"injectables/MateriaService.html":{}}}],["bod:any",{"_index":501,"title":{},"body":{"injectables/CarreraService.html":{}}}],["body",{"_index":143,"title":{},"body":{"controllers/AutorController.html":{},"controllers/CambioContraController.html":{},"controllers/CargaLLoteController.html":{},"controllers/CarreraController.html":{},"controllers/LibroController.html":{},"controllers/LoginController.html":{},"controllers/MateriaController.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"controllers/UsuariosController.html":{},"dependencies.html":{}}}],["body('libro",{"_index":607,"title":{},"body":{"controllers/LibroController.html":{}}}],["body('nacionalidad",{"_index":159,"title":{},"body":{"controllers/AutorController.html":{}}}],["body.datos",{"_index":314,"title":{},"body":{"controllers/CargaLLoteController.html":{}}}],["body.id_user.id_user",{"_index":315,"title":{},"body":{"controllers/CargaLLoteController.html":{}}}],["boolean",{"_index":866,"title":{},"body":{"guards/RolesGuard.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1118,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1116,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1060,"title":{},"body":{"index.html":{}}}],["buscador",{"_index":208,"title":{},"body":{"controllers/BuscadorController.html":{}}}],["buscador.service",{"_index":216,"title":{},"body":{"controllers/BuscadorController.html":{}}}],["buscador_libro",{"_index":209,"title":{},"body":{"controllers/BuscadorController.html":{},"controllers/CambioContraController.html":{}}}],["buscador_libro(@body()datos",{"_index":277,"title":{},"body":{"controllers/CambioContraController.html":{}}}],["buscador_libro(@query('cadena",{"_index":220,"title":{},"body":{"controllers/BuscadorController.html":{}}}],["buscador_libro(cadena",{"_index":210,"title":{},"body":{"controllers/BuscadorController.html":{}}}],["buscador_libro(datos",{"_index":270,"title":{},"body":{"controllers/CambioContraController.html":{}}}],["buscadorcontroller",{"_index":64,"title":{"controllers/BuscadorController.html":{}},"body":{"modules/AppModule.html":{},"controllers/BuscadorController.html":{},"coverage.html":{}}}],["buscadorservice",{"_index":40,"title":{"injectables/BuscadorService.html":{}},"body":{"modules/AppModule.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"coverage.html":{},"overview.html":{}}}],["buscar:buscadorservice",{"_index":218,"title":{},"body":{"controllers/BuscadorController.html":{}}}],["buscar_libros",{"_index":225,"title":{},"body":{"injectables/BuscadorService.html":{}}}],["buscar_libros(cadena",{"_index":227,"title":{},"body":{"injectables/BuscadorService.html":{}}}],["by_id",{"_index":452,"title":{},"body":{"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{}}}],["by_id(@param(\"id",{"_index":473,"title":{},"body":{"controllers/CarreraController.html":{},"controllers/LibroController.html":{},"controllers/MateriaController.html":{}}}],["by_id(id",{"_index":455,"title":{},"body":{"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{}}}],["by_id(id:number",{"_index":788,"title":{},"body":{"injectables/MateriaService.html":{}}}],["c",{"_index":244,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/LibroService.html":{}}}],["c.id_carrera",{"_index":246,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/LibroService.html":{}}}],["c.nombre",{"_index":237,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/LibroService.html":{}}}],["cadena",{"_index":214,"title":{},"body":{"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{}}}],["cadena:string,@query('carrera",{"_index":221,"title":{},"body":{"controllers/BuscadorController.html":{}}}],["cambiado",{"_index":852,"title":{},"body":{"classes/RegisterUser.html":{}}}],["cambiar",{"_index":259,"title":{},"body":{"injectables/BuscadorService.html":{}}}],["cambio",{"_index":268,"title":{},"body":{"controllers/CambioContraController.html":{}}}],["cambio:cambiocontraservice",{"_index":276,"title":{},"body":{"controllers/CambioContraController.html":{}}}],["cambio_contra.service",{"_index":274,"title":{},"body":{"controllers/CambioContraController.html":{}}}],["cambiocontracontroller",{"_index":69,"title":{"controllers/CambioContraController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CambioContraController.html":{},"coverage.html":{}}}],["cambiocontraservice",{"_index":41,"title":{"injectables/CambioContraService.html":{}},"body":{"modules/AppModule.html":{},"controllers/CambioContraController.html":{},"injectables/CambioContraService.html":{},"coverage.html":{},"overview.html":{}}}],["campo",{"_index":676,"title":{},"body":{"injectables/LibroService.html":{}}}],["canactivate",{"_index":857,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":862,"title":{},"body":{"guards/RolesGuard.html":{}}}],["caracteres",{"_index":851,"title":{},"body":{"classes/RegisterUser.html":{}}}],["caracteres.'})@isstring",{"_index":841,"title":{},"body":{"classes/RegisterUser.html":{}}}],["carga",{"_index":297,"title":{},"body":{"controllers/CargaLLoteController.html":{}}}],["carga_l_lote.service",{"_index":304,"title":{},"body":{"controllers/CargaLLoteController.html":{}}}],["carga_por_lote",{"_index":299,"title":{},"body":{"controllers/CargaLLoteController.html":{}}}],["carga_por_lote(@body",{"_index":313,"title":{},"body":{"controllers/CargaLLoteController.html":{}}}],["carga_por_lote(body",{"_index":300,"title":{},"body":{"controllers/CargaLLoteController.html":{}}}],["cargallotecontroller",{"_index":71,"title":{"controllers/CargaLLoteController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CargaLLoteController.html":{},"coverage.html":{}}}],["cargalloteservice",{"_index":42,"title":{"injectables/CargaLLoteService.html":{}},"body":{"modules/AppModule.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"coverage.html":{},"overview.html":{}}}],["carpeta",{"_index":657,"title":{},"body":{"injectables/LibroService.html":{}}}],["carrera",{"_index":198,"title":{},"body":{"injectables/AutorService.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{}}}],["carrera.service",{"_index":468,"title":{},"body":{"controllers/CarreraController.html":{}}}],["carrera:libroservice",{"_index":800,"title":{},"body":{"controllers/MilibroController.html":{}}}],["carrera:string",{"_index":222,"title":{},"body":{"controllers/BuscadorController.html":{}}}],["carreracontroller",{"_index":58,"title":{"controllers/CarreraController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CarreraController.html":{},"coverage.html":{}}}],["carreraservice",{"_index":43,"title":{"injectables/CarreraService.html":{}},"body":{"modules/AppModule.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"coverage.html":{},"overview.html":{}}}],["catch",{"_index":201,"title":{},"body":{"injectables/AutorService.html":{},"injectables/BuscadorService.html":{},"injectables/CambioContraService.html":{},"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"injectables/EstadisticasService.html":{},"injectables/GetLibroService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{}}}],["catch(error",{"_index":534,"title":{},"body":{"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"controllers/TestController.html":{},"injectables/UsuariosService.html":{}}}],["cedula",{"_index":724,"title":{},"body":{"injectables/LoginService.html":{},"interfaces/login.html":{}}}],["cedula:string",{"_index":1114,"title":{},"body":{"interfaces/login.html":{}}}],["chart.js",{"_index":1022,"title":{},"body":{"dependencies.html":{}}}],["charts",{"_index":1040,"title":{},"body":{"dependencies.html":{}}}],["cierra",{"_index":665,"title":{},"body":{"injectables/LibroService.html":{}}}],["class",{"_index":21,"title":{"classes/Libro_Upload.html":{},"classes/RegisterUser.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"controllers/CambioContraController.html":{},"injectables/CambioContraService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"controllers/EstadisticasController.html":{},"injectables/EstadisticasService.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"classes/Libro_Upload.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"classes/RegisterUser.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"controllers/TestController.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":692,"title":{},"body":{"classes/Libro_Upload.html":{},"classes/RegisterUser.html":{},"overview.html":{}}}],["client",{"_index":924,"title":{},"body":{"injectables/SqlService.html":{}}}],["client.query(sql",{"_index":926,"title":{},"body":{"injectables/SqlService.html":{}}}],["client.release",{"_index":930,"title":{},"body":{"injectables/SqlService.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["coalesce(count(p",{"_index":634,"title":{},"body":{"injectables/LibroService.html":{}}}],["coincide",{"_index":892,"title":{},"body":{"guards/RolesGuard.html":{}}}],["completa",{"_index":389,"title":{},"body":{"injectables/CargaLLoteService.html":{},"injectables/LibroService.html":{}}}],["compodoc/compodoc",{"_index":1012,"title":{},"body":{"dependencies.html":{}}}],["con",{"_index":609,"title":{},"body":{"controllers/LibroController.html":{},"injectables/LibroService.html":{}}}],["condición",{"_index":251,"title":{},"body":{"injectables/BuscadorService.html":{}}}],["configura",{"_index":754,"title":{},"body":{"injectables/LoginService.html":{}}}],["configurada",{"_index":346,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["console",{"_index":493,"title":{},"body":{"injectables/CarreraService.html":{}}}],["console.error('database",{"_index":928,"title":{},"body":{"injectables/SqlService.html":{}}}],["console.error('error",{"_index":422,"title":{},"body":{"injectables/CargaLLoteService.html":{},"injectables/LibroService.html":{}}}],["console.log(\"asdad",{"_index":816,"title":{},"body":{"controllers/NacionalidadController.html":{}}}],["console.log(\"entrop",{"_index":826,"title":{},"body":{"injectables/NacionalidadService.html":{}}}],["console.log(\"usuario",{"_index":987,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["console.log(error",{"_index":940,"title":{},"body":{"controllers/TestController.html":{},"injectables/UsuariosService.html":{}}}],["const",{"_index":179,"title":{},"body":{"injectables/AutorService.html":{},"injectables/BuscadorService.html":{},"injectables/CambioContraService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"injectables/GetLibroService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"controllers/TestController.html":{},"injectables/UsuariosService.html":{}}}],["constructor",{"_index":168,"title":{},"body":{"injectables/AutorService.html":{},"injectables/BuscadorService.html":{},"injectables/CambioContraService.html":{},"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"injectables/EstadisticasService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"injectables/UsuariosService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"controllers/CambioContraController.html":{},"injectables/CambioContraService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"injectables/DescargaService.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{},"controllers/LoginController.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"guards/RolesGuard.html":{},"controllers/TestController.html":{},"controllers/UsuariosController.html":{}}}],["constructor(public",{"_index":470,"title":{},"body":{"controllers/CarreraController.html":{},"controllers/EstadisticasController.html":{},"controllers/LibroController.html":{},"injectables/LoginService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"injectables/UsuariosService.html":{}}}],["constructor(reflector",{"_index":859,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(sql",{"_index":169,"title":{},"body":{"injectables/AutorService.html":{},"injectables/BuscadorService.html":{},"injectables/CambioContraService.html":{},"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"injectables/DescargaService.html":{},"injectables/EstadisticasService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{},"injectables/UsuariosService.html":{}}}],["construye",{"_index":656,"title":{},"body":{"injectables/LibroService.html":{}}}],["contenido",{"_index":669,"title":{},"body":{"injectables/LibroService.html":{}}}],["contentdisposition",{"_index":380,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["contentdisposition.match(/filename",{"_index":384,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["context",{"_index":865,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":873,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":881,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getresponse",{"_index":893,"title":{},"body":{"guards/RolesGuard.html":{}}}],["contra",{"_index":269,"title":{},"body":{"controllers/CambioContraController.html":{},"injectables/CambioContraService.html":{}}}],["contra(id",{"_index":281,"title":{},"body":{"injectables/CambioContraService.html":{}}}],["contra(id:string",{"_index":285,"title":{},"body":{"injectables/CambioContraService.html":{}}}],["contra:string",{"_index":286,"title":{},"body":{"injectables/CambioContraService.html":{}}}],["contraseña",{"_index":739,"title":{},"body":{"injectables/LoginService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AutorController.html":{},"controllers/BuscadorController.html":{},"controllers/CambioContraController.html":{},"controllers/CargaLLoteController.html":{},"controllers/CarreraController.html":{},"controllers/DescargaController.html":{},"controllers/EstadisticasController.html":{},"controllers/GetLibroController.html":{},"controllers/LibroController.html":{},"controllers/LoginController.html":{},"controllers/MateriaController.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"controllers/TestController.html":{},"controllers/UsuariosController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AutorController.html":{},"controllers/BuscadorController.html":{},"controllers/CambioContraController.html":{},"controllers/CargaLLoteController.html":{},"controllers/CarreraController.html":{},"controllers/DescargaController.html":{},"controllers/EstadisticasController.html":{},"controllers/GetLibroController.html":{},"controllers/LibroController.html":{},"controllers/LoginController.html":{},"controllers/MateriaController.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"controllers/TestController.html":{},"controllers/UsuariosController.html":{},"coverage.html":{}}}],["controller('autor",{"_index":152,"title":{},"body":{"controllers/AutorController.html":{}}}],["controller('buscador",{"_index":217,"title":{},"body":{"controllers/BuscadorController.html":{}}}],["controller('cambio",{"_index":275,"title":{},"body":{"controllers/CambioContraController.html":{}}}],["controller('carga",{"_index":311,"title":{},"body":{"controllers/CargaLLoteController.html":{}}}],["controller('carrera",{"_index":469,"title":{},"body":{"controllers/CarreraController.html":{}}}],["controller('descarga",{"_index":513,"title":{},"body":{"controllers/DescargaController.html":{}}}],["controller('estadisticas",{"_index":551,"title":{},"body":{"controllers/EstadisticasController.html":{}}}],["controller('get",{"_index":570,"title":{},"body":{"controllers/GetLibroController.html":{}}}],["controller('libro",{"_index":601,"title":{},"body":{"controllers/LibroController.html":{}}}],["controller('login",{"_index":709,"title":{},"body":{"controllers/LoginController.html":{}}}],["controller('materia",{"_index":773,"title":{},"body":{"controllers/MateriaController.html":{}}}],["controller('milibro",{"_index":799,"title":{},"body":{"controllers/MilibroController.html":{}}}],["controller('nacionalidad",{"_index":813,"title":{},"body":{"controllers/NacionalidadController.html":{}}}],["controller('test",{"_index":936,"title":{},"body":{"controllers/TestController.html":{}}}],["controller('usuarios_regis",{"_index":957,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AutorController.html":{},"controllers/BuscadorController.html":{},"controllers/CambioContraController.html":{},"controllers/CargaLLoteController.html":{},"controllers/CarreraController.html":{},"controllers/DescargaController.html":{},"controllers/EstadisticasController.html":{},"controllers/GetLibroController.html":{},"controllers/LibroController.html":{},"controllers/LoginController.html":{},"controllers/MateriaController.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"controllers/TestController.html":{},"controllers/UsuariosController.html":{},"overview.html":{}}}],["coverage",{"_index":992,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["crea",{"_index":660,"title":{},"body":{"injectables/LibroService.html":{}}}],["creada",{"_index":199,"title":{},"body":{"injectables/AutorService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{}}}],["creado",{"_index":684,"title":{},"body":{"injectables/LibroService.html":{},"injectables/UsuariosService.html":{}}}],["creados",{"_index":989,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["crear",{"_index":122,"title":{},"body":{"controllers/AutorController.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{}}}],["crear(@body",{"_index":475,"title":{},"body":{"controllers/CarreraController.html":{},"controllers/MateriaController.html":{}}}],["crear(@body('nombre",{"_index":157,"title":{},"body":{"controllers/AutorController.html":{}}}],["crear(bod",{"_index":458,"title":{},"body":{"controllers/CarreraController.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{}}}],["crear(file",{"_index":585,"title":{},"body":{"controllers/LibroController.html":{}}}],["crear(libros",{"_index":624,"title":{},"body":{"injectables/LibroService.html":{}}}],["crear(nombre",{"_index":125,"title":{},"body":{"controllers/AutorController.html":{},"injectables/CarreraService.html":{}}}],["crear_autor",{"_index":167,"title":{},"body":{"injectables/AutorService.html":{},"injectables/NacionalidadService.html":{}}}],["crear_autor(nombre",{"_index":172,"title":{},"body":{"injectables/AutorService.html":{},"injectables/NacionalidadService.html":{}}}],["crear_nacionalidad",{"_index":803,"title":{},"body":{"controllers/NacionalidadController.html":{}}}],["crear_nacionalidad(@body",{"_index":818,"title":{},"body":{"controllers/NacionalidadController.html":{}}}],["crear_nacionalidad(datos",{"_index":805,"title":{},"body":{"controllers/NacionalidadController.html":{}}}],["créalo",{"_index":360,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["current_date",{"_index":408,"title":{},"body":{"injectables/CargaLLoteService.html":{},"injectables/LibroService.html":{}}}],["código",{"_index":837,"title":{},"body":{"classes/RegisterUser.html":{}}}],["d",{"_index":431,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["data",{"_index":650,"title":{},"body":{"injectables/LibroService.html":{}}}],["data.numpages",{"_index":679,"title":{},"body":{"injectables/LibroService.html":{}}}],["database",{"_index":897,"title":{},"body":{"injectables/SqlService.html":{}}}],["date.now",{"_index":387,"title":{},"body":{"injectables/CargaLLoteService.html":{},"injectables/LibroService.html":{}}}],["dato",{"_index":316,"title":{},"body":{"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{}}}],["dato.carrera",{"_index":416,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["dato.descripcion",{"_index":414,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["dato.titulo",{"_index":317,"title":{},"body":{"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{}}}],["datos",{"_index":272,"title":{},"body":{"controllers/CambioContraController.html":{},"controllers/CargaLLoteController.html":{},"controllers/CarreraController.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{}}}],["datos.cedula",{"_index":725,"title":{},"body":{"injectables/LoginService.html":{}}}],["datos.nombre",{"_index":620,"title":{},"body":{"controllers/LibroController.html":{}}}],["datos.password",{"_index":726,"title":{},"body":{"injectables/LoginService.html":{}}}],["datos:any",{"_index":484,"title":{},"body":{"controllers/CarreraController.html":{}}}],["datos:login",{"_index":712,"title":{},"body":{"controllers/LoginController.html":{}}}],["de",{"_index":252,"title":{},"body":{"injectables/BuscadorService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"classes/RegisterUser.html":{}}}],["debe",{"_index":838,"title":{},"body":{"classes/RegisterUser.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decodedtoken",{"_index":887,"title":{},"body":{"guards/RolesGuard.html":{}}}],["decodedtoken.nombre_rol",{"_index":890,"title":{},"body":{"guards/RolesGuard.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AutorController.html":{},"controllers/BuscadorController.html":{},"controllers/CambioContraController.html":{},"controllers/CargaLLoteController.html":{},"controllers/CarreraController.html":{},"controllers/DescargaController.html":{},"controllers/EstadisticasController.html":{},"controllers/GetLibroController.html":{},"controllers/LibroController.html":{},"classes/Libro_Upload.html":{},"controllers/LoginController.html":{},"controllers/MateriaController.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"classes/RegisterUser.html":{},"controllers/TestController.html":{},"controllers/UsuariosController.html":{}}}],["default",{"_index":718,"title":{},"body":{"injectables/LoginService.html":{},"injectables/SqlService.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"controllers/CambioContraController.html":{},"injectables/CambioContraService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"controllers/EstadisticasController.html":{},"injectables/EstadisticasService.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"classes/Libro_Upload.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"classes/RegisterUser.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"controllers/TestController.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["del",{"_index":376,"title":{},"body":{"injectables/CargaLLoteService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"classes/RegisterUser.html":{}}}],["delete",{"_index":144,"title":{},"body":{"controllers/AutorController.html":{},"controllers/CarreraController.html":{},"controllers/LibroController.html":{},"controllers/MateriaController.html":{},"controllers/NacionalidadController.html":{},"controllers/UsuariosController.html":{}}}],["delete(\":id",{"_index":479,"title":{},"body":{"controllers/CarreraController.html":{},"controllers/LibroController.html":{},"controllers/MateriaController.html":{},"controllers/NacionalidadController.html":{}}}],["delete(':id",{"_index":138,"title":{},"body":{"controllers/AutorController.html":{},"controllers/UsuariosController.html":{}}}],["delete(':id')@useguards(rolesguard)@setmetadata('roles",{"_index":464,"title":{},"body":{"controllers/CarreraController.html":{},"controllers/LibroController.html":{},"controllers/MateriaController.html":{},"controllers/NacionalidadController.html":{}}}],["delete_user",{"_index":963,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["delete_user(id",{"_index":966,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["delete_user(id:number",{"_index":973,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["deniega",{"_index":886,"title":{},"body":{"guards/RolesGuard.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descarga",{"_index":504,"title":{},"body":{"controllers/DescargaController.html":{}}}],["descarga.service",{"_index":512,"title":{},"body":{"controllers/DescargaController.html":{}}}],["descargacontroller",{"_index":65,"title":{"controllers/DescargaController.html":{}},"body":{"modules/AppModule.html":{},"controllers/DescargaController.html":{},"coverage.html":{}}}],["descargados",{"_index":536,"title":{},"body":{"injectables/DescargaService.html":{}}}],["descargados(id_user",{"_index":538,"title":{},"body":{"injectables/DescargaService.html":{}}}],["descargados(id_user:string",{"_index":541,"title":{},"body":{"injectables/DescargaService.html":{}}}],["descargar",{"_index":369,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["descargararchivo",{"_index":320,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["descargararchivo(dato",{"_index":324,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["descargararchivo(dato:any",{"_index":335,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["descargaservice",{"_index":44,"title":{"injectables/DescargaService.html":{}},"body":{"modules/AppModule.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"coverage.html":{},"overview.html":{}}}],["descripcion",{"_index":402,"title":{},"body":{"injectables/CargaLLoteService.html":{},"interfaces/Libro.html":{},"injectables/LibroService.html":{},"classes/Libro_Upload.html":{}}}],["description",{"_index":1066,"title":{},"body":{"index.html":{},"properties.html":{}}}],["después",{"_index":667,"title":{},"body":{"injectables/LibroService.html":{}}}],["destino",{"_index":357,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["development",{"_index":1076,"title":{},"body":{"index.html":{}}}],["devolver",{"_index":445,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["directorio",{"_index":356,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["directoriodestino",{"_index":337,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["disposition",{"_index":382,"title":{},"body":{"injectables/CargaLLoteService.html":{},"controllers/DescargaController.html":{}}}],["docs",{"_index":344,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["documentation",{"_index":993,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":1027,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1086,"title":{},"body":{"index.html":{}}}],["editar",{"_index":453,"title":{},"body":{"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{}}}],["editar(@param(\"id",{"_index":483,"title":{},"body":{"controllers/CarreraController.html":{},"controllers/LibroController.html":{},"controllers/MateriaController.html":{}}}],["editar(id",{"_index":461,"title":{},"body":{"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{}}}],["editar(id:number",{"_index":793,"title":{},"body":{"injectables/MateriaService.html":{}}}],["efficient",{"_index":1061,"title":{},"body":{"index.html":{}}}],["el",{"_index":263,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/CargaLLoteService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"guards/RolesGuard.html":{},"injectables/UsuariosService.html":{}}}],["eliminada",{"_index":500,"title":{},"body":{"injectables/CarreraService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{}}}],["eliminado",{"_index":690,"title":{},"body":{"injectables/LibroService.html":{},"injectables/UsuariosService.html":{}}}],["eliminar",{"_index":123,"title":{},"body":{"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"controllers/UsuariosController.html":{}}}],["eliminar(@param(\"id",{"_index":480,"title":{},"body":{"controllers/CarreraController.html":{},"controllers/LibroController.html":{},"controllers/MateriaController.html":{},"controllers/NacionalidadController.html":{},"controllers/UsuariosController.html":{}}}],["eliminar(@param('id",{"_index":162,"title":{},"body":{"controllers/AutorController.html":{}}}],["eliminar(id",{"_index":137,"title":{},"body":{"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"controllers/UsuariosController.html":{}}}],["eliminar(id:number",{"_index":203,"title":{},"body":{"injectables/AutorService.html":{}}}],["else{return",{"_index":498,"title":{},"body":{"injectables/CarreraService.html":{}}}],["email",{"_index":746,"title":{},"body":{"injectables/LoginService.html":{},"classes/RegisterUser.html":{},"interfaces/Usuario.html":{}}}],["email:string",{"_index":942,"title":{},"body":{"interfaces/Usuario.html":{}}}],["en",{"_index":393,"title":{},"body":{"injectables/CargaLLoteService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"classes/RegisterUser.html":{}}}],["encabezado",{"_index":378,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["encontrado",{"_index":497,"title":{},"body":{"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/LoginService.html":{},"injectables/UsuariosService.html":{}}}],["encuentran",{"_index":443,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["endindex",{"_index":432,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["enlace",{"_index":441,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["entorno",{"_index":343,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["entre",{"_index":840,"title":{},"body":{"classes/RegisterUser.html":{}}}],["enumerations",{"_index":1049,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":202,"title":{},"body":{"injectables/AutorService.html":{},"injectables/BuscadorService.html":{},"injectables/CambioContraService.html":{},"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"injectables/EstadisticasService.html":{},"injectables/GetLibroService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{}}}],["error('error",{"_index":426,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["error('la",{"_index":341,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["error.message",{"_index":686,"title":{},"body":{"injectables/LibroService.html":{},"injectables/SqlService.html":{}}}],["errores",{"_index":616,"title":{},"body":{"controllers/LibroController.html":{}}}],["es",{"_index":617,"title":{},"body":{"controllers/LibroController.html":{}}}],["escribir",{"_index":668,"title":{},"body":{"injectables/LibroService.html":{}}}],["escritura",{"_index":661,"title":{},"body":{"injectables/LibroService.html":{}}}],["especifica",{"_index":875,"title":{},"body":{"guards/RolesGuard.html":{}}}],["esperadas",{"_index":444,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["est",{"_index":345,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["esta",{"_index":260,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/LibroService.html":{}}}],["estadisticas",{"_index":547,"title":{},"body":{"controllers/EstadisticasController.html":{}}}],["estadisticas.service",{"_index":550,"title":{},"body":{"controllers/EstadisticasController.html":{}}}],["estadisticascontroller",{"_index":61,"title":{"controllers/EstadisticasController.html":{}},"body":{"modules/AppModule.html":{},"controllers/EstadisticasController.html":{},"coverage.html":{}}}],["estadisticasservice",{"_index":45,"title":{"injectables/EstadisticasService.html":{}},"body":{"modules/AppModule.html":{},"controllers/EstadisticasController.html":{},"injectables/EstadisticasService.html":{},"coverage.html":{},"overview.html":{}}}],["estadostica",{"_index":552,"title":{},"body":{"controllers/EstadisticasController.html":{}}}],["estar",{"_index":839,"title":{},"body":{"classes/RegisterUser.html":{}}}],["estructura",{"_index":523,"title":{},"body":{"controllers/DescargaController.html":{}}}],["estudiante",{"_index":212,"title":{},"body":{"controllers/BuscadorController.html":{},"controllers/CambioContraController.html":{},"controllers/CarreraController.html":{},"controllers/DescargaController.html":{},"controllers/GetLibroController.html":{},"controllers/LibroController.html":{},"miscellaneous/enumerations.html":{}}}],["estén",{"_index":439,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["example",{"_index":1072,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":863,"title":{},"body":{"guards/RolesGuard.html":{}}}],["existe",{"_index":358,"title":{},"body":{"injectables/CargaLLoteService.html":{},"injectables/LibroService.html":{},"injectables/UsuariosService.html":{}}}],["existe.length",{"_index":980,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["existente",{"_index":979,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["exitosamente",{"_index":200,"title":{},"body":{"injectables/AutorService.html":{},"injectables/CarreraService.html":{},"injectables/LibroService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{}}}],["expiración",{"_index":755,"title":{},"body":{"injectables/LoginService.html":{}}}],["expiresin",{"_index":752,"title":{},"body":{"injectables/LoginService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"controllers/CambioContraController.html":{},"injectables/CambioContraService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"controllers/EstadisticasController.html":{},"injectables/EstadisticasService.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"interfaces/Libro.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"classes/Libro_Upload.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"classes/RegisterUser.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"controllers/TestController.html":{},"interfaces/Usuario.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"interfaces/login.html":{},"interfaces/materia.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["express",{"_index":511,"title":{},"body":{"controllers/DescargaController.html":{},"controllers/LibroController.html":{},"dependencies.html":{}}}],["false",{"_index":884,"title":{},"body":{"guards/RolesGuard.html":{}}}],["fecha",{"_index":561,"title":{},"body":{"injectables/EstadisticasService.html":{}}}],["fecha_descarga)values($1,$2,current_date)',[id_user,libro_id",{"_index":545,"title":{},"body":{"injectables/DescargaService.html":{}}}],["fecha_publ",{"_index":401,"title":{},"body":{"injectables/CargaLLoteService.html":{},"injectables/LibroService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"controllers/CambioContraController.html":{},"injectables/CambioContraService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"controllers/EstadisticasController.html":{},"injectables/EstadisticasService.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"interfaces/Libro.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"classes/Libro_Upload.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"classes/RegisterUser.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"controllers/TestController.html":{},"interfaces/Usuario.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"interfaces/login.html":{},"interfaces/materia.html":{}}}],["file.buffer",{"_index":645,"title":{},"body":{"injectables/LibroService.html":{}}}],["file.originalname",{"_index":655,"title":{},"body":{"injectables/LibroService.html":{}}}],["fileinterceptor",{"_index":597,"title":{},"body":{"controllers/LibroController.html":{}}}],["filename",{"_index":507,"title":{},"body":{"controllers/DescargaController.html":{}}}],["filename=${pdffilename",{"_index":530,"title":{},"body":{"controllers/DescargaController.html":{}}}],["filepath",{"_index":390,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["fileservice",{"_index":312,"title":{},"body":{"controllers/CargaLLoteController.html":{}}}],["finally",{"_index":929,"title":{},"body":{"injectables/SqlService.html":{}}}],["fk",{"_index":794,"title":{},"body":{"injectables/MateriaService.html":{}}}],["fk_autor",{"_index":405,"title":{},"body":{"injectables/CargaLLoteService.html":{},"interfaces/Libro.html":{},"injectables/LibroService.html":{},"classes/Libro_Upload.html":{}}}],["fk_autor:number",{"_index":582,"title":{},"body":{"interfaces/Libro.html":{},"classes/Libro_Upload.html":{}}}],["fk_carrera",{"_index":406,"title":{},"body":{"injectables/CargaLLoteService.html":{},"interfaces/Libro.html":{},"injectables/LibroService.html":{},"classes/Libro_Upload.html":{},"injectables/MateriaService.html":{},"interfaces/materia.html":{}}}],["fk_carrera:number",{"_index":1115,"title":{},"body":{"interfaces/materia.html":{}}}],["fk_creador",{"_index":404,"title":{},"body":{"injectables/CargaLLoteService.html":{},"interfaces/Libro.html":{},"injectables/LibroService.html":{},"classes/Libro_Upload.html":{}}}],["fk_libro",{"_index":688,"title":{},"body":{"injectables/LibroService.html":{}}}],["fk_nacionalidad",{"_index":195,"title":{},"body":{"injectables/AutorService.html":{}}}],["fk_rol",{"_index":830,"title":{},"body":{"classes/RegisterUser.html":{},"interfaces/Usuario.html":{}}}],["fk_rol:number",{"_index":944,"title":{},"body":{"interfaces/Usuario.html":{}}}],["fk_user,fk_libro",{"_index":544,"title":{},"body":{"injectables/DescargaService.html":{}}}],["flujo",{"_index":666,"title":{},"body":{"injectables/LibroService.html":{}}}],["framework",{"_index":1059,"title":{},"body":{"index.html":{}}}],["fs",{"_index":333,"title":{},"body":{"injectables/CargaLLoteService.html":{},"controllers/DescargaController.html":{},"injectables/LibroService.html":{}}}],["fs.createreadstream(pdfpath",{"_index":526,"title":{},"body":{"controllers/DescargaController.html":{}}}],["fs.createwritestream(filepath",{"_index":398,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["fs.createwritestream(pdfpath",{"_index":663,"title":{},"body":{"injectables/LibroService.html":{}}}],["fs.existssync(directoriodestino",{"_index":361,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["fs.existssync(pdfpath",{"_index":524,"title":{},"body":{"controllers/DescargaController.html":{}}}],["fs.mkdirsync(directoriodestino",{"_index":362,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["función",{"_index":450,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["function",{"_index":1006,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1053,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["genera",{"_index":652,"title":{},"body":{"injectables/LibroService.html":{}}}],["generado",{"_index":613,"title":{},"body":{"controllers/LibroController.html":{}}}],["get(\":id",{"_index":472,"title":{},"body":{"controllers/CarreraController.html":{},"controllers/LibroController.html":{}}}],["get(':id",{"_index":567,"title":{},"body":{"controllers/GetLibroController.html":{},"controllers/MateriaController.html":{}}}],["get(':id')@useguards(rolesguard)@setmetadata('roles",{"_index":456,"title":{},"body":{"controllers/CarreraController.html":{},"controllers/LibroController.html":{},"controllers/MateriaController.html":{}}}],["get()@useguards(rolesguard)@setmetadata('roles",{"_index":141,"title":{},"body":{"controllers/AutorController.html":{},"controllers/BuscadorController.html":{},"controllers/EstadisticasController.html":{},"controllers/LibroController.html":{},"controllers/MateriaController.html":{},"controllers/UsuariosController.html":{}}}],["get()@useguards(rolesguard)@useguards(rolesguard)@setmetadata('roles",{"_index":466,"title":{},"body":{"controllers/CarreraController.html":{}}}],["get_libro.service",{"_index":569,"title":{},"body":{"controllers/GetLibroController.html":{}}}],["get_nacionalidad",{"_index":804,"title":{},"body":{"controllers/NacionalidadController.html":{}}}],["get_rol",{"_index":947,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["get_usets",{"_index":964,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["getdrivefileid",{"_index":321,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["getdrivefileid(link",{"_index":326,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getlibrocontroller",{"_index":66,"title":{"controllers/GetLibroController.html":{}},"body":{"modules/AppModule.html":{},"controllers/GetLibroController.html":{},"coverage.html":{}}}],["getlibroservice",{"_index":46,"title":{"injectables/GetLibroService.html":{}},"body":{"modules/AppModule.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"coverage.html":{},"overview.html":{}}}],["getpdf",{"_index":505,"title":{},"body":{"controllers/DescargaController.html":{}}}],["getpdf(@res",{"_index":515,"title":{},"body":{"controllers/DescargaController.html":{}}}],["getpdf(res",{"_index":506,"title":{},"body":{"controllers/DescargaController.html":{}}}],["getting",{"_index":1055,"title":{"index.html":{}},"body":{}}],["gg",{"_index":614,"title":{},"body":{"controllers/LibroController.html":{}}}],["google",{"_index":1029,"title":{},"body":{"dependencies.html":{}}}],["googleapis",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["googledrivefileid",{"_index":347,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["googledrivefileid}.pdf",{"_index":388,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["group",{"_index":639,"title":{},"body":{"injectables/LibroService.html":{}}}],["grow",{"_index":1093,"title":{},"body":{"index.html":{}}}],["guard",{"_index":854,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guarda",{"_index":392,"title":{},"body":{"injectables/CargaLLoteService.html":{},"injectables/LibroService.html":{}}}],["guardad",{"_index":933,"title":{},"body":{"controllers/TestController.html":{}}}],["guardar",{"_index":425,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["guards",{"_index":855,"title":{},"body":{"guards/RolesGuard.html":{}}}],["hashedpassword",{"_index":287,"title":{},"body":{"injectables/CambioContraService.html":{},"injectables/UsuariosService.html":{}}}],["hay",{"_index":885,"title":{},"body":{"guards/RolesGuard.html":{}}}],["hello",{"_index":117,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":1103,"title":{},"body":{"index.html":{}}}],["historial_iniciados",{"_index":557,"title":{},"body":{"injectables/EstadisticasService.html":{}}}],["host",{"_index":898,"title":{},"body":{"injectables/SqlService.html":{}}}],["http",{"_index":367,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["httpexception",{"_index":302,"title":{},"body":{"controllers/CargaLLoteController.html":{},"injectables/LibroService.html":{}}}],["httpexception('archivo",{"_index":646,"title":{},"body":{"injectables/LibroService.html":{}}}],["httpexception(`error",{"_index":685,"title":{},"body":{"injectables/LibroService.html":{}}}],["https://drive.google.com/uc?id=${googledrivefileid",{"_index":354,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["https://drive.google.com/uc?id=${imagen_url",{"_index":352,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["https://nestjs.com",{"_index":1110,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":303,"title":{},"body":{"controllers/CargaLLoteController.html":{},"injectables/LibroService.html":{}}}],["httpstatus.bad_request",{"_index":648,"title":{},"body":{"injectables/LibroService.html":{}}}],["httpstatus.internal_server_error",{"_index":687,"title":{},"body":{"injectables/LibroService.html":{}}}],["id",{"_index":140,"title":{},"body":{"controllers/AutorController.html":{},"injectables/AutorService.html":{},"injectables/BuscadorService.html":{},"injectables/CambioContraService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["id:number",{"_index":163,"title":{},"body":{"controllers/AutorController.html":{},"controllers/GetLibroController.html":{},"injectables/MateriaService.html":{}}}],["id:string",{"_index":336,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["id_autor",{"_index":205,"title":{},"body":{"injectables/AutorService.html":{}}}],["id_carrera",{"_index":494,"title":{},"body":{"injectables/CarreraService.html":{},"injectables/LibroService.html":{}}}],["id_libro",{"_index":508,"title":{},"body":{"controllers/DescargaController.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{}}}],["id_materia",{"_index":789,"title":{},"body":{"injectables/MateriaService.html":{}}}],["id_nacionalidad",{"_index":827,"title":{},"body":{"injectables/NacionalidadService.html":{}}}],["id_user",{"_index":294,"title":{},"body":{"injectables/CambioContraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"injectables/LoginService.html":{},"classes/RegisterUser.html":{},"interfaces/Usuario.html":{},"injectables/UsuariosService.html":{}}}],["identifier",{"_index":994,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":770,"title":{},"body":{"controllers/MateriaController.html":{}}}],["if(existe.length){console.log(\"usuario",{"_index":978,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["if(id",{"_index":974,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["if(reslut.length",{"_index":495,"title":{},"body":{"injectables/CarreraService.html":{}}}],["imagen",{"_index":351,"title":{},"body":{"injectables/CargaLLoteService.html":{},"interfaces/Libro.html":{},"injectables/LibroService.html":{},"classes/Libro_Upload.html":{}}}],["imagen:string",{"_index":581,"title":{},"body":{"interfaces/Libro.html":{},"classes/Libro_Upload.html":{}}}],["imagen_url",{"_index":349,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["implements",{"_index":870,"title":{},"body":{"guards/RolesGuard.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"controllers/CambioContraController.html":{},"injectables/CambioContraService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"controllers/EstadisticasController.html":{},"injectables/EstadisticasService.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"classes/Libro_Upload.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"classes/RegisterUser.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"controllers/TestController.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["imports",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["incorrecta",{"_index":758,"title":{},"body":{"injectables/LoginService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"controllers/CambioContraController.html":{},"injectables/CambioContraService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"controllers/EstadisticasController.html":{},"injectables/EstadisticasService.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"interfaces/Libro.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"classes/Libro_Upload.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"classes/RegisterUser.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"controllers/TestController.html":{},"interfaces/Usuario.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/login.html":{},"interfaces/materia.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"controllers/CambioContraController.html":{},"injectables/CambioContraService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"controllers/EstadisticasController.html":{},"injectables/EstadisticasService.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"interfaces/Libro.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"classes/Libro_Upload.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"classes/RegisterUser.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"controllers/TestController.html":{},"interfaces/Usuario.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"interfaces/login.html":{},"interfaces/materia.html":{}}}],["injectable",{"_index":113,"title":{"injectables/AppService.html":{},"injectables/AutorService.html":{},"injectables/BuscadorService.html":{},"injectables/CambioContraService.html":{},"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"injectables/DescargaService.html":{},"injectables/EstadisticasService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{},"injectables/SqlService.html":{},"injectables/UsuariosService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AutorService.html":{},"injectables/BuscadorService.html":{},"injectables/CambioContraService.html":{},"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"injectables/DescargaService.html":{},"injectables/EstadisticasService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"injectables/UsuariosService.html":{},"coverage.html":{}}}],["injectables",{"_index":114,"title":{},"body":{"injectables/AppService.html":{},"injectables/AutorService.html":{},"injectables/BuscadorService.html":{},"injectables/CambioContraService.html":{},"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"injectables/DescargaService.html":{},"injectables/EstadisticasService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{},"injectables/SqlService.html":{},"injectables/UsuariosService.html":{},"overview.html":{}}}],["inner",{"_index":187,"title":{},"body":{"injectables/AutorService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{}}}],["inserta",{"_index":672,"title":{},"body":{"injectables/LibroService.html":{}}}],["inst.rol",{"_index":732,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UsuariosService.html":{}}}],["inst.secion",{"_index":562,"title":{},"body":{"injectables/EstadisticasService.html":{}}}],["inst.secion(fk_user,fecha",{"_index":756,"title":{},"body":{"injectables/LoginService.html":{}}}],["inst.usuario",{"_index":291,"title":{},"body":{"injectables/CambioContraService.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"injectables/UsuariosService.html":{}}}],["inst.usuario(id_user,email,password,nombre,fk_rol",{"_index":984,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["installation",{"_index":1071,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1074,"title":{},"body":{"index.html":{}}}],["interface",{"_index":578,"title":{"interfaces/Libro.html":{},"interfaces/Usuario.html":{},"interfaces/login.html":{},"interfaces/materia.html":{}},"body":{"interfaces/Libro.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"interfaces/login.html":{},"interfaces/materia.html":{}}}],["interfaces",{"_index":579,"title":{},"body":{"interfaces/Libro.html":{},"interfaces/Usuario.html":{},"interfaces/login.html":{},"interfaces/materia.html":{},"overview.html":{}}}],["isnotempty",{"_index":694,"title":{},"body":{"classes/Libro_Upload.html":{},"classes/RegisterUser.html":{}}}],["isnotempty()@isnumber",{"_index":833,"title":{},"body":{"classes/RegisterUser.html":{}}}],["isnotempty()@isstring",{"_index":831,"title":{},"body":{"classes/RegisterUser.html":{}}}],["isnotempty()@length(1",{"_index":835,"title":{},"body":{"classes/RegisterUser.html":{}}}],["isnumber",{"_index":845,"title":{},"body":{"classes/RegisterUser.html":{}}}],["isstring",{"_index":846,"title":{},"body":{"classes/RegisterUser.html":{}}}],["join",{"_index":188,"title":{},"body":{"injectables/AutorService.html":{},"injectables/BuscadorService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"injectables/UsuariosService.html":{},"index.html":{}}}],["json.parse(libros",{"_index":644,"title":{},"body":{"injectables/LibroService.html":{}}}],["jsonwebtoken",{"_index":723,"title":{},"body":{"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["jwt",{"_index":722,"title":{},"body":{"injectables/LoginService.html":{},"guards/RolesGuard.html":{}}}],["jwt.sign",{"_index":744,"title":{},"body":{"injectables/LoginService.html":{}}}],["jwt.verify(token",{"_index":888,"title":{},"body":{"guards/RolesGuard.html":{}}}],["jwtsecretkey",{"_index":715,"title":{},"body":{"injectables/LoginService.html":{},"guards/RolesGuard.html":{}}}],["kamil",{"_index":1107,"title":{},"body":{"index.html":{}}}],["l",{"_index":241,"title":{},"body":{"injectables/BuscadorService.html":{},"controllers/CargaLLoteController.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{}}}],["l.descripcion",{"_index":234,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{}}}],["l.fecha_publ",{"_index":233,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{}}}],["l.fk_autor",{"_index":247,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{}}}],["l.fk_carrera",{"_index":245,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/LibroService.html":{}}}],["l.fk_creador",{"_index":638,"title":{},"body":{"injectables/LibroService.html":{}}}],["l.id_libro",{"_index":230,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/LibroService.html":{}}}],["l.imagen",{"_index":235,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{}}}],["l.nombre_archivo",{"_index":232,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{}}}],["l.num_paginas",{"_index":236,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{}}}],["l.titulo",{"_index":231,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{}}}],["la",{"_index":250,"title":{},"body":{"injectables/BuscadorService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/DescargaController.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"classes/RegisterUser.html":{}}}],["las",{"_index":436,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["left",{"_index":242,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/LibroService.html":{},"injectables/UsuariosService.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["length",{"_index":847,"title":{},"body":{"classes/RegisterUser.html":{}}}],["length(1",{"_index":850,"title":{},"body":{"classes/RegisterUser.html":{}}}],["library",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["libro",{"_index":564,"title":{"interfaces/Libro.html":{}},"body":{"controllers/GetLibroController.html":{},"interfaces/Libro.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"coverage.html":{}}}],["libro.descripcion",{"_index":678,"title":{},"body":{"injectables/LibroService.html":{}}}],["libro.fk_autor",{"_index":681,"title":{},"body":{"injectables/LibroService.html":{}}}],["libro.fk_carrera",{"_index":682,"title":{},"body":{"injectables/LibroService.html":{}}}],["libro.fk_creador",{"_index":680,"title":{},"body":{"injectables/LibroService.html":{}}}],["libro.imagen",{"_index":683,"title":{},"body":{"injectables/LibroService.html":{}}}],["libro.interface",{"_index":596,"title":{},"body":{"controllers/LibroController.html":{},"injectables/LibroService.html":{}}}],["libro.service",{"_index":595,"title":{},"body":{"controllers/LibroController.html":{},"controllers/MilibroController.html":{}}}],["libro.titulo",{"_index":677,"title":{},"body":{"injectables/LibroService.html":{}}}],["libro:getlibroservice",{"_index":571,"title":{},"body":{"controllers/GetLibroController.html":{}}}],["libro_byid",{"_index":565,"title":{},"body":{"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{}}}],["libro_byid(@param('id",{"_index":572,"title":{},"body":{"controllers/GetLibroController.html":{}}}],["libro_byid(id",{"_index":566,"title":{},"body":{"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{}}}],["libro_byid(id:number",{"_index":577,"title":{},"body":{"injectables/GetLibroService.html":{}}}],["libro_id",{"_index":539,"title":{},"body":{"injectables/DescargaService.html":{}}}],["libro_id:number",{"_index":542,"title":{},"body":{"injectables/DescargaService.html":{}}}],["libro_upload",{"_index":599,"title":{"classes/Libro_Upload.html":{}},"body":{"controllers/LibroController.html":{},"classes/Libro_Upload.html":{},"coverage.html":{}}}],["librocontroller",{"_index":62,"title":{"controllers/LibroController.html":{}},"body":{"modules/AppModule.html":{},"controllers/LibroController.html":{},"coverage.html":{}}}],["libros",{"_index":626,"title":{},"body":{"injectables/LibroService.html":{}}}],["libros.autor",{"_index":186,"title":{},"body":{"injectables/AutorService.html":{},"injectables/BuscadorService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{}}}],["libros.carrera",{"_index":243,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/CarreraService.html":{},"injectables/LibroService.html":{}}}],["libros.libro",{"_index":240,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/CargaLLoteService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{}}}],["libros.materia",{"_index":787,"title":{},"body":{"injectables/MateriaService.html":{}}}],["libros.materia(nombre",{"_index":790,"title":{},"body":{"injectables/MateriaService.html":{}}}],["libros.nacionalida",{"_index":189,"title":{},"body":{"injectables/AutorService.html":{},"injectables/NacionalidadService.html":{}}}],["libros.nacionalidad",{"_index":937,"title":{},"body":{"controllers/TestController.html":{}}}],["libros_bloque",{"_index":322,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["libros_bloque(dato",{"_index":330,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["libroservice",{"_index":47,"title":{"injectables/LibroService.html":{}},"body":{"modules/AppModule.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"controllers/MilibroController.html":{},"coverage.html":{},"overview.html":{}}}],["license",{"_index":1113,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1090,"title":{},"body":{"index.html":{}}}],["link",{"_index":328,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["link.indexof('/d",{"_index":428,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["link.indexof('/view",{"_index":433,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["link.substring(startindex",{"_index":442,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["llama",{"_index":608,"title":{},"body":{"controllers/LibroController.html":{}}}],["local",{"_index":396,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["login",{"_index":704,"title":{"interfaces/login.html":{}},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{},"coverage.html":{},"interfaces/login.html":{}}}],["login(@body",{"_index":711,"title":{},"body":{"controllers/LoginController.html":{}}}],["login(datos",{"_index":705,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["login.dto",{"_index":707,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["login.service",{"_index":708,"title":{},"body":{"controllers/LoginController.html":{}}}],["login/login.controller",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["login/login.service",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["login:loginservice",{"_index":710,"title":{},"body":{"controllers/LoginController.html":{}}}],["logincontroller",{"_index":63,"title":{"controllers/LoginController.html":{}},"body":{"modules/AppModule.html":{},"controllers/LoginController.html":{},"coverage.html":{}}}],["loginservice",{"_index":48,"title":{"injectables/LoginService.html":{}},"body":{"modules/AppModule.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"coverage.html":{},"overview.html":{}}}],["longitud",{"_index":836,"title":{},"body":{"classes/RegisterUser.html":{}}}],["los",{"_index":673,"title":{},"body":{"injectables/LibroService.html":{}}}],["lote",{"_index":298,"title":{},"body":{"controllers/CargaLLoteController.html":{}}}],["lts.1",{"_index":1038,"title":{},"body":{"dependencies.html":{}}}],["lugar",{"_index":853,"title":{},"body":{"classes/RegisterUser.html":{}}}],["manejar",{"_index":446,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["manejo",{"_index":615,"title":{},"body":{"controllers/LibroController.html":{}}}],["matches",{"_index":383,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["matches[1",{"_index":386,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"controllers/CambioContraController.html":{},"injectables/CambioContraService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"controllers/EstadisticasController.html":{},"injectables/EstadisticasService.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"interfaces/Libro.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"classes/Libro_Upload.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"classes/RegisterUser.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"controllers/TestController.html":{},"interfaces/Usuario.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/login.html":{},"interfaces/materia.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["materia",{"_index":762,"title":{"interfaces/materia.html":{}},"body":{"controllers/MateriaController.html":{},"coverage.html":{},"interfaces/materia.html":{}}}],["materia.interface",{"_index":772,"title":{},"body":{"controllers/MateriaController.html":{}}}],["materia.service",{"_index":769,"title":{},"body":{"controllers/MateriaController.html":{}}}],["materiacontroller",{"_index":59,"title":{"controllers/MateriaController.html":{}},"body":{"modules/AppModule.html":{},"controllers/MateriaController.html":{},"coverage.html":{}}}],["materiaservice",{"_index":49,"title":{"injectables/MateriaService.html":{}},"body":{"modules/AppModule.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"coverage.html":{},"overview.html":{}}}],["maxlength",{"_index":848,"title":{},"body":{"classes/RegisterUser.html":{}}}],["mesage",{"_index":689,"title":{},"body":{"injectables/LibroService.html":{}}}],["message",{"_index":496,"title":{},"body":{"injectables/CarreraService.html":{},"controllers/LibroController.html":{},"injectables/LoginService.html":{},"injectables/NacionalidadService.html":{},"classes/RegisterUser.html":{},"guards/RolesGuard.html":{}}}],["message\":\"usuario",{"_index":975,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["metadata",{"_index":1045,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":372,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"controllers/CambioContraController.html":{},"injectables/CambioContraService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"controllers/EstadisticasController.html":{},"injectables/EstadisticasService.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"controllers/TestController.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["middlewareconsumer",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["milibro",{"_index":797,"title":{},"body":{"controllers/MilibroController.html":{}}}],["milibrocontroller",{"_index":70,"title":{"controllers/MilibroController.html":{}},"body":{"modules/AppModule.html":{},"controllers/MilibroController.html":{},"coverage.html":{}}}],["minlength",{"_index":849,"title":{},"body":{"classes/RegisterUser.html":{}}}],["miscellaneous",{"_index":1048,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":1089,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1080,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":1102,"title":{},"body":{"index.html":{}}}],["multer",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":1108,"title":{},"body":{"index.html":{}}}],["n",{"_index":190,"title":{},"body":{"injectables/AutorService.html":{},"injectables/MateriaService.html":{}}}],["n.id_nacionalidad",{"_index":192,"title":{},"body":{"injectables/AutorService.html":{}}}],["n.nombre",{"_index":185,"title":{},"body":{"injectables/AutorService.html":{}}}],["nacionalidad",{"_index":126,"title":{},"body":{"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/NacionalidadController.html":{}}}],["nacionalidad.service",{"_index":812,"title":{},"body":{"controllers/NacionalidadController.html":{}}}],["nacionalidad:nacionalidadservice",{"_index":814,"title":{},"body":{"controllers/NacionalidadController.html":{}}}],["nacionalidad:number",{"_index":160,"title":{},"body":{"controllers/AutorController.html":{},"injectables/AutorService.html":{}}}],["nacionalidadcontroller",{"_index":68,"title":{"controllers/NacionalidadController.html":{}},"body":{"modules/AppModule.html":{},"controllers/NacionalidadController.html":{},"coverage.html":{}}}],["nacionalidadservice",{"_index":50,"title":{"injectables/NacionalidadService.html":{}},"body":{"modules/AppModule.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"coverage.html":{},"overview.html":{}}}],["name",{"_index":132,"title":{},"body":{"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"controllers/CambioContraController.html":{},"injectables/CambioContraService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"injectables/EstadisticasService.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["necesario",{"_index":618,"title":{},"body":{"controllers/LibroController.html":{}}}],["necesidades",{"_index":448,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["nest",{"_index":1067,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1112,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"controllers/CambioContraController.html":{},"injectables/CambioContraService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"controllers/EstadisticasController.html":{},"injectables/EstadisticasService.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"controllers/TestController.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":1015,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":598,"title":{},"body":{"controllers/LibroController.html":{},"dependencies.html":{}}}],["new",{"_index":340,"title":{},"body":{"injectables/CargaLLoteService.html":{},"injectables/LibroService.html":{},"injectables/SqlService.html":{},"coverage.html":{}}}],["newfilename",{"_index":612,"title":{},"body":{"controllers/LibroController.html":{}}}],["ng2",{"_index":1039,"title":{},"body":{"dependencies.html":{}}}],["nico",{"_index":653,"title":{},"body":{"injectables/LibroService.html":{}}}],["ningún",{"_index":876,"title":{},"body":{"guards/RolesGuard.html":{}}}],["node.js",{"_index":1058,"title":{},"body":{"index.html":{}}}],["nombre",{"_index":135,"title":{},"body":{"controllers/AutorController.html":{},"injectables/AutorService.html":{},"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{},"classes/RegisterUser.html":{},"controllers/TestController.html":{},"interfaces/Usuario.html":{},"interfaces/materia.html":{}}}],["nombre:string",{"_index":158,"title":{},"body":{"controllers/AutorController.html":{},"interfaces/Usuario.html":{}}}],["nombre_archivo",{"_index":407,"title":{},"body":{"injectables/CargaLLoteService.html":{},"injectables/LibroService.html":{}}}],["nombre_carrera",{"_index":238,"title":{},"body":{"injectables/BuscadorService.html":{}}}],["nombre_rol",{"_index":749,"title":{},"body":{"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"injectables/UsuariosService.html":{}}}],["nombreoriginal",{"_index":385,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["npm",{"_index":1073,"title":{},"body":{"index.html":{}}}],["nuevo",{"_index":671,"title":{},"body":{"injectables/LibroService.html":{}}}],["null",{"_index":329,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["num_paginas",{"_index":403,"title":{},"body":{"injectables/CargaLLoteService.html":{},"interfaces/Libro.html":{},"injectables/LibroService.html":{},"classes/Libro_Upload.html":{}}}],["number",{"_index":127,"title":{},"body":{"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"injectables/DescargaService.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"interfaces/Libro.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"classes/Libro_Upload.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"classes/RegisterUser.html":{},"interfaces/Usuario.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"interfaces/materia.html":{}}}],["o",{"_index":424,"title":{},"body":{"injectables/CargaLLoteService.html":{},"injectables/UsuariosService.html":{}}}],["obtiene",{"_index":375,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["ok",{"_index":499,"title":{},"body":{"injectables/CarreraService.html":{}}}],["omitir",{"_index":430,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["open",{"_index":1091,"title":{},"body":{"index.html":{}}}],["optional",{"_index":134,"title":{},"body":{"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"controllers/CambioContraController.html":{},"injectables/CambioContraService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"injectables/EstadisticasService.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["original",{"_index":377,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["out",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":1119,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":636,"title":{},"body":{"injectables/LibroService.html":{}}}],["p.fk_libro",{"_index":637,"title":{},"body":{"injectables/LibroService.html":{}}}],["p.id_user",{"_index":642,"title":{},"body":{"injectables/LibroService.html":{}}}],["p.nombre",{"_index":640,"title":{},"body":{"injectables/LibroService.html":{}}}],["package",{"_index":1011,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":368,"title":{},"body":{"injectables/CargaLLoteService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{}}}],["param",{"_index":145,"title":{},"body":{"controllers/AutorController.html":{},"controllers/CarreraController.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"controllers/LibroController.html":{},"controllers/MateriaController.html":{},"controllers/NacionalidadController.html":{},"controllers/UsuariosController.html":{}}}],["parameters",{"_index":131,"title":{},"body":{"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"controllers/CambioContraController.html":{},"injectables/CambioContraService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"injectables/EstadisticasService.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["params",{"_index":248,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/SqlService.html":{}}}],["params.push(carrera",{"_index":265,"title":{},"body":{"injectables/BuscadorService.html":{}}}],["parse",{"_index":632,"title":{},"body":{"injectables/LibroService.html":{},"dependencies.html":{}}}],["parser",{"_index":1020,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":293,"title":{},"body":{"injectables/CambioContraService.html":{},"injectables/LoginService.html":{},"classes/RegisterUser.html":{},"injectables/SqlService.html":{},"interfaces/Usuario.html":{},"interfaces/login.html":{}}}],["password:string",{"_index":943,"title":{},"body":{"interfaces/Usuario.html":{},"interfaces/login.html":{}}}],["password:this.password",{"_index":922,"title":{},"body":{"injectables/SqlService.html":{}}}],["password=process.env.pass",{"_index":917,"title":{},"body":{"injectables/SqlService.html":{}}}],["passwordmatch",{"_index":740,"title":{},"body":{"injectables/LoginService.html":{}}}],["path",{"_index":334,"title":{},"body":{"injectables/CargaLLoteService.html":{},"controllers/DescargaController.html":{},"injectables/LibroService.html":{}}}],["path.join",{"_index":659,"title":{},"body":{"injectables/LibroService.html":{}}}],["path.join(directoriodestino",{"_index":391,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["path.join(process.env.docs",{"_index":522,"title":{},"body":{"controllers/DescargaController.html":{}}}],["pdf",{"_index":610,"title":{},"body":{"controllers/LibroController.html":{},"injectables/LibroService.html":{},"dependencies.html":{}}}],["pdfbuffer",{"_index":649,"title":{},"body":{"injectables/LibroService.html":{}}}],["pdffilename",{"_index":519,"title":{},"body":{"controllers/DescargaController.html":{}}}],["pdfparse",{"_index":631,"title":{},"body":{"injectables/LibroService.html":{}}}],["pdfparse(pdfbuffer",{"_index":651,"title":{},"body":{"injectables/LibroService.html":{}}}],["pdfpath",{"_index":521,"title":{},"body":{"controllers/DescargaController.html":{},"injectables/LibroService.html":{}}}],["pdfs",{"_index":658,"title":{},"body":{"injectables/LibroService.html":{}}}],["pdfstream",{"_index":525,"title":{},"body":{"controllers/DescargaController.html":{}}}],["pdfstream.pipe(res",{"_index":531,"title":{},"body":{"controllers/DescargaController.html":{}}}],["permite",{"_index":878,"title":{},"body":{"guards/RolesGuard.html":{}}}],["pg",{"_index":916,"title":{},"body":{"injectables/SqlService.html":{},"dependencies.html":{}}}],["please",{"_index":1100,"title":{},"body":{"index.html":{}}}],["pool",{"_index":899,"title":{},"body":{"injectables/SqlService.html":{}}}],["poolclient",{"_index":915,"title":{},"body":{"injectables/SqlService.html":{}}}],["por",{"_index":262,"title":{},"body":{"injectables/BuscadorService.html":{}}}],["port",{"_index":900,"title":{},"body":{"injectables/SqlService.html":{}}}],["post",{"_index":146,"title":{},"body":{"controllers/AutorController.html":{},"controllers/CambioContraController.html":{},"controllers/CargaLLoteController.html":{},"controllers/CarreraController.html":{},"controllers/LibroController.html":{},"controllers/LoginController.html":{},"controllers/MateriaController.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"controllers/TestController.html":{},"controllers/UsuariosController.html":{}}}],["post()@useguards(rolesguard)@setmetadata('roles",{"_index":128,"title":{},"body":{"controllers/AutorController.html":{},"controllers/CambioContraController.html":{},"controllers/CarreraController.html":{},"controllers/MateriaController.html":{},"controllers/MilibroController.html":{},"controllers/UsuariosController.html":{}}}],["post()@usepipes(validationpipe)@useinterceptors(undefined",{"_index":586,"title":{},"body":{"controllers/LibroController.html":{}}}],["prefix",{"_index":120,"title":{},"body":{"controllers/AutorController.html":{},"controllers/BuscadorController.html":{},"controllers/CambioContraController.html":{},"controllers/CargaLLoteController.html":{},"controllers/CarreraController.html":{},"controllers/DescargaController.html":{},"controllers/EstadisticasController.html":{},"controllers/GetLibroController.html":{},"controllers/LibroController.html":{},"controllers/LoginController.html":{},"controllers/MateriaController.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"controllers/TestController.html":{},"controllers/UsuariosController.html":{}}}],["presentes",{"_index":440,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["private",{"_index":514,"title":{},"body":{"controllers/DescargaController.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{}}}],["procesar",{"_index":619,"title":{},"body":{"controllers/LibroController.html":{}}}],["process.env.database",{"_index":905,"title":{},"body":{"injectables/SqlService.html":{}}}],["process.env.docs",{"_index":338,"title":{},"body":{"injectables/CargaLLoteService.html":{},"injectables/LibroService.html":{}}}],["process.env.host",{"_index":907,"title":{},"body":{"injectables/SqlService.html":{}}}],["process.env.pass",{"_index":909,"title":{},"body":{"injectables/SqlService.html":{}}}],["process.env.port",{"_index":912,"title":{},"body":{"injectables/SqlService.html":{}}}],["process.env.user",{"_index":913,"title":{},"body":{"injectables/SqlService.html":{}}}],["production",{"_index":1082,"title":{},"body":{"index.html":{}}}],["profesor",{"_index":129,"title":{},"body":{"controllers/AutorController.html":{},"controllers/BuscadorController.html":{},"controllers/CambioContraController.html":{},"controllers/CarreraController.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"controllers/MilibroController.html":{},"miscellaneous/enumerations.html":{}}}],["profesor','administrador",{"_index":801,"title":{},"body":{"controllers/MilibroController.html":{}}}],["profesor','administrador','estudiante",{"_index":604,"title":{},"body":{"controllers/LibroController.html":{}}}],["profesor'])@get",{"_index":810,"title":{},"body":{"controllers/NacionalidadController.html":{}}}],["profesor/autor/autor.controller",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["profesor/autor/autor.service",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["profesor/libro/libro.controller",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["profesor/libro/libro.service",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["profesor/libro/milibro/milibro.controller",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["progressive",{"_index":1057,"title":{},"body":{"index.html":{}}}],["project",{"_index":1092,"title":{},"body":{"index.html":{}}}],["promise",{"_index":177,"title":{},"body":{"injectables/AutorService.html":{},"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"injectables/NacionalidadService.html":{},"injectables/SqlService.html":{},"controllers/TestController.html":{}}}],["promise((resolve",{"_index":417,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["properties",{"_index":555,"title":{"properties.html":{}},"body":{"injectables/EstadisticasService.html":{},"interfaces/Libro.html":{},"classes/Libro_Upload.html":{},"injectables/LoginService.html":{},"injectables/MateriaService.html":{},"classes/RegisterUser.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"interfaces/Usuario.html":{},"injectables/UsuariosService.html":{},"interfaces/login.html":{},"interfaces/materia.html":{},"properties.html":{}}}],["proporciona",{"_index":256,"title":{},"body":{"injectables/BuscadorService.html":{}}}],["provide",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":556,"title":{},"body":{"injectables/EstadisticasService.html":{},"injectables/LoginService.html":{},"injectables/MateriaService.html":{},"injectables/UsuariosService.html":{}}}],["put",{"_index":273,"title":{},"body":{"controllers/CambioContraController.html":{},"controllers/CarreraController.html":{},"controllers/LibroController.html":{},"controllers/MateriaController.html":{}}}],["put(\":id",{"_index":482,"title":{},"body":{"controllers/CarreraController.html":{},"controllers/LibroController.html":{},"controllers/MateriaController.html":{}}}],["put(':id')@useguards(rolesguard)@setmetadata('roles",{"_index":462,"title":{},"body":{"controllers/CarreraController.html":{},"controllers/LibroController.html":{},"controllers/MateriaController.html":{}}}],["que",{"_index":435,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["query",{"_index":215,"title":{},"body":{"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"controllers/CambioContraController.html":{},"controllers/DescargaController.html":{},"controllers/LibroController.html":{},"injectables/SqlService.html":{}}}],["query('filename",{"_index":516,"title":{},"body":{"controllers/DescargaController.html":{}}}],["query('id_libro",{"_index":518,"title":{},"body":{"controllers/DescargaController.html":{}}}],["query('id_user",{"_index":517,"title":{},"body":{"controllers/DescargaController.html":{}}}],["query(sql",{"_index":902,"title":{},"body":{"injectables/SqlService.html":{}}}],["r",{"_index":733,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UsuariosService.html":{}}}],["r.id_rol",{"_index":735,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UsuariosService.html":{}}}],["r.nombre_rol",{"_index":730,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UsuariosService.html":{}}}],["read",{"_index":1101,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AutorService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"injectables/NacionalidadService.html":{},"classes/RegisterUser.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"controllers/TestController.html":{}}}],["realiza",{"_index":365,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["recursive",{"_index":363,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["reflect",{"_index":1044,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":860,"title":{},"body":{"guards/RolesGuard.html":{}}}],["register",{"_index":948,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["register(usuarios",{"_index":951,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["registeruser",{"_index":828,"title":{"classes/RegisterUser.html":{}},"body":{"classes/RegisterUser.html":{},"controllers/UsuariosController.html":{},"coverage.html":{}}}],["registrararccontroller",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["registrararcservice",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["registro_iniciado",{"_index":548,"title":{},"body":{"controllers/EstadisticasController.html":{}}}],["reject",{"_index":418,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["repository",{"_index":1070,"title":{},"body":{"index.html":{}}}],["request",{"_index":880,"title":{},"body":{"guards/RolesGuard.html":{}}}],["request.headers.authorization?.replace('bearer",{"_index":882,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles",{"_index":871,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.includes(userrole",{"_index":891,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.length",{"_index":874,"title":{},"body":{"guards/RolesGuard.html":{}}}],["res",{"_index":510,"title":{},"body":{"controllers/DescargaController.html":{}}}],["res.setheader('content",{"_index":527,"title":{},"body":{"controllers/DescargaController.html":{}}}],["res.status(404).send('archivo",{"_index":533,"title":{},"body":{"controllers/DescargaController.html":{}}}],["reset",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["reslut",{"_index":180,"title":{},"body":{"injectables/AutorService.html":{},"injectables/CambioContraService.html":{},"injectables/CarreraService.html":{},"injectables/DescargaService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{},"injectables/NacionalidadService.html":{},"controllers/TestController.html":{},"injectables/UsuariosService.html":{}}}],["reslut.length",{"_index":643,"title":{},"body":{"injectables/LibroService.html":{}}}],["resolve",{"_index":420,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["response",{"_index":371,"title":{},"body":{"injectables/CargaLLoteService.html":{},"controllers/DescargaController.html":{},"guards/RolesGuard.html":{}}}],["response.data.pipe(writer",{"_index":399,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["response.headers['content",{"_index":381,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["response.status(403).json",{"_index":894,"title":{},"body":{"guards/RolesGuard.html":{}}}],["responsetype",{"_index":373,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["respuesta",{"_index":379,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["result",{"_index":727,"title":{},"body":{"injectables/LoginService.html":{},"injectables/SqlService.html":{}}}],["result.length",{"_index":736,"title":{},"body":{"injectables/LoginService.html":{}}}],["result.rows",{"_index":927,"title":{},"body":{"injectables/SqlService.html":{}}}],["result[0",{"_index":738,"title":{},"body":{"injectables/LoginService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"controllers/CambioContraController.html":{},"injectables/CambioContraService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"controllers/EstadisticasController.html":{},"injectables/EstadisticasService.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"interfaces/Libro.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"classes/Libro_Upload.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"classes/RegisterUser.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"controllers/TestController.html":{},"interfaces/Usuario.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/login.html":{},"interfaces/materia.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"controllers/CambioContraController.html":{},"injectables/CambioContraService.html":{},"injectables/CargaLLoteService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"injectables/DescargaService.html":{},"controllers/EstadisticasController.html":{},"injectables/EstadisticasService.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"controllers/TestController.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"controllers/CambioContraController.html":{},"injectables/CambioContraService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"controllers/EstadisticasController.html":{},"injectables/EstadisticasService.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"controllers/TestController.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["right",{"_index":641,"title":{},"body":{"injectables/LibroService.html":{}}}],["rol",{"_index":877,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles",{"_index":1050,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rolesguard",{"_index":150,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/AutorController.html":{},"controllers/BuscadorController.html":{},"controllers/CambioContraController.html":{},"controllers/CarreraController.html":{},"controllers/DescargaController.html":{},"controllers/EstadisticasController.html":{},"controllers/GetLibroController.html":{},"controllers/LibroController.html":{},"controllers/MateriaController.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"guards/RolesGuard.html":{},"controllers/UsuariosController.html":{},"coverage.html":{}}}],["run",{"_index":1077,"title":{},"body":{"index.html":{}}}],["ruta",{"_index":306,"title":{},"body":{"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/DescargaController.html":{},"injectables/LibroService.html":{}}}],["rxjs",{"_index":771,"title":{},"body":{"controllers/MateriaController.html":{},"dependencies.html":{}}}],["salt",{"_index":981,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["scalable",{"_index":1062,"title":{},"body":{"index.html":{}}}],["se",{"_index":255,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/CargaLLoteService.html":{},"guards/RolesGuard.html":{},"injectables/UsuariosService.html":{}}}],["según",{"_index":307,"title":{},"body":{"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/DescargaController.html":{}}}],["select",{"_index":229,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/LibroService.html":{}}}],["server",{"_index":1063,"title":{},"body":{"index.html":{}}}],["servicio",{"_index":310,"title":{},"body":{"controllers/CargaLLoteController.html":{},"controllers/LibroController.html":{}}}],["set",{"_index":292,"title":{},"body":{"injectables/CambioContraService.html":{},"injectables/CarreraService.html":{},"injectables/LibroService.html":{},"injectables/MateriaService.html":{}}}],["setforbiddenresponse",{"_index":858,"title":{},"body":{"guards/RolesGuard.html":{}}}],["setforbiddenresponse(context",{"_index":867,"title":{},"body":{"guards/RolesGuard.html":{}}}],["setmetadata",{"_index":147,"title":{},"body":{"controllers/AutorController.html":{},"controllers/BuscadorController.html":{},"controllers/CambioContraController.html":{},"controllers/CarreraController.html":{},"controllers/DescargaController.html":{},"controllers/EstadisticasController.html":{},"controllers/GetLibroController.html":{},"controllers/LibroController.html":{},"controllers/MateriaController.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"controllers/UsuariosController.html":{}}}],["setmetadata('roles",{"_index":155,"title":{},"body":{"controllers/AutorController.html":{},"controllers/BuscadorController.html":{},"controllers/CambioContraController.html":{},"controllers/CarreraController.html":{},"controllers/DescargaController.html":{},"controllers/EstadisticasController.html":{},"controllers/GetLibroController.html":{},"controllers/LibroController.html":{},"controllers/MateriaController.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"controllers/UsuariosController.html":{}}}],["si",{"_index":254,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/CargaLLoteService.html":{},"controllers/LibroController.html":{},"guards/RolesGuard.html":{}}}],["side",{"_index":1064,"title":{},"body":{"index.html":{}}}],["sistema",{"_index":394,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["solicitud",{"_index":366,"title":{},"body":{"injectables/CargaLLoteService.html":{},"controllers/LibroController.html":{}}}],["solo",{"_index":253,"title":{},"body":{"injectables/BuscadorService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"controllers/CambioContraController.html":{},"injectables/CambioContraService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"controllers/EstadisticasController.html":{},"injectables/EstadisticasService.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"interfaces/Libro.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"classes/Libro_Upload.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"classes/RegisterUser.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"controllers/TestController.html":{},"interfaces/Usuario.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"index.html":{},"interfaces/login.html":{},"interfaces/materia.html":{}}}],["sponsors",{"_index":1095,"title":{},"body":{"index.html":{}}}],["sql",{"_index":171,"title":{},"body":{"injectables/AutorService.html":{},"injectables/BuscadorService.html":{},"injectables/CambioContraService.html":{},"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"injectables/DescargaService.html":{},"injectables/EstadisticasService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{},"injectables/SqlService.html":{},"injectables/UsuariosService.html":{}}}],["sql/sql.service",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["sql:sqlservice",{"_index":284,"title":{},"body":{"injectables/CambioContraService.html":{},"injectables/DescargaService.html":{},"injectables/EstadisticasService.html":{},"injectables/GetLibroService.html":{},"controllers/TestController.html":{}}}],["sqlservice",{"_index":51,"title":{"injectables/SqlService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AutorService.html":{},"injectables/BuscadorService.html":{},"injectables/CambioContraService.html":{},"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"injectables/DescargaService.html":{},"injectables/EstadisticasService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{},"injectables/SqlService.html":{},"controllers/TestController.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"overview.html":{}}}],["src/.../main.ts",{"_index":1054,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../rol.enum.ts",{"_index":1051,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/administrador/carga_l_lote/carga_l_lote.controller.ts",{"_index":296,"title":{},"body":{"controllers/CargaLLoteController.html":{},"coverage.html":{}}}],["src/administrador/carga_l_lote/carga_l_lote.controller.ts:10",{"_index":301,"title":{},"body":{"controllers/CargaLLoteController.html":{}}}],["src/administrador/carga_l_lote/carga_l_lote.service.ts",{"_index":319,"title":{},"body":{"injectables/CargaLLoteService.html":{},"coverage.html":{}}}],["src/administrador/carga_l_lote/carga_l_lote.service.ts:12",{"_index":325,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["src/administrador/carga_l_lote/carga_l_lote.service.ts:66",{"_index":327,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["src/administrador/carga_l_lote/carga_l_lote.service.ts:81",{"_index":331,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["src/administrador/carga_l_lote/carga_l_lote.service.ts:9",{"_index":323,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["src/administrador/carrera/carrera.controller.ts",{"_index":451,"title":{},"body":{"controllers/CarreraController.html":{},"coverage.html":{}}}],["src/administrador/carrera/carrera.controller.ts:14",{"_index":467,"title":{},"body":{"controllers/CarreraController.html":{}}}],["src/administrador/carrera/carrera.controller.ts:24",{"_index":457,"title":{},"body":{"controllers/CarreraController.html":{}}}],["src/administrador/carrera/carrera.controller.ts:31",{"_index":459,"title":{},"body":{"controllers/CarreraController.html":{}}}],["src/administrador/carrera/carrera.controller.ts:41",{"_index":465,"title":{},"body":{"controllers/CarreraController.html":{}}}],["src/administrador/carrera/carrera.controller.ts:49",{"_index":463,"title":{},"body":{"controllers/CarreraController.html":{}}}],["src/administrador/carrera/carrera.service.ts",{"_index":486,"title":{},"body":{"injectables/CarreraService.html":{},"coverage.html":{}}}],["src/administrador/carrera/carrera.service.ts:13",{"_index":492,"title":{},"body":{"injectables/CarreraService.html":{}}}],["src/administrador/carrera/carrera.service.ts:21",{"_index":488,"title":{},"body":{"injectables/CarreraService.html":{}}}],["src/administrador/carrera/carrera.service.ts:36",{"_index":489,"title":{},"body":{"injectables/CarreraService.html":{}}}],["src/administrador/carrera/carrera.service.ts:50",{"_index":491,"title":{},"body":{"injectables/CarreraService.html":{}}}],["src/administrador/carrera/carrera.service.ts:6",{"_index":487,"title":{},"body":{"injectables/CarreraService.html":{}}}],["src/administrador/carrera/carrera.service.ts:63",{"_index":490,"title":{},"body":{"injectables/CarreraService.html":{}}}],["src/administrador/estadisticas/estadisticas.controller.ts",{"_index":546,"title":{},"body":{"controllers/EstadisticasController.html":{},"coverage.html":{}}}],["src/administrador/estadisticas/estadisticas.controller.ts:12",{"_index":549,"title":{},"body":{"controllers/EstadisticasController.html":{}}}],["src/administrador/estadisticas/estadisticas.service.ts",{"_index":554,"title":{},"body":{"injectables/EstadisticasService.html":{},"coverage.html":{}}}],["src/administrador/estadisticas/estadisticas.service.ts:5",{"_index":558,"title":{},"body":{"injectables/EstadisticasService.html":{}}}],["src/administrador/estadisticas/estadisticas.service.ts:7",{"_index":560,"title":{},"body":{"injectables/EstadisticasService.html":{}}}],["src/administrador/estadisticas/estadisticas.service.ts:9",{"_index":559,"title":{},"body":{"injectables/EstadisticasService.html":{}}}],["src/administrador/materia/materia.controller.ts",{"_index":761,"title":{},"body":{"controllers/MateriaController.html":{},"coverage.html":{}}}],["src/administrador/materia/materia.controller.ts:14",{"_index":768,"title":{},"body":{"controllers/MateriaController.html":{}}}],["src/administrador/materia/materia.controller.ts:20",{"_index":764,"title":{},"body":{"controllers/MateriaController.html":{}}}],["src/administrador/materia/materia.controller.ts:26",{"_index":765,"title":{},"body":{"controllers/MateriaController.html":{}}}],["src/administrador/materia/materia.controller.ts:32",{"_index":766,"title":{},"body":{"controllers/MateriaController.html":{}}}],["src/administrador/materia/materia.controller.ts:38",{"_index":767,"title":{},"body":{"controllers/MateriaController.html":{}}}],["src/administrador/materia/materia.interface.ts",{"_index":1001,"title":{},"body":{"coverage.html":{},"interfaces/materia.html":{}}}],["src/administrador/materia/materia.service.ts",{"_index":779,"title":{},"body":{"injectables/MateriaService.html":{},"coverage.html":{}}}],["src/administrador/materia/materia.service.ts:17",{"_index":781,"title":{},"body":{"injectables/MateriaService.html":{}}}],["src/administrador/materia/materia.service.ts:26",{"_index":782,"title":{},"body":{"injectables/MateriaService.html":{}}}],["src/administrador/materia/materia.service.ts:35",{"_index":783,"title":{},"body":{"injectables/MateriaService.html":{}}}],["src/administrador/materia/materia.service.ts:47",{"_index":784,"title":{},"body":{"injectables/MateriaService.html":{}}}],["src/administrador/materia/materia.service.ts:5",{"_index":780,"title":{},"body":{"injectables/MateriaService.html":{}}}],["src/administrador/materia/materia.service.ts:7",{"_index":786,"title":{},"body":{"injectables/MateriaService.html":{}}}],["src/administrador/materia/materia.service.ts:8",{"_index":785,"title":{},"body":{"injectables/MateriaService.html":{}}}],["src/administrador/nacionalidad/nacionalidad.controller.ts",{"_index":802,"title":{},"body":{"controllers/NacionalidadController.html":{},"coverage.html":{}}}],["src/administrador/nacionalidad/nacionalidad.controller.ts:13",{"_index":811,"title":{},"body":{"controllers/NacionalidadController.html":{}}}],["src/administrador/nacionalidad/nacionalidad.controller.ts:21",{"_index":809,"title":{},"body":{"controllers/NacionalidadController.html":{}}}],["src/administrador/nacionalidad/nacionalidad.controller.ts:28",{"_index":808,"title":{},"body":{"controllers/NacionalidadController.html":{}}}],["src/administrador/nacionalidad/nacionalidad.service.ts",{"_index":820,"title":{},"body":{"injectables/NacionalidadService.html":{},"coverage.html":{}}}],["src/administrador/nacionalidad/nacionalidad.service.ts:10",{"_index":825,"title":{},"body":{"injectables/NacionalidadService.html":{}}}],["src/administrador/nacionalidad/nacionalidad.service.ts:20",{"_index":823,"title":{},"body":{"injectables/NacionalidadService.html":{}}}],["src/administrador/nacionalidad/nacionalidad.service.ts:32",{"_index":824,"title":{},"body":{"injectables/NacionalidadService.html":{}}}],["src/administrador/nacionalidad/nacionalidad.service.ts:5",{"_index":822,"title":{},"body":{"injectables/NacionalidadService.html":{}}}],["src/administrador/usuarios/usuario.interface.ts",{"_index":941,"title":{},"body":{"interfaces/Usuario.html":{},"coverage.html":{}}}],["src/administrador/usuarios/usuarios.controller.ts",{"_index":945,"title":{},"body":{"controllers/UsuariosController.html":{},"coverage.html":{}}}],["src/administrador/usuarios/usuarios.controller.ts:14",{"_index":950,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/administrador/usuarios/usuarios.controller.ts:24",{"_index":953,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/administrador/usuarios/usuarios.controller.ts:30",{"_index":949,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/administrador/usuarios/usuarios.service.ts",{"_index":962,"title":{},"body":{"injectables/UsuariosService.html":{},"coverage.html":{}}}],["src/administrador/usuarios/usuarios.service.ts:10",{"_index":967,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/administrador/usuarios/usuarios.service.ts:20",{"_index":970,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/administrador/usuarios/usuarios.service.ts:63",{"_index":968,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/administrador/usuarios/usuarios.service.ts:7",{"_index":965,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/administrador/usuarios/usuarios.service.ts:76",{"_index":969,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/administrador/usuarios/usuarios.service.ts:8",{"_index":971,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":115,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:8",{"_index":116,"title":{},"body":{"injectables/AppService.html":{}}}],["src/dto/libro_upload.dto",{"_index":600,"title":{},"body":{"controllers/LibroController.html":{}}}],["src/dto/libro_upload.dto.ts",{"_index":693,"title":{},"body":{"classes/Libro_Upload.html":{},"coverage.html":{}}}],["src/dto/libro_upload.dto.ts:10",{"_index":695,"title":{},"body":{"classes/Libro_Upload.html":{}}}],["src/dto/libro_upload.dto.ts:12",{"_index":700,"title":{},"body":{"classes/Libro_Upload.html":{}}}],["src/dto/libro_upload.dto.ts:14",{"_index":698,"title":{},"body":{"classes/Libro_Upload.html":{}}}],["src/dto/libro_upload.dto.ts:16",{"_index":696,"title":{},"body":{"classes/Libro_Upload.html":{}}}],["src/dto/libro_upload.dto.ts:18",{"_index":697,"title":{},"body":{"classes/Libro_Upload.html":{}}}],["src/dto/libro_upload.dto.ts:5",{"_index":701,"title":{},"body":{"classes/Libro_Upload.html":{}}}],["src/dto/libro_upload.dto.ts:8",{"_index":699,"title":{},"body":{"classes/Libro_Upload.html":{}}}],["src/dto/user.dto",{"_index":956,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/dto/user.dto.ts",{"_index":829,"title":{},"body":{"classes/RegisterUser.html":{},"coverage.html":{}}}],["src/dto/user.dto.ts:10",{"_index":832,"title":{},"body":{"classes/RegisterUser.html":{}}}],["src/dto/user.dto.ts:13",{"_index":844,"title":{},"body":{"classes/RegisterUser.html":{}}}],["src/dto/user.dto.ts:16",{"_index":843,"title":{},"body":{"classes/RegisterUser.html":{}}}],["src/dto/user.dto.ts:19",{"_index":834,"title":{},"body":{"classes/RegisterUser.html":{}}}],["src/dto/user.dto.ts:7",{"_index":842,"title":{},"body":{"classes/RegisterUser.html":{}}}],["src/login/login.controller.ts",{"_index":703,"title":{},"body":{"controllers/LoginController.html":{},"coverage.html":{}}}],["src/login/login.controller.ts:10",{"_index":706,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/login/login.dto.ts",{"_index":1004,"title":{},"body":{"coverage.html":{},"interfaces/login.html":{}}}],["src/login/login.service.ts",{"_index":714,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/login/login.service.ts:10",{"_index":721,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/login/login.service.ts:11",{"_index":717,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/login/login.service.ts:9",{"_index":716,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/main.ts",{"_index":1005,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/profesor/autor/autor.controller.ts",{"_index":119,"title":{},"body":{"controllers/AutorController.html":{},"coverage.html":{}}}],["src/profesor/autor/autor.controller.ts:14",{"_index":142,"title":{},"body":{"controllers/AutorController.html":{}}}],["src/profesor/autor/autor.controller.ts:21",{"_index":130,"title":{},"body":{"controllers/AutorController.html":{}}}],["src/profesor/autor/autor.controller.ts:27",{"_index":139,"title":{},"body":{"controllers/AutorController.html":{}}}],["src/profesor/autor/autor.service.ts",{"_index":165,"title":{},"body":{"injectables/AutorService.html":{},"coverage.html":{}}}],["src/profesor/autor/autor.service.ts:11",{"_index":176,"title":{},"body":{"injectables/AutorService.html":{}}}],["src/profesor/autor/autor.service.ts:18",{"_index":173,"title":{},"body":{"injectables/AutorService.html":{}}}],["src/profesor/autor/autor.service.ts:30",{"_index":175,"title":{},"body":{"injectables/AutorService.html":{}}}],["src/profesor/autor/autor.service.ts:5",{"_index":170,"title":{},"body":{"injectables/AutorService.html":{}}}],["src/profesor/libro/libro.controller.ts",{"_index":583,"title":{},"body":{"controllers/LibroController.html":{},"coverage.html":{}}}],["src/profesor/libro/libro.controller.ts:18",{"_index":591,"title":{},"body":{"controllers/LibroController.html":{}}}],["src/profesor/libro/libro.controller.ts:26",{"_index":584,"title":{},"body":{"controllers/LibroController.html":{}}}],["src/profesor/libro/libro.controller.ts:32",{"_index":587,"title":{},"body":{"controllers/LibroController.html":{}}}],["src/profesor/libro/libro.controller.ts:52",{"_index":589,"title":{},"body":{"controllers/LibroController.html":{}}}],["src/profesor/libro/libro.controller.ts:61",{"_index":588,"title":{},"body":{"controllers/LibroController.html":{}}}],["src/profesor/libro/libro.interface.ts",{"_index":580,"title":{},"body":{"interfaces/Libro.html":{},"coverage.html":{}}}],["src/profesor/libro/libro.service.ts",{"_index":621,"title":{},"body":{"injectables/LibroService.html":{},"coverage.html":{}}}],["src/profesor/libro/libro.service.ts:11",{"_index":622,"title":{},"body":{"injectables/LibroService.html":{}}}],["src/profesor/libro/libro.service.ts:129",{"_index":628,"title":{},"body":{"injectables/LibroService.html":{}}}],["src/profesor/libro/libro.service.ts:142",{"_index":627,"title":{},"body":{"injectables/LibroService.html":{}}}],["src/profesor/libro/libro.service.ts:17",{"_index":630,"title":{},"body":{"injectables/LibroService.html":{}}}],["src/profesor/libro/libro.service.ts:46",{"_index":623,"title":{},"body":{"injectables/LibroService.html":{}}}],["src/profesor/libro/libro.service.ts:76",{"_index":625,"title":{},"body":{"injectables/LibroService.html":{}}}],["src/profesor/libro/milibro/milibro.controller.ts",{"_index":796,"title":{},"body":{"controllers/MilibroController.html":{},"coverage.html":{}}}],["src/profesor/libro/milibro/milibro.controller.ts:12",{"_index":798,"title":{},"body":{"controllers/MilibroController.html":{}}}],["src/roles/rol.enum.ts",{"_index":1052,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/roles/roles.guard",{"_index":151,"title":{},"body":{"controllers/AutorController.html":{},"controllers/BuscadorController.html":{},"controllers/CambioContraController.html":{},"controllers/CarreraController.html":{},"controllers/DescargaController.html":{},"controllers/EstadisticasController.html":{},"controllers/GetLibroController.html":{},"controllers/LibroController.html":{},"controllers/MateriaController.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"controllers/UsuariosController.html":{}}}],["src/roles/roles.guard.ts",{"_index":856,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/roles/roles.guard.ts:12",{"_index":864,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/roles/roles.guard.ts:43",{"_index":868,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/roles/roles.guard.ts:8",{"_index":861,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/sql/sql.service",{"_index":178,"title":{},"body":{"injectables/AutorService.html":{},"injectables/BuscadorService.html":{},"injectables/CambioContraService.html":{},"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"injectables/DescargaService.html":{},"injectables/EstadisticasService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{},"controllers/TestController.html":{},"injectables/UsuariosService.html":{}}}],["src/sql/sql.service.ts",{"_index":896,"title":{},"body":{"injectables/SqlService.html":{},"coverage.html":{}}}],["src/sql/sql.service.ts:10",{"_index":914,"title":{},"body":{"injectables/SqlService.html":{}}}],["src/sql/sql.service.ts:11",{"_index":908,"title":{},"body":{"injectables/SqlService.html":{}}}],["src/sql/sql.service.ts:12",{"_index":906,"title":{},"body":{"injectables/SqlService.html":{}}}],["src/sql/sql.service.ts:13",{"_index":910,"title":{},"body":{"injectables/SqlService.html":{}}}],["src/sql/sql.service.ts:14",{"_index":901,"title":{},"body":{"injectables/SqlService.html":{}}}],["src/sql/sql.service.ts:29",{"_index":903,"title":{},"body":{"injectables/SqlService.html":{}}}],["src/sql/sql.service.ts:7",{"_index":911,"title":{},"body":{"injectables/SqlService.html":{}}}],["src/test/test.controller.ts",{"_index":931,"title":{},"body":{"controllers/TestController.html":{},"coverage.html":{}}}],["src/test/test.controller.ts:11",{"_index":935,"title":{},"body":{"controllers/TestController.html":{}}}],["src/test/test.controller.ts:18",{"_index":934,"title":{},"body":{"controllers/TestController.html":{}}}],["src/usuarios/buscador/buscador.controller.ts",{"_index":207,"title":{},"body":{"controllers/BuscadorController.html":{},"coverage.html":{}}}],["src/usuarios/buscador/buscador.controller.ts:13",{"_index":213,"title":{},"body":{"controllers/BuscadorController.html":{}}}],["src/usuarios/buscador/buscador.service.ts",{"_index":224,"title":{},"body":{"injectables/BuscadorService.html":{},"coverage.html":{}}}],["src/usuarios/buscador/buscador.service.ts:5",{"_index":226,"title":{},"body":{"injectables/BuscadorService.html":{}}}],["src/usuarios/buscador/buscador.service.ts:8",{"_index":228,"title":{},"body":{"injectables/BuscadorService.html":{}}}],["src/usuarios/cambio_contra/cambio_contra.controller.ts",{"_index":267,"title":{},"body":{"controllers/CambioContraController.html":{},"coverage.html":{}}}],["src/usuarios/cambio_contra/cambio_contra.controller.ts:11",{"_index":271,"title":{},"body":{"controllers/CambioContraController.html":{}}}],["src/usuarios/cambio_contra/cambio_contra.service.ts",{"_index":279,"title":{},"body":{"injectables/CambioContraService.html":{},"coverage.html":{}}}],["src/usuarios/cambio_contra/cambio_contra.service.ts:5",{"_index":280,"title":{},"body":{"injectables/CambioContraService.html":{}}}],["src/usuarios/cambio_contra/cambio_contra.service.ts:7",{"_index":282,"title":{},"body":{"injectables/CambioContraService.html":{}}}],["src/usuarios/descarga/descarga.controller.ts",{"_index":503,"title":{},"body":{"controllers/DescargaController.html":{},"coverage.html":{}}}],["src/usuarios/descarga/descarga.controller.ts:17",{"_index":509,"title":{},"body":{"controllers/DescargaController.html":{}}}],["src/usuarios/descarga/descarga.service.ts",{"_index":535,"title":{},"body":{"injectables/DescargaService.html":{},"coverage.html":{}}}],["src/usuarios/descarga/descarga.service.ts:5",{"_index":537,"title":{},"body":{"injectables/DescargaService.html":{}}}],["src/usuarios/descarga/descarga.service.ts:9",{"_index":540,"title":{},"body":{"injectables/DescargaService.html":{}}}],["src/usuarios/get_libro/get_libro.controller.ts",{"_index":563,"title":{},"body":{"controllers/GetLibroController.html":{},"coverage.html":{}}}],["src/usuarios/get_libro/get_libro.controller.ts:12",{"_index":568,"title":{},"body":{"controllers/GetLibroController.html":{}}}],["src/usuarios/get_libro/get_libro.service.ts",{"_index":574,"title":{},"body":{"injectables/GetLibroService.html":{},"coverage.html":{}}}],["src/usuarios/get_libro/get_libro.service.ts:5",{"_index":575,"title":{},"body":{"injectables/GetLibroService.html":{}}}],["src/usuarios/get_libro/get_libro.service.ts:8",{"_index":576,"title":{},"body":{"injectables/GetLibroService.html":{}}}],["start",{"_index":1078,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1081,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1083,"title":{},"body":{"index.html":{}}}],["started",{"_index":1056,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1069,"title":{},"body":{"index.html":{}}}],["startindex",{"_index":427,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["statements",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":1104,"title":{},"body":{"index.html":{}}}],["stream",{"_index":374,"title":{},"body":{"injectables/CargaLLoteService.html":{},"injectables/LibroService.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"injectables/CambioContraService.html":{},"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"interfaces/Libro.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"classes/Libro_Upload.html":{},"injectables/LoginService.html":{},"injectables/NacionalidadService.html":{},"classes/RegisterUser.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"interfaces/Usuario.html":{},"interfaces/login.html":{},"interfaces/materia.html":{}}}],["subcadenas",{"_index":437,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["sumamos",{"_index":429,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["support",{"_index":1096,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1117,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1010,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1009,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":932,"title":{},"body":{"controllers/TestController.html":{},"index.html":{}}}],["test/test.controller",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["test:covsupport",{"_index":1088,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1087,"title":{},"body":{"index.html":{}}}],["testcontroller",{"_index":57,"title":{"controllers/TestController.html":{}},"body":{"modules/AppModule.html":{},"controllers/TestController.html":{},"coverage.html":{}}}],["tests",{"_index":1085,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1094,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.autro.crear_autor(nombre,nacionalidad",{"_index":161,"title":{},"body":{"controllers/AutorController.html":{}}}],["this.autro.eliminar(id",{"_index":164,"title":{},"body":{"controllers/AutorController.html":{}}}],["this.autro.traer",{"_index":156,"title":{},"body":{"controllers/AutorController.html":{}}}],["this.buscar.buscar_libros(cadena,carrera",{"_index":223,"title":{},"body":{"controllers/BuscadorController.html":{}}}],["this.cambio.contra(datos.id,datos.contra",{"_index":278,"title":{},"body":{"controllers/CambioContraController.html":{}}}],["this.carrera.by_id(id",{"_index":474,"title":{},"body":{"controllers/CarreraController.html":{},"controllers/LibroController.html":{}}}],["this.carrera.crear(ap",{"_index":478,"title":{},"body":{"controllers/CarreraController.html":{}}}],["this.carrera.crear(libro",{"_index":611,"title":{},"body":{"controllers/LibroController.html":{}}}],["this.carrera.editar(id",{"_index":485,"title":{},"body":{"controllers/CarreraController.html":{},"controllers/LibroController.html":{}}}],["this.carrera.eliminar(id",{"_index":481,"title":{},"body":{"controllers/CarreraController.html":{},"controllers/LibroController.html":{}}}],["this.carrera.traer",{"_index":471,"title":{},"body":{"controllers/CarreraController.html":{}}}],["this.carrera.traer(datos",{"_index":603,"title":{},"body":{"controllers/LibroController.html":{},"controllers/MilibroController.html":{}}}],["this.database",{"_index":921,"title":{},"body":{"injectables/SqlService.html":{}}}],["this.descarga.descargados(id_user,id_libro",{"_index":532,"title":{},"body":{"controllers/DescargaController.html":{}}}],["this.descargararchivo(dato",{"_index":449,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["this.estadostica.historial_iniciados",{"_index":553,"title":{},"body":{"controllers/EstadisticasController.html":{}}}],["this.fileservice.libros_bloque(dato",{"_index":318,"title":{},"body":{"controllers/CargaLLoteController.html":{}}}],["this.getdrivefileid(dato.archivo",{"_index":348,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["this.getdrivefileid(dato.imagen",{"_index":350,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["this.host",{"_index":920,"title":{},"body":{"injectables/SqlService.html":{}}}],["this.jwtsecretkey",{"_index":751,"title":{},"body":{"injectables/LoginService.html":{},"guards/RolesGuard.html":{}}}],["this.libro.libro_byid(id",{"_index":573,"title":{},"body":{"controllers/GetLibroController.html":{}}}],["this.login.login(datos",{"_index":713,"title":{},"body":{"controllers/LoginController.html":{}}}],["this.materia.by_id(id",{"_index":775,"title":{},"body":{"controllers/MateriaController.html":{}}}],["this.materia.crear(bod",{"_index":776,"title":{},"body":{"controllers/MateriaController.html":{}}}],["this.materia.editar(id",{"_index":777,"title":{},"body":{"controllers/MateriaController.html":{}}}],["this.materia.eliminar(id",{"_index":778,"title":{},"body":{"controllers/MateriaController.html":{}}}],["this.materia.trae",{"_index":774,"title":{},"body":{"controllers/MateriaController.html":{}}}],["this.nacionalidad.crear_autor(datos.nombre",{"_index":819,"title":{},"body":{"controllers/NacionalidadController.html":{}}}],["this.nacionalidad.eliminar(id",{"_index":817,"title":{},"body":{"controllers/NacionalidadController.html":{}}}],["this.nacionalidad.traer_naciolanlidad",{"_index":815,"title":{},"body":{"controllers/NacionalidadController.html":{}}}],["this.pool",{"_index":918,"title":{},"body":{"injectables/SqlService.html":{}}}],["this.pool.connect",{"_index":925,"title":{},"body":{"injectables/SqlService.html":{}}}],["this.port",{"_index":923,"title":{},"body":{"injectables/SqlService.html":{}}}],["this.reflector.get('roles",{"_index":872,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.setforbiddenresponse(context",{"_index":883,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.sql.query",{"_index":633,"title":{},"body":{"injectables/LibroService.html":{}}}],["this.sql.query('delete",{"_index":204,"title":{},"body":{"injectables/AutorService.html":{},"injectables/CarreraService.html":{},"injectables/LibroService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{},"injectables/UsuariosService.html":{}}}],["this.sql.query('insert",{"_index":194,"title":{},"body":{"injectables/AutorService.html":{},"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"injectables/DescargaService.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{},"injectables/UsuariosService.html":{}}}],["this.sql.query('select",{"_index":182,"title":{},"body":{"injectables/AutorService.html":{},"injectables/CarreraService.html":{},"injectables/EstadisticasService.html":{},"injectables/GetLibroService.html":{},"injectables/LoginService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{},"controllers/TestController.html":{},"injectables/UsuariosService.html":{}}}],["this.sql.query('update",{"_index":290,"title":{},"body":{"injectables/CambioContraService.html":{},"injectables/CarreraService.html":{},"injectables/LibroService.html":{},"injectables/MateriaService.html":{}}}],["this.sql.query(`insert",{"_index":939,"title":{},"body":{"controllers/TestController.html":{}}}],["this.sql.query(query",{"_index":266,"title":{},"body":{"injectables/BuscadorService.html":{}}}],["this.user",{"_index":919,"title":{},"body":{"injectables/SqlService.html":{}}}],["this.user.delete_user(id",{"_index":961,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["this.user.get_rol",{"_index":959,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["this.user.register(usuarios",{"_index":960,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["throw",{"_index":339,"title":{},"body":{"injectables/CargaLLoteService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"injectables/LibroService.html":{},"injectables/UsuariosService.html":{}}}],["titulo",{"_index":400,"title":{},"body":{"injectables/CargaLLoteService.html":{},"interfaces/Libro.html":{},"injectables/LibroService.html":{},"classes/Libro_Upload.html":{}}}],["token",{"_index":743,"title":{},"body":{"injectables/LoginService.html":{},"guards/RolesGuard.html":{}}}],["total_descargas",{"_index":635,"title":{},"body":{"injectables/LibroService.html":{}}}],["touch",{"_index":1105,"title":{},"body":{"index.html":{}}}],["trae",{"_index":763,"title":{},"body":{"controllers/MateriaController.html":{},"injectables/MateriaService.html":{}}}],["traer",{"_index":124,"title":{},"body":{"controllers/AutorController.html":{},"injectables/AutorService.html":{},"injectables/CarreraService.html":{},"injectables/LibroService.html":{},"controllers/TestController.html":{}}}],["traer(nombre",{"_index":629,"title":{},"body":{"injectables/LibroService.html":{}}}],["traer_naciolanlidad",{"_index":821,"title":{},"body":{"injectables/NacionalidadService.html":{}}}],["traer_todos",{"_index":454,"title":{},"body":{"controllers/CarreraController.html":{},"controllers/LibroController.html":{},"controllers/MilibroController.html":{}}}],["traer_todos(@body('nombre",{"_index":602,"title":{},"body":{"controllers/LibroController.html":{},"controllers/MilibroController.html":{}}}],["traer_todos(datos",{"_index":590,"title":{},"body":{"controllers/LibroController.html":{},"controllers/MilibroController.html":{}}}],["tramites.prestamo",{"_index":543,"title":{},"body":{"injectables/DescargaService.html":{},"injectables/LibroService.html":{}}}],["transformer",{"_index":1024,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":364,"title":{},"body":{"injectables/CargaLLoteService.html":{},"guards/RolesGuard.html":{}}}],["try",{"_index":193,"title":{},"body":{"injectables/AutorService.html":{},"injectables/BuscadorService.html":{},"injectables/CambioContraService.html":{},"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"injectables/EstadisticasService.html":{},"injectables/GetLibroService.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"controllers/TestController.html":{},"injectables/UsuariosService.html":{}}}],["tu",{"_index":309,"title":{},"body":{"controllers/CargaLLoteController.html":{},"controllers/DescargaController.html":{}}}],["tus",{"_index":447,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["twitter",{"_index":1111,"title":{},"body":{"index.html":{}}}],["type",{"_index":133,"title":{},"body":{"controllers/AutorController.html":{},"injectables/AutorService.html":{},"controllers/BuscadorController.html":{},"injectables/BuscadorService.html":{},"controllers/CambioContraController.html":{},"injectables/CambioContraService.html":{},"controllers/CargaLLoteController.html":{},"injectables/CargaLLoteService.html":{},"controllers/CarreraController.html":{},"injectables/CarreraService.html":{},"controllers/DescargaController.html":{},"injectables/DescargaService.html":{},"injectables/EstadisticasService.html":{},"controllers/GetLibroController.html":{},"injectables/GetLibroService.html":{},"interfaces/Libro.html":{},"controllers/LibroController.html":{},"injectables/LibroService.html":{},"classes/Libro_Upload.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MateriaController.html":{},"injectables/MateriaService.html":{},"controllers/NacionalidadController.html":{},"injectables/NacionalidadService.html":{},"classes/RegisterUser.html":{},"guards/RolesGuard.html":{},"injectables/SqlService.html":{},"interfaces/Usuario.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"interfaces/login.html":{},"interfaces/materia.html":{}}}],["typescript",{"_index":1068,"title":{},"body":{"index.html":{}}}],["u",{"_index":731,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UsuariosService.html":{}}}],["u.email",{"_index":990,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["u.email,u.password,u.nombre",{"_index":729,"title":{},"body":{"injectables/LoginService.html":{}}}],["u.fk_rol",{"_index":734,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UsuariosService.html":{}}}],["u.id_user",{"_index":728,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UsuariosService.html":{}}}],["u.nombre",{"_index":991,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["ubicación",{"_index":308,"title":{},"body":{"controllers/CargaLLoteController.html":{}}}],["un",{"_index":257,"title":{},"body":{"injectables/BuscadorService.html":{},"injectables/LibroService.html":{},"guards/RolesGuard.html":{}}}],["unauthorizedexception",{"_index":869,"title":{},"body":{"guards/RolesGuard.html":{}}}],["uniquefilename",{"_index":654,"title":{},"body":{"injectables/LibroService.html":{}}}],["unit",{"_index":1084,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":174,"title":{},"body":{"injectables/AutorService.html":{},"injectables/BuscadorService.html":{},"injectables/CambioContraService.html":{},"injectables/CarreraService.html":{},"injectables/DescargaService.html":{},"injectables/EstadisticasService.html":{},"injectables/GetLibroService.html":{},"injectables/LibroService.html":{},"injectables/LoginService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{},"injectables/UsuariosService.html":{}}}],["unlicensed",{"_index":1124,"title":{},"body":{"properties.html":{}}}],["uploadedfile",{"_index":592,"title":{},"body":{"controllers/LibroController.html":{}}}],["url",{"_index":353,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["useclass",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":148,"title":{},"body":{"controllers/AutorController.html":{},"controllers/BuscadorController.html":{},"controllers/CambioContraController.html":{},"controllers/CarreraController.html":{},"controllers/DescargaController.html":{},"controllers/EstadisticasController.html":{},"controllers/GetLibroController.html":{},"controllers/LibroController.html":{},"controllers/MateriaController.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"controllers/UsuariosController.html":{}}}],["useguards(rolesguard",{"_index":154,"title":{},"body":{"controllers/AutorController.html":{},"controllers/BuscadorController.html":{},"controllers/CambioContraController.html":{},"controllers/CarreraController.html":{},"controllers/DescargaController.html":{},"controllers/EstadisticasController.html":{},"controllers/GetLibroController.html":{},"controllers/LibroController.html":{},"controllers/MateriaController.html":{},"controllers/MilibroController.html":{},"controllers/NacionalidadController.html":{},"controllers/UsuariosController.html":{}}}],["useguards(rolesguard)@setmetadata('roles",{"_index":806,"title":{},"body":{"controllers/NacionalidadController.html":{}}}],["useinterceptors",{"_index":593,"title":{},"body":{"controllers/LibroController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":606,"title":{},"body":{"controllers/LibroController.html":{}}}],["usepipes",{"_index":594,"title":{},"body":{"controllers/LibroController.html":{},"controllers/UsuariosController.html":{}}}],["usepipes(validationpipe",{"_index":605,"title":{},"body":{"controllers/LibroController.html":{},"controllers/UsuariosController.html":{}}}],["user",{"_index":737,"title":{},"body":{"injectables/LoginService.html":{},"injectables/SqlService.html":{},"injectables/UsuariosService.html":{}}}],["user.email",{"_index":747,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UsuariosService.html":{}}}],["user.fk_rol",{"_index":986,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["user.id_user",{"_index":745,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UsuariosService.html":{}}}],["user.nombre",{"_index":748,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UsuariosService.html":{}}}],["user.nombre_rol",{"_index":750,"title":{},"body":{"injectables/LoginService.html":{}}}],["user.password",{"_index":742,"title":{},"body":{"injectables/LoginService.html":{}}}],["user:usuariosservice",{"_index":958,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["userrole",{"_index":889,"title":{},"body":{"guards/RolesGuard.html":{}}}],["usuaioos",{"_index":988,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["usuario",{"_index":759,"title":{"interfaces/Usuario.html":{}},"body":{"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"interfaces/Usuario.html":{},"injectables/UsuariosService.html":{},"coverage.html":{}}}],["usuario.interface",{"_index":972,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["usuarios",{"_index":954,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["usuarios.service",{"_index":955,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["usuarios/buscador/buscador.controller",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["usuarios/buscador/buscador.service",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["usuarios/cambio_contra/cambio_contra.controller",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["usuarios/cambio_contra/cambio_contra.service",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["usuarios/descarga/descarga.controller",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["usuarios/descarga/descarga.service",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["usuarios/get_libro/get_libro.controller",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["usuarios/get_libro/get_libro.service",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["usuarios_regis",{"_index":946,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["usuarioscontroller",{"_index":60,"title":{"controllers/UsuariosController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UsuariosController.html":{},"coverage.html":{}}}],["usuariosservice",{"_index":52,"title":{"injectables/UsuariosService.html":{}},"body":{"modules/AppModule.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"overview.html":{}}}],["utilizando",{"_index":675,"title":{},"body":{"injectables/LibroService.html":{}}}],["validationpipe",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"controllers/LibroController.html":{},"controllers/UsuariosController.html":{}}}],["validator",{"_index":702,"title":{},"body":{"classes/Libro_Upload.html":{},"classes/RegisterUser.html":{},"dependencies.html":{}}}],["valor",{"_index":258,"title":{},"body":{"injectables/BuscadorService.html":{}}}],["value",{"_index":719,"title":{},"body":{"injectables/LoginService.html":{},"injectables/SqlService.html":{},"miscellaneous/enumerations.html":{}}}],["values",{"_index":196,"title":{},"body":{"injectables/AutorService.html":{},"injectables/CargaLLoteService.html":{},"injectables/CarreraService.html":{},"injectables/LibroService.html":{},"injectables/MateriaService.html":{},"injectables/NacionalidadService.html":{},"controllers/TestController.html":{}}}],["values($1,$2,$3,$4,$5",{"_index":985,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["values($1,current_date)',[user.id_user",{"_index":757,"title":{},"body":{"injectables/LoginService.html":{}}}],["var",{"_index":977,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["variable",{"_index":342,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["velesolana",{"_index":938,"title":{},"body":{"controllers/TestController.html":{}}}],["verifica",{"_index":355,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["verificar",{"_index":434,"title":{},"body":{"injectables/CargaLLoteService.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{}}}],["version",{"_index":1122,"title":{},"body":{"properties.html":{}}}],["view",{"_index":438,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["void",{"_index":136,"title":{},"body":{"controllers/AutorController.html":{},"controllers/NacionalidadController.html":{},"guards/RolesGuard.html":{}}}],["válido",{"_index":647,"title":{},"body":{"injectables/LibroService.html":{}}}],["watch",{"_index":1079,"title":{},"body":{"index.html":{}}}],["website",{"_index":1109,"title":{},"body":{"index.html":{}}}],["world",{"_index":118,"title":{},"body":{"injectables/AppService.html":{}}}],["writer",{"_index":397,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["writer.on('error",{"_index":421,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["writer.on('finish",{"_index":419,"title":{},"body":{"injectables/CargaLLoteService.html":{}}}],["writestream",{"_index":662,"title":{},"body":{"injectables/LibroService.html":{}}}],["writestream.end",{"_index":670,"title":{},"body":{"injectables/LibroService.html":{}}}],["writestream.write(file.buffer",{"_index":664,"title":{},"body":{"injectables/LibroService.html":{}}}],["y",{"_index":359,"title":{},"body":{"injectables/CargaLLoteService.html":{},"classes/RegisterUser.html":{}}}],["yes",{"_index":904,"title":{},"body":{"injectables/SqlService.html":{}}}],["you'd",{"_index":1099,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAutorService\n\nAutorService\n\nAppModule -->\n\nAutorService->AppModule\n\n\n\n\n\nBuscadorService\n\nBuscadorService\n\nAppModule -->\n\nBuscadorService->AppModule\n\n\n\n\n\nCambioContraService\n\nCambioContraService\n\nAppModule -->\n\nCambioContraService->AppModule\n\n\n\n\n\nCargaLLoteService\n\nCargaLLoteService\n\nAppModule -->\n\nCargaLLoteService->AppModule\n\n\n\n\n\nCarreraService\n\nCarreraService\n\nAppModule -->\n\nCarreraService->AppModule\n\n\n\n\n\nDescargaService\n\nDescargaService\n\nAppModule -->\n\nDescargaService->AppModule\n\n\n\n\n\nEstadisticasService\n\nEstadisticasService\n\nAppModule -->\n\nEstadisticasService->AppModule\n\n\n\n\n\nGetLibroService\n\nGetLibroService\n\nAppModule -->\n\nGetLibroService->AppModule\n\n\n\n\n\nLibroService\n\nLibroService\n\nAppModule -->\n\nLibroService->AppModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nAppModule -->\n\nLoginService->AppModule\n\n\n\n\n\nMateriaService\n\nMateriaService\n\nAppModule -->\n\nMateriaService->AppModule\n\n\n\n\n\nNacionalidadService\n\nNacionalidadService\n\nAppModule -->\n\nNacionalidadService->AppModule\n\n\n\n\n\nSqlService\n\nSqlService\n\nAppModule -->\n\nSqlService->AppModule\n\n\n\n\n\nUsuariosService\n\nUsuariosService\n\nAppModule -->\n\nUsuariosService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            AutorService\n                        \n                        \n                            BuscadorService\n                        \n                        \n                            CambioContraService\n                        \n                        \n                            CargaLLoteService\n                        \n                        \n                            CarreraService\n                        \n                        \n                            DescargaService\n                        \n                        \n                            EstadisticasService\n                        \n                        \n                            GetLibroService\n                        \n                        \n                            LibroService\n                        \n                        \n                            LoginService\n                        \n                        \n                            MateriaService\n                        \n                        \n                            NacionalidadService\n                        \n                        \n                            SqlService\n                        \n                        \n                            UsuariosService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            TestController\n                        \n                        \n                            CarreraController\n                        \n                        \n                            MateriaController\n                        \n                        \n                            UsuariosController\n                        \n                        \n                            EstadisticasController\n                        \n                        \n                            LibroController\n                        \n                        \n                            LoginController\n                        \n                        \n                            BuscadorController\n                        \n                        \n                            DescargaController\n                        \n                        \n                            GetLibroController\n                        \n                        \n                            AutorController\n                        \n                        \n                            NacionalidadController\n                        \n                        \n                            CambioContraController\n                        \n                        \n                            MilibroController\n                        \n                        \n                            CargaLLoteController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, ValidationPipe } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\nimport { SqlService } from './sql/sql.service';\nimport { TestController } from './test/test.controller';\nimport { CarreraController } from './administrador/carrera/carrera.controller';\nimport { MateriaController } from './administrador/materia/materia.controller';\nimport { UsuariosController } from './administrador/usuarios/usuarios.controller';\nimport { EstadisticasController } from './administrador/estadisticas/estadisticas.controller';\nimport { LibroController } from './profesor/libro/libro.controller';\nimport { LoginController } from './login/login.controller';\n//import { RegistrarArcController } from './administrador/registrar_arc/registrar_arc.controller';\nimport { BuscadorController } from './usuarios/buscador/buscador.controller';\n\n\nimport { CarreraService } from './administrador/carrera/carrera.service';\nimport { EstadisticasService } from './administrador/estadisticas/estadisticas.service';\nimport { MateriaService } from './administrador/materia/materia.service';\n//import { RegistrarArcService } from './administrador/registrar_arc/registrar_arc.service';\nimport { LibroService } from './profesor/libro/libro.service';\nimport { LoginService } from './login/login.service';\nimport { UsuariosService } from './administrador/usuarios/usuarios.service';\nimport { APP_PIPE } from '@nestjs/core';\nimport { BuscadorService } from './usuarios/buscador/buscador.service';\nimport { DescargaController } from './usuarios/descarga/descarga.controller';\nimport { GetLibroController } from './usuarios/get_libro/get_libro.controller';\nimport { GetLibroService } from './usuarios/get_libro/get_libro.service';\nimport { AutorController } from './profesor/autor/autor.controller';\nimport { AutorService } from './profesor/autor/autor.service';\nimport { NacionalidadController } from './administrador/nacionalidad/nacionalidad.controller';\nimport { NacionalidadService } from './administrador/nacionalidad/nacionalidad.service';\nimport { CambioContraController } from './usuarios/cambio_contra/cambio_contra.controller';\nimport { CambioContraService } from './usuarios/cambio_contra/cambio_contra.service';\nimport { MilibroController } from './profesor/libro/milibro/milibro.controller';\nimport { DescargaService } from './usuarios/descarga/descarga.service';\nimport { CargaLLoteController } from './administrador/carga_l_lote/carga_l_lote.controller';\nimport { CargaLLoteService } from './administrador/carga_l_lote/carga_l_lote.service';\n\n\n\n@Module({\n  imports: [],\n  controllers: [AppController, TestController, CarreraController, MateriaController, UsuariosController, EstadisticasController, LibroController, LoginController,  BuscadorController, DescargaController, GetLibroController, AutorController, NacionalidadController, CambioContraController, MilibroController, CargaLLoteController ],\n  providers: [AppService, SqlService, CarreraService, EstadisticasService, MateriaService, LibroService, LoginService, UsuariosService,  {\n    provide: APP_PIPE,\n    useClass: ValidationPipe,\n  }, BuscadorService, GetLibroService, AutorService, NacionalidadService, CambioContraService, DescargaService, CargaLLoteService],\n})\nexport class AppModule {\n \n  \n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n\n\n\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AutorController.html":{"url":"controllers/AutorController.html","title":"controller - AutorController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AutorController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profesor/autor/autor.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                autor\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                crear\n                            \n                            \n                                    \n                                eliminar\n                            \n                            \n                                    \n                                    \n                                    \n                                traer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        crear\n                        \n                    \n                \n            \n            \n                \n                        \n                    crear(nombre: String, nacionalidad: Number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(RolesGuard)@SetMetadata('roles', ['PROFESOR'])\n                \n            \n\n                    \n                        \n                            Defined in src/profesor/autor/autor.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nombre\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                nacionalidad\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        eliminar\n                        \n                    \n                \n            \n            \n                \n                        \n                    eliminar(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/profesor/autor/autor.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        traer\n                        \n                    \n                \n            \n            \n                \n                        \n                    traer()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(RolesGuard)@SetMetadata('roles', ['PROFESOR'])\n                \n            \n\n                    \n                        \n                            Defined in src/profesor/autor/autor.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Post, SetMetadata, UseGuards } from '@nestjs/common';\nimport { AutorService } from './autor.service';\nimport { RolesGuard } from 'src/roles/roles.guard';\n\n@Controller('autor')\nexport class AutorController {\n\nconstructor(private Autro:AutorService){}\n\n\n@Get()\n@UseGuards(RolesGuard)\n@SetMetadata('roles', ['PROFESOR' ])\ntraer(){\n  return   this.Autro.traer()\n}\n\n@Post()\n@UseGuards(RolesGuard)\n@SetMetadata('roles', ['PROFESOR'])\ncrear(@Body('nombre') nombre:String, @Body('nacionalidad') nacionalidad:Number){\n    this.Autro.crear_autor(nombre,nacionalidad)\n}\n\n\n@Delete(':id')\neliminar(@Param('id') id:number){\nthis.Autro.eliminar(id)\n\n\n}\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AutorService.html":{"url":"injectables/AutorService.html","title":"injectable - AutorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AutorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profesor/autor/autor.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                crear_autor\n                            \n                            \n                                    Async\n                                eliminar\n                            \n                            \n                                    Async\n                                traer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sql: SqlService)\n                    \n                \n                        \n                            \n                                Defined in src/profesor/autor/autor.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sql\n                                                  \n                                                        \n                                                                        SqlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        crear_autor\n                        \n                    \n                \n            \n            \n                \n                        \n                    crear_autor(nombre: String, nacionalidad: Number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/profesor/autor/autor.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nombre\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                nacionalidad\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        eliminar\n                        \n                    \n                \n            \n            \n                \n                        \n                    eliminar(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/profesor/autor/autor.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        traer\n                        \n                    \n                \n            \n            \n                \n                        \n                    traer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/profesor/autor/autor.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SqlService } from 'src/sql/sql.service';\n\n@Injectable()\nexport class AutorService {\n\n    constructor(private readonly sql: SqlService) {\n\n    }\n\n    async traer(): Promise {\n\n        const reslut = await this.sql.query('select a.id_autor , a.nombre, n.nombre as nacionalidad from Libros.autor as a  inner join libros.nacionalida as n on  a.fk_nacionalidad = n.id_nacionalidad')\n        return reslut\n\n\n    }\n    async crear_autor(nombre: String ,nacionalidad:Number) {\n\n\n        try {\n             await this.sql.query('INSERT INTO libros.autor (nombre , fk_nacionalidad ) values ($1,$2)', [nombre , nacionalidad])\n            return \"carrera creada exitosamente \"\n            \n        } catch (error) {\n            return error\n        }\n    \n    }\n    async eliminar(id:number){\n        try {\n            await this.sql.query('DELETE FROM libros.autor where id_autor = $1', [id])\n           return \"carrera creada exitosamente \"\n           \n       } catch (error) {\n           return error\n       }\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BuscadorController.html":{"url":"controllers/BuscadorController.html","title":"controller - BuscadorController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BuscadorController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/buscador/buscador.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                buscador\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                buscador_libro\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        buscador_libro\n                        \n                    \n                \n            \n            \n                \n                        \n                    buscador_libro(cadena: string, carrera: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(RolesGuard)@SetMetadata('roles', ['ADMINISTRADOR', 'PROFESOR', 'ESTUDIANTE'])\n                \n            \n\n                    \n                        \n                            Defined in src/usuarios/buscador/buscador.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cadena\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                carrera\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query, SetMetadata, UseGuards } from '@nestjs/common';\nimport { BuscadorService } from './buscador.service';\nimport { RolesGuard } from 'src/roles/roles.guard';\n\n@Controller('buscador')\nexport class BuscadorController {\nconstructor(private buscar:BuscadorService){}\n\n\n    @Get()\n    @UseGuards(RolesGuard)\n    @SetMetadata('roles', ['ADMINISTRADOR','PROFESOR' , 'ESTUDIANTE'])\n    buscador_libro(@Query('cadena') cadena:string,@Query('carrera') carrera:string){\n       \n        return this.buscar.buscar_libros(cadena,carrera)\n\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BuscadorService.html":{"url":"injectables/BuscadorService.html","title":"injectable - BuscadorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BuscadorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/buscador/buscador.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                buscar_libros\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sql: SqlService)\n                    \n                \n                        \n                            \n                                Defined in src/usuarios/buscador/buscador.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sql\n                                                  \n                                                        \n                                                                        SqlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        buscar_libros\n                        \n                    \n                \n            \n            \n                \n                        \n                    buscar_libros(cadena: string, carrera: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/usuarios/buscador/buscador.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cadena\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                carrera\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SqlService } from 'src/sql/sql.service';\n\n@Injectable()\nexport class BuscadorService {\n  constructor(private sql: SqlService) {}\n\n  async buscar_libros(cadena: string, carrera: string) {\n    try {\n      let query = `\n        SELECT l.id_libro, l.titulo ,l.nombre_archivo , l.fecha_publ , l.descripcion , l.imagen , l.num_paginas , c.nombre as nombre_carrera , a.nombre as autor_nombre\n        FROM libros.libro as l\n        LEFT JOIN libros.carrera as c ON l.fk_carrera = c.id_carrera\n        LEFT JOIN libros.autor as a ON l.fk_autor = a.id_autor\n        WHERE l.titulo LIKE $1\n      `;\n\n      const params = [`%${cadena}%`];\n\n      // Agregar la condición de carrera solo si se proporciona un valor\n\n\n      //cambiar esta ammada por  el id \n      if (carrera) {\n        query += ' AND c.id_carrera = $2';\n        params.push(carrera);\n      }\n\n      return await this.sql.query(query, params);\n    } catch (error) {\n      return error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CambioContraController.html":{"url":"controllers/CambioContraController.html","title":"controller - CambioContraController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CambioContraController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/cambio_contra/cambio_contra.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cambio-contra\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                buscador_libro\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        buscador_libro\n                        \n                    \n                \n            \n            \n                \n                        \n                    buscador_libro(datos: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(RolesGuard)@SetMetadata('roles', ['ADMINISTRADOR', 'PROFESOR', 'ESTUDIANTE'])\n                \n            \n\n                    \n                        \n                            Defined in src/usuarios/cambio_contra/cambio_contra.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datos\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Put, Query, SetMetadata, UseGuards } from '@nestjs/common';\nimport { RolesGuard } from 'src/roles/roles.guard';\nimport { CambioContraService } from './cambio_contra.service';\n\n@Controller('cambio-contra')\nexport class CambioContraController {\n    constructor(private cambio:CambioContraService){}\n    @Post()\n    @UseGuards(RolesGuard)\n    @SetMetadata('roles', ['ADMINISTRADOR','PROFESOR' , 'ESTUDIANTE'])\n    buscador_libro(@Body()datos :any){\n return this.cambio.Contra(datos.id,datos.contra)\n        \n\n\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CambioContraService.html":{"url":"injectables/CambioContraService.html","title":"injectable - CambioContraService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CambioContraService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/cambio_contra/cambio_contra.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                Contra\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sql: SqlService)\n                    \n                \n                        \n                            \n                                Defined in src/usuarios/cambio_contra/cambio_contra.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sql\n                                                  \n                                                        \n                                                                        SqlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        Contra\n                        \n                    \n                \n            \n            \n                \n                        \n                    Contra(id: String, Contra: String)\n                \n            \n\n\n                    \n                        \n                            Defined in src/usuarios/cambio_contra/cambio_contra.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                Contra\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SqlService } from 'src/sql/sql.service';\nimport * as bcrypt from 'bcrypt';\n@Injectable()\nexport class CambioContraService {\nconstructor(private sql:SqlService){}\n    async Contra(id:String , Contra:String){\n        try {\n            const hashedPassword = await bcrypt.hash(Contra, 10);\n            const reslut = await this.sql.query('UPDATE inst.usuario Set password = $1 where id_user = $2',[hashedPassword,id])\n            return reslut\n            \n            \n        } catch (error) {\n            return error\n        }\n}}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CargaLLoteController.html":{"url":"controllers/CargaLLoteController.html","title":"controller - CargaLLoteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CargaLLoteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/administrador/carga_l_lote/carga_l_lote.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                carga-l-lote\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                carga_por_lote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        carga_por_lote\n                        \n                    \n                \n            \n            \n                \n                        \n                    carga_por_lote(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/administrador/carga_l_lote/carga_l_lote.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, HttpException, HttpStatus, Get } from '@nestjs/common';\nimport { CargaLLoteService } from './carga_l_lote.service';\n// Ajusta la ruta según la ubicación de tu servicio\n\n@Controller('carga-l-lote')\nexport class CargaLLoteController {\n  constructor(private readonly fileService: CargaLLoteService) { }\n\n  @Post()\n  async carga_por_lote(@Body() body: any) {\n    const datos = body.datos;\n    const id = body.id_user.id_user\n\n    \n    for (let dato of datos) {\n      if (dato.titulo) {\n        this.fileService.libros_bloque(dato, id)\n      }\n    }\n\n\n\n  }\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CargaLLoteService.html":{"url":"injectables/CargaLLoteService.html","title":"injectable - CargaLLoteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CargaLLoteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/administrador/carga_l_lote/carga_l_lote.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                descargarArchivo\n                            \n                            \n                                getDriveFileId\n                            \n                            \n                                    Async\n                                libros_bloque\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sql: SqlService)\n                    \n                \n                        \n                            \n                                Defined in src/administrador/carga_l_lote/carga_l_lote.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sql\n                                                  \n                                                        \n                                                                        SqlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        descargarArchivo\n                        \n                    \n                \n            \n            \n                \n                        \n                    descargarArchivo(dato: any, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/administrador/carga_l_lote/carga_l_lote.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dato\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDriveFileId\n                        \n                    \n                \n            \n            \n                \ngetDriveFileId(link: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/administrador/carga_l_lote/carga_l_lote.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                link\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        libros_bloque\n                        \n                    \n                \n            \n            \n                \n                        \n                    libros_bloque(dato: any, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/administrador/carga_l_lote/carga_l_lote.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dato\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport axios from 'axios';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { SqlService } from 'src/sql/sql.service';\n\n@Injectable()\nexport class CargaLLoteService {\n  constructor(private readonly sql: SqlService) {\n  }\n  async descargarArchivo(dato:any , id:string): Promise {\n    const directorioDestino = process.env.Docs;\n\n    if (!directorioDestino) {\n      throw new Error('La variable de entorno Docs no está configurada');\n    }\n\n    const googleDriveFileId = this.getDriveFileId(dato.archivo);\n    const imagen_url = this.getDriveFileId(dato.imagen);\n    const imagen = `https://drive.google.com/uc?id=${imagen_url}`\n    const url = `https://drive.google.com/uc?id=${googleDriveFileId}`;\n\n    try {\n      // Verifica si el directorio de destino existe, y créalo si no\n      if (!fs.existsSync(directorioDestino)) {\n        fs.mkdirSync(directorioDestino, { recursive: true });\n      }\n\n      // Realiza la solicitud HTTP para descargar el archivo\n      const response = await axios({\n        url,\n        method: 'GET',\n        responseType: 'stream',\n      });\n\n      // Obtiene el nombre del archivo original del encabezado de respuesta\n      const contentDisposition = response.headers['content-disposition'];\n      const matches = contentDisposition.match(/filename=\"(.+)\"$/);\n      const nombreOriginal = matches ? matches[1] : `${Date.now()}-${googleDriveFileId}.pdf`;\n\n\n\n      // Ruta completa del archivo\n      const filePath = path.join(directorioDestino, nombreOriginal);\n\n      // Guarda el archivo en el sistema de archivos local\n      const writer = fs.createWriteStream(filePath);\n      response.data.pipe(writer);\n\n     \n      await this.sql.query('INSERT INTO libros.libro (titulo, fecha_publ, descripcion, num_paginas, fk_creador, fk_autor, fk_carrera, nombre_archivo , imagen) VALUES ($1, CURRENT_DATE, $2, $3, $4, $5, $6, $7,$8)', [\n        dato.titulo, dato.descripcion, 0, id, 2, dato.carrera, nombreOriginal, imagen\n    ]);\n\n      return new Promise((resolve, reject) => {\n        writer.on('finish', resolve);\n        writer.on('error', reject);\n      });\n    } catch (error) {\n      console.error('Error al descargar o guardar el archivo:', error);\n      throw new Error('Error al descargar o guardar el archivo');\n    }\n  }\n\n  getDriveFileId(link: string): string | null {\n    const startIndex = link.indexOf('/d/') + 3; // Sumamos 3 para omitir \"/d/\"\n    const endIndex = link.indexOf('/view');\n\n    // Verificar que las subcadenas \"/d/\" y \"/view\" estén presentes en el enlace\n    if (startIndex !== -1 && endIndex !== -1) {\n      return link.substring(startIndex, endIndex);\n    } else {\n      // Si no se encuentran las subcadenas esperadas, devolver null o manejar el error según tus necesidades\n      return null;\n    }\n  }\n  \n\n\n  async libros_bloque(dato: any , id:string): Promise {\n    try {\n\n    \n    \n      // Descargar el archivo\n    await this.descargarArchivo(dato ,id);\n  \n     \n      \n    } catch (error) {\n      console.error('Error en la función libros_bloque:', error);\n      \n    }\n  }\n    \n  }\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CarreraController.html":{"url":"controllers/CarreraController.html","title":"controller - CarreraController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CarreraController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/administrador/carrera/carrera.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                carrera\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                by_id\n                            \n                            \n                                    \n                                    \n                                    \n                                crear\n                            \n                            \n                                    \n                                    \n                                    \n                                editar\n                            \n                            \n                                    \n                                    \n                                    \n                                eliminar\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                Traer_todos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        by_id\n                        \n                    \n                \n            \n            \n                \n                        \n                    by_id(id: Number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(RolesGuard)@SetMetadata('roles', ['ADMINISTRADOR'])\n                \n            \n\n                    \n                        \n                            Defined in src/administrador/carrera/carrera.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        crear\n                        \n                    \n                \n            \n            \n                \n                        \n                    crear(bod: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(RolesGuard)@SetMetadata('roles', ['ADMINISTRADOR'])\n                \n            \n\n                    \n                        \n                            Defined in src/administrador/carrera/carrera.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bod\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        editar\n                        \n                    \n                \n            \n            \n                \n                        \n                    editar(id: Number, datos: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@UseGuards(RolesGuard)@SetMetadata('roles', ['ADMINISTRADOR'])\n                \n            \n\n                    \n                        \n                            Defined in src/administrador/carrera/carrera.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                datos\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        eliminar\n                        \n                    \n                \n            \n            \n                \n                        \n                    eliminar(id: Number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(RolesGuard)@SetMetadata('roles', ['ADMINISTRADOR'])\n                \n            \n\n                    \n                        \n                            Defined in src/administrador/carrera/carrera.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        Traer_todos\n                        \n                    \n                \n            \n            \n                \n                        \n                    Traer_todos()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(RolesGuard)@UseGuards(RolesGuard)@SetMetadata('roles', ['ADMINISTRADOR', 'PROFESOR', 'ESTUDIANTE'])\n                \n            \n\n                    \n                        \n                            Defined in src/administrador/carrera/carrera.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Post, Put, SetMetadata, UseGuards } from '@nestjs/common';\nimport { CarreraService } from './carrera.service';\nimport { RolesGuard } from 'src/roles/roles.guard';\n\n@Controller('carrera')\nexport class CarreraController {\n\n    constructor(public carrera: CarreraService) { }\n\n    @Get()\n    @UseGuards(RolesGuard)\n    @UseGuards(RolesGuard)\n    @SetMetadata('roles', ['ADMINISTRADOR','PROFESOR' , 'ESTUDIANTE'])\n    Traer_todos() {\n\n\n        return this.carrera.traer()\n\n    }\n  \n    @Get(\":id\")\n    @UseGuards(RolesGuard)\n    @SetMetadata('roles', ['ADMINISTRADOR'])\n    by_id(@Param(\"id\") id: Number) {\n        return this.carrera.by_id(id)\n    }\n    \n    @Post()\n    @UseGuards(RolesGuard)\n    @SetMetadata('roles', ['ADMINISTRADOR'])\n    crear(@Body() bod: any) {\n        const ap = bod.nombre\n\n      return   this.carrera.crear(ap)\n\n\n    }\n    @Delete(\":id\")\n    @UseGuards(RolesGuard)\n    @SetMetadata('roles', ['ADMINISTRADOR'])\n    eliminar(@Param(\"id\") id :Number ) {\n     return this.carrera.eliminar(id)\n\n\n    }\n    @Put(\":id\")\n    @UseGuards(RolesGuard)\n    @SetMetadata('roles', ['ADMINISTRADOR'])\n    editar(@Param(\"id\") id :Number , @Body( ) datos:any) {\n       \n        return this.carrera.editar(id , datos)\n\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CarreraService.html":{"url":"injectables/CarreraService.html","title":"injectable - CarreraService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CarreraService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/administrador/carrera/carrera.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                by_id\n                            \n                            \n                                    Async\n                                crear\n                            \n                            \n                                    Async\n                                editar\n                            \n                            \n                                    Async\n                                eliminar\n                            \n                            \n                                    Async\n                                traer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sql: SqlService)\n                    \n                \n                        \n                            \n                                Defined in src/administrador/carrera/carrera.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sql\n                                                  \n                                                        \n                                                                        SqlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        by_id\n                        \n                    \n                \n            \n            \n                \n                        \n                    by_id(id: Number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/administrador/carrera/carrera.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        crear\n                        \n                    \n                \n            \n            \n                \n                        \n                    crear(nombre: String)\n                \n            \n\n\n                    \n                        \n                            Defined in src/administrador/carrera/carrera.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nombre\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        editar\n                        \n                    \n                \n            \n            \n                \n                        \n                    editar(id: Number, bod: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/administrador/carrera/carrera.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bod\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        eliminar\n                        \n                    \n                \n            \n            \n                \n                        \n                    eliminar(id: Number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/administrador/carrera/carrera.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        traer\n                        \n                    \n                \n            \n            \n                \n                        \n                    traer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/administrador/carrera/carrera.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { error } from 'console';\nimport { SqlService } from 'src/sql/sql.service';\n\n@Injectable()\nexport class CarreraService {\n\n\n    constructor(private readonly sql: SqlService) {\n\n    }\n\n    async traer(): Promise {\n\n        const reslut = await this.sql.query('select * from Libros.carrera')\n        return reslut\n\n\n    }\n\n    async by_id(id: Number): Promise {\n        try {\n            const reslut = await this.sql.query('select * from Libros.carrera where id_carrera = ($1)', [id])\n            if(reslut.length === 0){\n                return { message: \"no encontrado\" };\n           \n            }else{return reslut}\n        } catch (error) {\n            return error\n        }\n\n\n    }\n\n\n    async crear(nombre: String) {\n\n\n        try {\n             await this.sql.query('INSERT INTO libros.carrera (nombre) values ($1)', [nombre])\n             \n             return { message: \"OK\" };\n            \n        } catch (error) {\n            return error\n        }\n\n    }\n\n    async eliminar(id: Number) {\n\n\n        try {\n            \n            \n            await this.sql.query('delete from  libros.carrera where  id_carrera = $1', [id])\n            return { message: \"Carrera eliminada exitosamente\" };\n           \n       } catch (error) {\n           return error\n       }\n    }\n    async editar(id: Number , bod:any) {\n        const ap = bod.nombre\n        try {\n            await this.sql.query('update libros.carrera set nombre = $2 where  id_carrera = ($1)', [id , ap])\n            return { message: \"Carrera actualizada exitosamente\" };\n           \n       } catch (error) {\n           return error\n       }\n\n    }\n\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DescargaController.html":{"url":"controllers/DescargaController.html","title":"controller - DescargaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DescargaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/descarga/descarga.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                descarga\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getPdf\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getPdf\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPdf(res: Response, filename: string, id_user: any, id_libro: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/usuarios/descarga/descarga.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id_user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id_libro\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query, Res, SetMetadata, UseGuards } from '@nestjs/common';\nimport * as fs from 'fs';\nimport { Response, query } from 'express';\nimport * as path from 'path';\nimport { RolesGuard } from 'src/roles/roles.guard';\nimport { DescargaService } from './descarga.service';\n\n\n\n@Controller('descarga')\nexport class DescargaController {\n  constructor( private descarga : DescargaService){}\n\n  @Get()\n  //@UseGuards(RolesGuard)\n  //@SetMetadata('roles', ['ADMINISTRADOR','PROFESOR' , 'ESTUDIANTE'])\n  async getPdf(@Res() res: Response, @Query('filename') filename: string, @Query('id_user') id_user: any ,@Query('id_libro') id_libro: any  ): Promise {\n    try{\n    const pdfFileName = filename || 'archivo.pdf';\n    const pdfPath = path.join(process.env.Docs, pdfFileName); // Ajusta la ruta según tu estructura\n\n    if (fs.existsSync(pdfPath)) {\n      const pdfStream = fs.createReadStream(pdfPath);\n\n      res.setHeader('Content-Type', 'application/pdf');\n      res.setHeader('Content-Disposition', `attachment; filename=${pdfFileName}`);\n\n      pdfStream.pipe(res);\n\nthis.descarga.descargados(id_user,id_libro)\n\n\n    } else {\n      res.status(404).send('Archivo no encontrado');\n    }\n  }catch(error){\n    throw error\n  }\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DescargaService.html":{"url":"injectables/DescargaService.html","title":"injectable - DescargaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DescargaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/descarga/descarga.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                descargados\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sql: SqlService)\n                    \n                \n                        \n                            \n                                Defined in src/usuarios/descarga/descarga.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sql\n                                                  \n                                                        \n                                                                        SqlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        descargados\n                        \n                    \n                \n            \n            \n                \n                        \n                    descargados(id_user: string, libro_id: Number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/usuarios/descarga/descarga.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id_user\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                libro_id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SqlService } from 'src/sql/sql.service';\n\n@Injectable()\nexport class DescargaService {\n    constructor(private sql:SqlService){}\n\n\n    async descargados(id_user:string , libro_id:Number){\n\n        try{\n        const reslut = await this.sql.query('INSERT INTO tramites.prestamo (fk_user,fk_libro, fecha_descarga)VALUES($1,$2,CURRENT_DATE)',[id_user,libro_id])\n        return reslut\n        }catch(error){\n            throw error       \n         }\n            }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EstadisticasController.html":{"url":"controllers/EstadisticasController.html","title":"controller - EstadisticasController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EstadisticasController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/administrador/estadisticas/estadisticas.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                estadisticas\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                registro_iniciado\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        registro_iniciado\n                        \n                    \n                \n            \n            \n                \n                        \n                    registro_iniciado()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(RolesGuard)@SetMetadata('roles', ['ADMINISTRADOR'])\n                \n            \n\n                    \n                        \n                            Defined in src/administrador/estadisticas/estadisticas.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, SetMetadata, UseGuards } from '@nestjs/common';\nimport { EstadisticasService } from './estadisticas.service';\nimport { RolesGuard } from 'src/roles/roles.guard';\n\n@Controller('estadisticas')\nexport class EstadisticasController {\n    constructor(public estadostica :EstadisticasService){}\n\n@Get()\n@UseGuards(RolesGuard)\n@SetMetadata('roles', ['ADMINISTRADOR'])\nregistro_iniciado(){\n    \nreturn this.estadostica.historial_iniciados()\n\n}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EstadisticasService.html":{"url":"injectables/EstadisticasService.html","title":"injectable - EstadisticasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EstadisticasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/administrador/estadisticas/estadisticas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sql\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                historial_iniciados\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sql: SqlService)\n                    \n                \n                        \n                            \n                                Defined in src/administrador/estadisticas/estadisticas.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sql\n                                                  \n                                                        \n                                                                        SqlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        historial_iniciados\n                        \n                    \n                \n            \n            \n                \n                        \n                    historial_iniciados()\n                \n            \n\n\n                    \n                        \n                            Defined in src/administrador/estadisticas/estadisticas.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sql\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SqlService\n\n                    \n                \n                    \n                        \n                                Defined in src/administrador/estadisticas/estadisticas.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SqlService } from 'src/sql/sql.service';\n\n@Injectable()\nexport class EstadisticasService {\n\nconstructor( public sql:SqlService){}\n\nasync historial_iniciados(){\n\n    try {\n       return await this.sql.query('select fecha from  inst.secion')\n       \n       \n   } catch (error) {\n       return error\n   }\n\n}\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GetLibroController.html":{"url":"controllers/GetLibroController.html","title":"controller - GetLibroController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GetLibroController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/get_libro/get_libro.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                get-libro\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                libro_byid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libro_byid\n                        \n                    \n                \n            \n            \n                \n                        \n                    libro_byid(id: Number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/usuarios/get_libro/get_libro.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, SetMetadata, UseGuards } from '@nestjs/common';\nimport { GetLibroService } from './get_libro.service';\nimport { RolesGuard } from 'src/roles/roles.guard';\n\n@Controller('get-libro')\nexport class GetLibroController {\nconstructor(private libro:GetLibroService){}\n\n    @Get(':id')\n  //  @UseGuards(RolesGuard)\n   // @SetMetadata('roles', ['ADMINISTRADOR','PROFESOR' , 'ESTUDIANTE'])\n    libro_byid(@Param('id') id:Number){\n\n\n        return this.libro.libro_byid(id)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetLibroService.html":{"url":"injectables/GetLibroService.html","title":"injectable - GetLibroService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetLibroService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/get_libro/get_libro.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                libro_byid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sql: SqlService)\n                    \n                \n                        \n                            \n                                Defined in src/usuarios/get_libro/get_libro.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sql\n                                                  \n                                                        \n                                                                        SqlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        libro_byid\n                        \n                    \n                \n            \n            \n                \n                        \n                    libro_byid(id: Number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/usuarios/get_libro/get_libro.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Get, Injectable, Param } from '@nestjs/common';\nimport { SqlService } from 'src/sql/sql.service';\n\n@Injectable()\nexport class GetLibroService {\n    constructor(private sql:SqlService){}\n\n    async libro_byid(id:Number){\n    try {\n        const reslut = await this.sql.query('select l.titulo , l.fecha_publ , l.descripcion , l.imagen , l.num_paginas  , l.nombre_archivo, a.nombre from libros.libro as l INNER JOIN libros.autor as a ON a.id_autor =  l.fk_autor  where id_libro = ($1)', [id])\n        return reslut\n        \n    } catch (error) {\n        return error\n    }\n\n\n\n\n}\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Libro.html":{"url":"interfaces/Libro.html","title":"interface - Libro","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Libro\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profesor/libro/libro.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            descripcion\n                                        \n                                \n                                \n                                        \n                                            fk_autor\n                                        \n                                \n                                \n                                        \n                                            fk_carrera\n                                        \n                                \n                                \n                                        \n                                            fk_creador\n                                        \n                                \n                                \n                                        \n                                            imagen\n                                        \n                                \n                                \n                                        \n                                            num_paginas\n                                        \n                                \n                                \n                                        \n                                            titulo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        descripcion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        descripcion:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fk_autor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fk_autor:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fk_carrera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fk_carrera:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fk_creador\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fk_creador:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imagen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imagen:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        num_paginas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        num_paginas:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        titulo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        titulo:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Libro {\ntitulo  : String\nimagen:String\ndescripcion : String\nnum_paginas :String\nfk_creador :String\nfk_autor:Number\nfk_carrera: Number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LibroController.html":{"url":"controllers/LibroController.html","title":"controller - LibroController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LibroController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profesor/libro/libro.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                libro\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                by_id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                crear\n                            \n                            \n                                    \n                                    \n                                    \n                                editar\n                            \n                            \n                                    \n                                    \n                                    \n                                eliminar\n                            \n                            \n                                    \n                                    \n                                    \n                                Traer_todos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        by_id\n                        \n                    \n                \n            \n            \n                \n                        \n                    by_id(id: Number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(RolesGuard)@SetMetadata('roles', ['PROFESOR', 'ADMINISTRADOR', 'ESTUDIANTE'])\n                \n            \n\n                    \n                        \n                            Defined in src/profesor/libro/libro.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        crear\n                        \n                    \n                \n            \n            \n                \n                        \n                    crear(file: any, libro)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(ValidationPipe)@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/profesor/libro/libro.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                libro\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        editar\n                        \n                    \n                \n            \n            \n                \n                        \n                    editar(id: Number, datos: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@UseGuards(RolesGuard)@SetMetadata('roles', ['PROFESOR'])\n                \n            \n\n                    \n                        \n                            Defined in src/profesor/libro/libro.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                datos\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        eliminar\n                        \n                    \n                \n            \n            \n                \n                        \n                    eliminar(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(RolesGuard)@SetMetadata('roles', ['PROFESOR'])\n                \n            \n\n                    \n                        \n                            Defined in src/profesor/libro/libro.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Traer_todos\n                        \n                    \n                \n            \n            \n                \n                        \n                    Traer_todos(datos)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(RolesGuard)@SetMetadata('roles', ['PROFESOR'])\n                \n            \n\n                    \n                        \n                            Defined in src/profesor/libro/libro.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datos\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Post, Put, Query, SetMetadata, UploadedFile, UseGuards, UseInterceptors, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { LibroService } from './libro.service';\nimport { RolesGuard } from 'src/roles/roles.guard';\nimport { Libro } from './libro.interface';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { Libro_Upload } from 'src/dto/libro_upload.dto';\n\n@Controller('libro')\nexport class LibroController {\n\n    constructor(public carrera: LibroService) {\n\n    }\n\n    @Get()\n    @UseGuards(RolesGuard)\n    @SetMetadata('roles', ['PROFESOR'])\n    Traer_todos(@Body('nombre') datos) {\n       \n        return this.carrera.traer(datos)\n\n    }\n    @Get(\":id\")\n    @UseGuards(RolesGuard)\n    @SetMetadata('roles', ['PROFESOR','ADMINISTRADOR','ESTUDIANTE'])\n    by_id(@Param(\"id\") id: Number) {\n        return this.carrera.by_id(id)\n    }\n    @Post()\n    @UsePipes(ValidationPipe)\n    @UseInterceptors(FileInterceptor('file'))\n    async crear(\n        @UploadedFile() file: any, @Body('libro') libro\n    ): Promise {\n       \n        try {\n\n            // Llama al servicio para crear el libro con el archivo PDF\n            const message = await this.carrera.crear(libro, file);\n\n            return { message, newFileName: /* Nombre del archivo generado en el servicio */'gg' }\n        } catch (error) {\n            // Manejo de errores si es necesario\n           \n            return { message: 'Error al procesar la solicitud', newFileName: '' };\n        }\n    }\n\n    @Delete(\":id\")\n    @UseGuards(RolesGuard)\n    @SetMetadata('roles', ['PROFESOR'])\n    eliminar(@Param(\"id\") id: string) {\n        \n        return this.carrera.eliminar(id)\n\n\n    }\n    @Put(\":id\")\n    @UseGuards(RolesGuard)\n    @SetMetadata('roles', ['PROFESOR'])\n    editar(@Param(\"id\") id: Number, @Body() datos: any) {\n        const ap = datos.nombre\n        return this.carrera.editar(id, ap)\n\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LibroService.html":{"url":"injectables/LibroService.html","title":"injectable - LibroService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LibroService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profesor/libro/libro.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                by_id\n                            \n                            \n                                    Async\n                                crear\n                            \n                            \n                                    Async\n                                editar\n                            \n                            \n                                    Async\n                                eliminar\n                            \n                            \n                                    Async\n                                traer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sql: SqlService)\n                    \n                \n                        \n                            \n                                Defined in src/profesor/libro/libro.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sql\n                                                  \n                                                        \n                                                                        SqlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        by_id\n                        \n                    \n                \n            \n            \n                \n                        \n                    by_id(id: Number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/profesor/libro/libro.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        crear\n                        \n                    \n                \n            \n            \n                \n                        \n                    crear(libros: any, file: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/profesor/libro/libro.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                libros\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        editar\n                        \n                    \n                \n            \n            \n                \n                        \n                    editar(id: Number, bod: String)\n                \n            \n\n\n                    \n                        \n                            Defined in src/profesor/libro/libro.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bod\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        eliminar\n                        \n                    \n                \n            \n            \n                \n                        \n                    eliminar(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/profesor/libro/libro.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        traer\n                        \n                    \n                \n            \n            \n                \n                        \n                    traer(nombre: String)\n                \n            \n\n\n                    \n                        \n                            Defined in src/profesor/libro/libro.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nombre\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { SqlService } from 'src/sql/sql.service';\nimport { Libro } from './libro.interface';\nimport * as pdfParse from 'pdf-parse';\n\nimport * as fs from 'fs';\nimport * as path from 'path';\n\n\n@Injectable()\nexport class LibroService {\n\n    constructor(private readonly sql: SqlService) {\n\n    }\n\n    async traer(nombre: String): Promise {\n//as\n        const reslut = await this.sql.query(\n            `SELECT\n            l.id_libro,\n            l.titulo,\n            l.fecha_publ,\n            l.descripcion,\n            l.imagen,\n            a.nombre as autor,\n            c.nombre as carrera,\n            l.nombre_archivo,\n            COALESCE(COUNT(p.*), 0) as total_descargas\n        FROM\n            libros.libro as l\n            INNER JOIN libros.carrera as c ON c.id_carrera = l.fk_carrera\n            INNER JOIN libros.autor as a ON a.id_autor = l.fk_autor\n            LEFT JOIN tramites.prestamo as p ON p.fk_libro = l.id_libro\n        WHERE\n            l.fk_creador = $1\n        GROUP BY\n            l.id_libro, l.titulo, l.fecha_publ, l.descripcion, l.imagen, a.nombre, c.nombre, l.nombre_archivo;\n        `\n       , [nombre])\n        return reslut\n\n\n    }\n\n    async by_id(id: Number): Promise {\n        try {\n            const reslut = await this.sql.query(`\n            select\n            l.descripcion ,\n            l.fecha_publ,\n            l.id_libro ,\n            l.imagen, \n            l.nombre_archivo ,\n            l.num_paginas ,\n            l.titulo,\n            a.nombre as autor,\n            p.nombre as profesor,\n            c.nombre as carrera\n\n            from libros.libro as l right join inst.usuario as p on p.id_user = l.fk_creador\n            right join libros.autor as a on l.fk_autor = a.id_autor\n            right join libros.carrera as c on l.fk_carrera = c.id_carrera   \n            where id_libro = ($1)`, [id])\n            if (reslut.length === 0) {\n                return \"no existe el id de esta carrera \"\n            } else { return reslut }\n        } catch (error) {\n            return error\n        }\n\n\n    }\n\n\n    async crear(libros: any, file: any): Promise {\n\n\n        const libro = JSON.parse(libros);\n\n        try {\n\n\n            if (!file || !file.buffer) {\n                throw new HttpException('Archivo no válido', HttpStatus.BAD_REQUEST);\n            }\n            const pdfBuffer = file.buffer;\n            const data = await pdfParse(pdfBuffer);\n\n\n\n\n\n            // Genera un nombre único para el archivo PDF\n            const uniqueFileName = `${Date.now()}-${file.originalname}`;\n\n\n            // Construye la ruta completa del archivo en la carpeta pdfs\n            const pdfPath = path.join( process.env.Docs, uniqueFileName);\n\n            // Crea el stream de escritura del archivo\n            const writeStream = fs.createWriteStream(pdfPath);\n            writeStream.write(file.buffer);\n\n            // Cierra el flujo después de escribir el contenido\n            writeStream.end();\n\n\n            // Guarda el archivo en la carpeta pdfs con el nuevo nombre\n\n\n            //  Inserta los datos del libro en la base de datos, utilizando el campo nombre_archivo\n            await this.sql.query('INSERT INTO libros.libro (titulo, fecha_publ, descripcion, num_paginas, fk_creador, fk_autor, fk_carrera, nombre_archivo , imagen) VALUES ($1, CURRENT_DATE, $2, $3, $4, $5, $6, $7,$8)', [\n                libro.titulo, libro.descripcion, data.numpages, libro.fk_creador, libro.fk_autor, libro.fk_carrera, uniqueFileName, libro.imagen\n            ]);\n\n            return 'Libro creado exitosamente';\n        } catch (error) {\n\n\n\n            console.error('Error al crear el libro con PDF:', error);\n            throw new HttpException(`Error al crear el libro con PDF: ${error.message}`, HttpStatus.INTERNAL_SERVER_ERROR);\n        }\n    }\n\n\n\n    async eliminar(id: string) {\n\n        \n        try {\n            \n             await this.sql.query('DELETE FROM tramites.prestamo WHERE fk_libro = $1;', [id])\n            await this.sql.query('DELETE FROM  libros.libro WHERE  id_libro = $1;', [id])\n            return { mesage: 'eliminado ' }\n\n        } catch (error) {\n            return error\n        }\n    }\n    async editar(id: Number, bod: String) {\n\n        try {\n            await this.sql.query('update libros.libro set nombre = $2 where  id_carrera = ($1)', [id, bod])\n            return \"carrera actualusada  exitosamente \"\n\n        } catch (error) {\n            return error\n        }\n\n    }\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Libro_Upload.html":{"url":"classes/Libro_Upload.html","title":"class - Libro_Upload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Libro_Upload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/libro_upload.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                descripcion\n                            \n                            \n                                    \n                                fk_autor\n                            \n                            \n                                    \n                                fk_carrera\n                            \n                            \n                                    \n                                fk_creador\n                            \n                            \n                                    \n                                imagen\n                            \n                            \n                                    \n                                num_paginas\n                            \n                            \n                                    \n                                titulo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        descripcion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/libro_upload.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fk_autor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/libro_upload.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fk_carrera\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/libro_upload.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fk_creador\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/libro_upload.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        imagen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/libro_upload.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        num_paginas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/libro_upload.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        titulo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/libro_upload.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from \"class-validator\"\n\nexport class Libro_Upload{\n@IsNotEmpty()\ntitulo  : String\n\n@IsNotEmpty()\nimagen:String\n@IsNotEmpty()\ndescripcion : String\n@IsNotEmpty()\nnum_paginas :String\n@IsNotEmpty()\nfk_creador :String\n@IsNotEmpty()\nfk_autor:Number\n@IsNotEmpty()\nfk_carrera: Number\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LoginController.html":{"url":"controllers/LoginController.html","title":"controller - LoginController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LoginController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/login/login.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                login\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(datos: login)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/login/login.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datos\n                                            \n                                                            login\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { login } from './login.dto';\nimport { LoginService } from './login.service';\n\n@Controller('login')\nexport class LoginController {\n    constructor(private Login:LoginService){}\n\n    @Post()\n    login(@Body() datos:login){\n return this.Login.Login(datos)\n\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/login/login.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                jwtSecretKey\n                            \n                            \n                                    Public\n                                sql\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                Login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sql: SqlService)\n                    \n                \n                        \n                            \n                                Defined in src/login/login.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sql\n                                                  \n                                                        \n                                                                        SqlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        Login\n                        \n                    \n                \n            \n            \n                \n                        \n                    Login(datos: login)\n                \n            \n\n\n                    \n                        \n                            Defined in src/login/login.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datos\n                                            \n                                                            login\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        jwtSecretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AU1234_ggqqgato$$ap'\n                    \n                \n                    \n                        \n                                Defined in src/login/login.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sql\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SqlService\n\n                    \n                \n                    \n                        \n                                Defined in src/login/login.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SqlService } from 'src/sql/sql.service';\nimport { login } from './login.dto';\nimport * as bcrypt from 'bcrypt';\nimport * as jwt from 'jsonwebtoken';\n\n@Injectable()\nexport class LoginService {\n    private readonly jwtSecretKey = 'AU1234_ggqqgato$$ap';\n    constructor(public sql: SqlService) { }\n    async Login(datos: login) {\n        try {\n\n            const cedula = datos.cedula\n            const password = datos.password\n            const result = await this.sql.query('SELECT u.id_user , u.email,u.password,u.nombre ,r.nombre_rol  FROM inst.usuario AS u INNER JOIN inst.rol AS r ON u.fk_rol = r.id_rol where id_user = ($1);', [cedula])\n\n            if (result.length === 1) {\n                const user = result[0];\n\n                // Verificar la contraseña\n                const passwordMatch = await bcrypt.compare(password, user.password);\n\n                if (passwordMatch) {\n                    const token = jwt.sign(\n                        { id_user: user.id_user, email: user.email, nombre: user.nombre, nombre_rol: user.nombre_rol },\n                        this.jwtSecretKey,\n                        { expiresIn: '3000h' } // Configura la expiración del token\n\n\n\n\n\n                      );\n\n                        this.sql.query('INSERT INTO inst.secion(fk_user,fecha) values($1,CURRENT_DATE)',[user.id_user])\n\n            \n                      return { token };\n            \n\n                } else {\n                    return { message: 'Contraseña incorrecta' };\n                }\n            } else {\n                return { message: 'Usuario no encontrado' };\n\n            }\n        } catch (error) {\n            return { message: 'Error en la autenticación', error };\n        }\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MateriaController.html":{"url":"controllers/MateriaController.html","title":"controller - MateriaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MateriaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/administrador/materia/materia.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                materia\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                by_id\n                            \n                            \n                                    \n                                    \n                                    \n                                crear\n                            \n                            \n                                    \n                                    \n                                    \n                                editar\n                            \n                            \n                                    \n                                    \n                                    \n                                eliminar\n                            \n                            \n                                    \n                                    \n                                    \n                                trae\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        by_id\n                        \n                    \n                \n            \n            \n                \n                        \n                    by_id(id: Number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(RolesGuard)@SetMetadata('roles', ['ADMINISTRADOR'])\n                \n            \n\n                    \n                        \n                            Defined in src/administrador/materia/materia.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        crear\n                        \n                    \n                \n            \n            \n                \n                        \n                    crear(bod: materia)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(RolesGuard)@SetMetadata('roles', ['ADMINISTRADOR'])\n                \n            \n\n                    \n                        \n                            Defined in src/administrador/materia/materia.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bod\n                                            \n                                                            materia\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        editar\n                        \n                    \n                \n            \n            \n                \n                        \n                    editar(id: Number, bod: materia)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@UseGuards(RolesGuard)@SetMetadata('roles', ['ADMINISTRADOR'])\n                \n            \n\n                    \n                        \n                            Defined in src/administrador/materia/materia.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bod\n                                            \n                                                            materia\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        eliminar\n                        \n                    \n                \n            \n            \n                \n                        \n                    eliminar(id: Number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(RolesGuard)@SetMetadata('roles', ['ADMINISTRADOR'])\n                \n            \n\n                    \n                        \n                            Defined in src/administrador/materia/materia.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        trae\n                        \n                    \n                \n            \n            \n                \n                        \n                    trae()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(RolesGuard)@SetMetadata('roles', ['ADMINISTRADOR'])\n                \n            \n\n                    \n                        \n                            Defined in src/administrador/materia/materia.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Post, Put, SetMetadata, UseGuards } from '@nestjs/common';\nimport { MateriaService } from './materia.service';\nimport { identity } from 'rxjs';\nimport { materia } from './materia.interface';\nimport { RolesGuard } from 'src/roles/roles.guard';\n\n@Controller('materia')\nexport class MateriaController {\n    constructor(public materia: MateriaService) { }\n     \n    @Get()\n    @UseGuards(RolesGuard)\n    @SetMetadata('roles', ['ADMINISTRADOR'])\n    trae() {\n        return this.materia.trae()\n    };\n    @Get(':id')\n    @UseGuards(RolesGuard)\n    @SetMetadata('roles', ['ADMINISTRADOR'])\n    by_id(@Param(\"id\") id: Number) {\n        return this.materia.by_id(id)\n    }\n    @Post()\n    @UseGuards(RolesGuard)\n    @SetMetadata('roles', ['ADMINISTRADOR'])\n    crear(@Body() bod: materia) {\n       return this.materia.crear(bod)\n    };\n    @Put(\":id\")\n    @UseGuards(RolesGuard)\n    @SetMetadata('roles', ['ADMINISTRADOR'])\n    editar(@Param(\"id\") id: Number, @Body() bod: materia) {\n        return this.materia.editar(id, bod)\n    };\n    @Delete(\":id\")\n    @UseGuards(RolesGuard)\n    @SetMetadata('roles', ['ADMINISTRADOR'])\n    eliminar(@Param(\"id\") id: Number) {\n        return this.materia.eliminar(id)\n    };\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MateriaService.html":{"url":"injectables/MateriaService.html","title":"injectable - MateriaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MateriaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/administrador/materia/materia.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sql\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                by_id\n                            \n                            \n                                    Async\n                                crear\n                            \n                            \n                                    Async\n                                editar\n                            \n                            \n                                    Async\n                                eliminar\n                            \n                            \n                                    Async\n                                trae\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sql: SqlService)\n                    \n                \n                        \n                            \n                                Defined in src/administrador/materia/materia.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sql\n                                                  \n                                                        \n                                                                        SqlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        by_id\n                        \n                    \n                \n            \n            \n                \n                        \n                    by_id(id: Number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/administrador/materia/materia.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        crear\n                        \n                    \n                \n            \n            \n                \n                        \n                    crear(bod)\n                \n            \n\n\n                    \n                        \n                            Defined in src/administrador/materia/materia.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bod\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        editar\n                        \n                    \n                \n            \n            \n                \n                        \n                    editar(id: Number, bod)\n                \n            \n\n\n                    \n                        \n                            Defined in src/administrador/materia/materia.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bod\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        eliminar\n                        \n                    \n                \n            \n            \n                \n                        \n                    eliminar(id: Number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/administrador/materia/materia.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        trae\n                        \n                    \n                \n            \n            \n                \n                        \n                    trae()\n                \n            \n\n\n                    \n                        \n                            Defined in src/administrador/materia/materia.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sql\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SqlService\n\n                    \n                \n                    \n                        \n                                Defined in src/administrador/materia/materia.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SqlService } from 'src/sql/sql.service';\n\n@Injectable()\nexport class MateriaService {\n\n    constructor(public sql: SqlService) { }\n    async trae() {\n        try {\n            return await this.sql.query('select * from  libros.materia')\n\n\n        } catch (error) {\n            return error\n        }\n    };\n    async by_id(id:Number) {\n        try {\n            return await this.sql.query('select * from  libros.materia where id_materia = $1' , [id])\n\n\n        } catch (error) {\n            return error\n        }\n    };\n    async crear(bod) {\n        try {\n            await this.sql.query('insert into libros.materia(nombre , fk_carrera) values ($1 , $2)',[bod.nombre , bod.fk_carrera ])\n            return \"carrera creada exitosamente \"\n\n        } catch (error) {\n            return error\n        }\n    };\n    async editar(id:Number , bod) {\n\n        const n = bod.nombre; \n        const fk = bod.fk_carrera\n        try {\n            await this.sql.query('Update libros.materia set nombre = ($1) , fk_carrera =($2)  where id_materia = ($3)',[n,fk,id])\n            return \"carrera creada exitosamente \"\n\n        } catch (error) {\n            return error\n        }\n    };\n    async eliminar( id:Number) {\n        try {\n            await this.sql.query('delete from libros.materia where id_materia = ($1)' ,[id])\n            return \"carrera eliminada exitosamente \"\n\n        } catch (error) {\n            return error\n        }\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MilibroController.html":{"url":"controllers/MilibroController.html","title":"controller - MilibroController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MilibroController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profesor/libro/milibro/milibro.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                milibro\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Traer_todos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Traer_todos\n                        \n                    \n                \n            \n            \n                \n                        \n                    Traer_todos(datos)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(RolesGuard)@SetMetadata('roles', ['PROFESOR', 'ADMINISTRADOR'])\n                \n            \n\n                    \n                        \n                            Defined in src/profesor/libro/milibro/milibro.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datos\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, SetMetadata, UseGuards } from '@nestjs/common';\nimport { RolesGuard } from 'src/roles/roles.guard';\nimport { LibroService } from '../libro.service';\n\n@Controller('milibro')\nexport class MilibroController {\n\n    constructor(private carrera:LibroService){}\n    @Post()\n    @UseGuards(RolesGuard)\n    @SetMetadata('roles', ['PROFESOR','ADMINISTRADOR'])\n    Traer_todos(@Body('nombre') datos) {\n       \n\n        return this.carrera.traer(datos)\n\n    }\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NacionalidadController.html":{"url":"controllers/NacionalidadController.html","title":"controller - NacionalidadController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NacionalidadController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/administrador/nacionalidad/nacionalidad.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                nacionalidad\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                crear_nacionalidad\n                            \n                            \n                                    \n                                    \n                                    \n                                eliminar\n                            \n                            \n                                    \n                                    \n                                    \n                                get_nacionalidad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        crear_nacionalidad\n                        \n                    \n                \n            \n            \n                \n                        \n                    crear_nacionalidad(datos: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RolesGuard)@SetMetadata('roles', ['ADMINISTRADOR'])@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/administrador/nacionalidad/nacionalidad.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datos\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        eliminar\n                        \n                    \n                \n            \n            \n                \n                        \n                    eliminar(id: Number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(RolesGuard)@SetMetadata('roles', ['ADMINISTRADOR'])\n                \n            \n\n                    \n                        \n                            Defined in src/administrador/nacionalidad/nacionalidad.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        get_nacionalidad\n                        \n                    \n                \n            \n            \n                \n                        \n                    get_nacionalidad()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RolesGuard)@SetMetadata('roles', ['ADMINISTRADOR', 'PROFESOR'])@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/administrador/nacionalidad/nacionalidad.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Post, SetMetadata, UseGuards } from '@nestjs/common';\n\nimport { NacionalidadService } from './nacionalidad.service';\nimport { RolesGuard } from 'src/roles/roles.guard';\n\n@Controller('nacionalidad')\nexport class NacionalidadController {\n    constructor(private Nacionalidad:NacionalidadService){}\n\n    @UseGuards(RolesGuard)\n    @SetMetadata('roles', ['ADMINISTRADOR','PROFESOR'])\n    @Get()\n    get_nacionalidad(){\n      return  this.Nacionalidad.traer_naciolanlidad()\n\n\n    }\n    @Delete(\":id\")\n    @UseGuards(RolesGuard)\n    @SetMetadata('roles', ['ADMINISTRADOR'])\n    eliminar(@Param(\"id\") id :Number ) {\n        console.log(\"asdad\")\n     return this.Nacionalidad.eliminar(id)\n    }\n    @UseGuards(RolesGuard)\n    @SetMetadata('roles', ['ADMINISTRADOR'])\n    @Post()\n    crear_nacionalidad(@Body() datos :any){\n       \n    this.Nacionalidad.crear_autor(datos.nombre)\n\n\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NacionalidadService.html":{"url":"injectables/NacionalidadService.html","title":"injectable - NacionalidadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NacionalidadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/administrador/nacionalidad/nacionalidad.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                crear_autor\n                            \n                            \n                                    Async\n                                eliminar\n                            \n                            \n                                    Async\n                                traer_naciolanlidad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sql: SqlService)\n                    \n                \n                        \n                            \n                                Defined in src/administrador/nacionalidad/nacionalidad.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sql\n                                                  \n                                                        \n                                                                        SqlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        crear_autor\n                        \n                    \n                \n            \n            \n                \n                        \n                    crear_autor(nombre: String)\n                \n            \n\n\n                    \n                        \n                            Defined in src/administrador/nacionalidad/nacionalidad.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nombre\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        eliminar\n                        \n                    \n                \n            \n            \n                \n                        \n                    eliminar(id: Number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/administrador/nacionalidad/nacionalidad.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        traer_naciolanlidad\n                        \n                    \n                \n            \n            \n                \n                        \n                    traer_naciolanlidad()\n                \n            \n\n\n                    \n                        \n                            Defined in src/administrador/nacionalidad/nacionalidad.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SqlService } from 'src/sql/sql.service';\n\n@Injectable()\nexport class NacionalidadService {\n    constructor(private readonly sql: SqlService) {\n\n    }\n\n    async traer_naciolanlidad(): Promise {\n     \n\n        const reslut = await this.sql.query('select * from Libros.nacionalida')\n        return reslut\n\n\n    }\n    \n\n    async crear_autor(nombre: String ) {\n\n\n        try {\n             await this.sql.query('INSERT INTO libros.nacionalida (nombre) values ($1)', [nombre])\n            return \"carrera creada exitosamente \"\n            \n        } catch (error) {\n            return error\n        }\n    \n    }\n    async eliminar(id: Number) {\n        console.log(\"entrop\")\n\n        try {\n            await this.sql.query('delete from  libros.nacionalida where  id_nacionalidad = $1', [id])\n            return { message: \"Carrera eliminada exitosamente\" };\n           \n       } catch (error) {\n           return error\n       }\n    }\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUser.html":{"url":"classes/RegisterUser.html","title":"class - RegisterUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                fk_rol\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                id_user\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                nombre\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        fk_rol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Length(1, 10, {message: 'La longitud del código debe estar entre 1 y 10 caracteres.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        nombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString, Length, MaxLength, MinLength } from \"class-validator\";\n\nexport class RegisterUser {\n    @IsNotEmpty()\n    @Length(1, 10, { message: 'La longitud del código debe estar entre 1 y 10 caracteres.' })\n    @IsString()\n    readonly id_user: string; // Cambiado a 'string' en lugar de 'String'\n    @IsNotEmpty()\n    @IsString()\n    readonly email: string; // Cambiado a 'string' en lugar de 'String'\n    @IsNotEmpty()\n    @IsString()\n    readonly password: string; // Cambiado a 'string' en lugar de 'String'\n    @IsNotEmpty()\n    @IsString()\n    readonly nombre: string; // Cambiado a 'string' en lugar de 'String'\n    @IsNotEmpty()\n    @IsNumber()\n    readonly fk_rol: number; // Cambiado a 'number' en lugar de 'Number'\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/roles/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                jwtSecretKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                    Private\n                                setForbiddenResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.guard.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setForbiddenResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    setForbiddenResponse(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.guard.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext, UnauthorizedException } from '@nestjs/common';\nimport * as jwt from 'jsonwebtoken';\nimport { Reflector } from '@nestjs/core';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  private readonly jwtSecretKey = 'AU1234_ggqqgato$$ap';\n\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.get('roles', context.getHandler());\n\n    if (!requiredRoles || requiredRoles.length === 0) {\n      return true; // Si no se especifica ningún rol, permite el acceso\n    }\n\n    const request = context.switchToHttp().getRequest();\n    const token = request.headers.authorization?.replace('Bearer ', '');\n\n    if (!token) {\n      this.setForbiddenResponse(context);\n      return false; // Si no hay token, deniega el acceso\n    }\n\n    try {\n      const decodedToken = jwt.verify(token, this.jwtSecretKey) as { nombre_rol: string };\n      const userRole = decodedToken.nombre_rol;\n\n      if (!requiredRoles.includes(userRole)) {\n        this.setForbiddenResponse(context);\n        return false; // Si el rol no coincide, deniega el acceso\n      }\n\n      return true;\n    } catch (error) {\n      this.setForbiddenResponse(context);\n      return false; // Si hay un error al verificar el token, deniega el acceso\n    }\n  }\n\n  private setForbiddenResponse(context: ExecutionContext): void {\n    const response = context.switchToHttp().getResponse();\n    response.status(403).json({\n      message: 'Usuario no autorizado'\n      \n    });\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SqlService.html":{"url":"injectables/SqlService.html","title":"injectable - SqlService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SqlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sql/sql.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                database\n                            \n                            \n                                host\n                            \n                            \n                                password\n                            \n                            \n                                    Private\n                                    Readonly\n                                pool\n                            \n                            \n                                port\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                query\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/sql/sql.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        query\n                        \n                    \n                \n            \n            \n                \n                        \n                    query(sql: string, params?: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/sql/sql.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sql\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        database\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.Database\n                    \n                \n                    \n                        \n                                Defined in src/sql/sql.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.Host\n                    \n                \n                    \n                        \n                                Defined in src/sql/sql.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.Pass\n                    \n                \n                    \n                        \n                                Defined in src/sql/sql.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        pool\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Pool\n\n                    \n                \n                    \n                        \n                                Defined in src/sql/sql.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        port\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.Port\n                    \n                \n                    \n                        \n                                Defined in src/sql/sql.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.User\n                    \n                \n                    \n                        \n                                Defined in src/sql/sql.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Pool, PoolClient } from 'pg';\n\n\n@Injectable()\nexport class SqlService {\n  private readonly pool: Pool;\n\n\n  user=  process.env.User\n  host= process.env.Host\n  database= process.env.Database\n  password=process.env.Pass\n  port= process.env.Port\n\n  constructor() {\n    \n      \n      \n    this.pool = new Pool({\n      user: this.user,\n      host: this.host,\n      database: this.database,\n      password:this.password,\n      port: this.port,\n    });\n  }\n\n  async query(sql: string, params?: any[]): Promise {\n    let client: PoolClient;\n\n    try {\n     \n      client = await this.pool.connect();\n      const result = await client.query(sql, params);\n      return result.rows;\n    } catch (error) {\n      console.error('Database error:', error.message);\n    } finally {\n      if (client) {\n        client.release();\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TestController.html":{"url":"controllers/TestController.html","title":"controller - TestController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TestController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/test/test.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                test\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                guardad\n                            \n                            \n                                    \n                                    Async\n                                traer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        guardad\n                        \n                    \n                \n            \n            \n                \n                        \n                    guardad()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/test/test.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        traer\n                        \n                    \n                \n            \n            \n                \n                        \n                    traer()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/test/test.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post } from '@nestjs/common';\nimport { SqlService } from 'src/sql/sql.service';\n\n@Controller('test')\nexport class TestController {\nconstructor(private readonly sql:SqlService){\n\n}\n\n@Get()\nasync traer(): Promise{\n\n    const reslut = await this.sql.query('select * from libros.nacionalidad')\n    return reslut\n\n}\n@Post()\n    async guardad(){\n        \n        const values = [\"Velesolana\"]\n        try{\n            const reslut = await this.sql.query(`INSERT INTO libros.nacionalidad (nombre) VALUES ($1)`, values)\n        }catch(error){\nconsole.log(error)\n        }\n    \n   \n    \n}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Usuario.html":{"url":"interfaces/Usuario.html","title":"interface - Usuario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Usuario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/administrador/usuarios/usuario.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            fk_rol\n                                        \n                                \n                                \n                                        \n                                            id_user\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fk_rol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fk_rol:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_user:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Usuario{\nid_user: String\nemail:String\npassword:String\nnombre:String\nfk_rol:Number\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsuariosController.html":{"url":"controllers/UsuariosController.html","title":"controller - UsuariosController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsuariosController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/administrador/usuarios/usuarios.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                usuarios_regis\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                eliminar\n                            \n                            \n                                    \n                                    \n                                    \n                                Get_rol\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        eliminar\n                        \n                    \n                \n            \n            \n                \n                        \n                    eliminar(id: Number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/administrador/usuarios/usuarios.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Get_rol\n                        \n                    \n                \n            \n            \n                \n                        \n                    Get_rol()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(RolesGuard)@SetMetadata('roles', ['ADMINISTRADOR'])\n                \n            \n\n                    \n                        \n                            Defined in src/administrador/usuarios/usuarios.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(usuarios: RegisterUser[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(RolesGuard)@SetMetadata('roles', ['ADMINISTRADOR'])@UsePipes(ValidationPipe)\n                \n            \n\n                    \n                        \n                            Defined in src/administrador/usuarios/usuarios.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                usuarios\n                                            \n                                                            RegisterUser[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Post, SetMetadata, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { UsuariosService } from './usuarios.service';\nimport { RegisterUser } from 'src/dto/user.dto';\nimport { RolesGuard } from 'src/roles/roles.guard';\n\n@Controller('usuarios_regis')\nexport class UsuariosController {\n    constructor(private user:UsuariosService){}\n\n\n@Get()\n@UseGuards(RolesGuard)\n@SetMetadata('roles', ['ADMINISTRADOR'])\nGet_rol(){\n    return this.user.get_rol()\n}\n\n\n\n    @Post()\n   @UseGuards(RolesGuard)\n   @SetMetadata('roles', ['ADMINISTRADOR'])\n    @UsePipes(ValidationPipe)\n    register( @Body() usuarios :RegisterUser[]){\n  \n    return this.user.register(usuarios)\n   \n    }\n    @Delete(':id')\n    eliminar(@Param(\"id\") id :Number ) {\n        return this.user.delete_user(id)\n     \n    }\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsuariosService.html":{"url":"injectables/UsuariosService.html","title":"injectable - UsuariosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsuariosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/administrador/usuarios/usuarios.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sql\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete_user\n                            \n                            \n                                    Async\n                                get_rol\n                            \n                            \n                                    Async\n                                get_usets\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sql: SqlService)\n                    \n                \n                        \n                            \n                                Defined in src/administrador/usuarios/usuarios.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sql\n                                                  \n                                                        \n                                                                        SqlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete_user\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete_user(id: Number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/administrador/usuarios/usuarios.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get_rol\n                        \n                    \n                \n            \n            \n                \n                        \n                    get_rol()\n                \n            \n\n\n                    \n                        \n                            Defined in src/administrador/usuarios/usuarios.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get_usets\n                        \n                    \n                \n            \n            \n                \n                        \n                    get_usets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/administrador/usuarios/usuarios.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(usuarios: Usuario[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/administrador/usuarios/usuarios.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                usuarios\n                                            \n                                                            Usuario[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sql\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SqlService\n\n                    \n                \n                    \n                        \n                                Defined in src/administrador/usuarios/usuarios.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Usuario } from './usuario.interface';\nimport { SqlService } from 'src/sql/sql.service';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class UsuariosService {\n    constructor(public sql: SqlService) { }\n\n    async delete_user(id:Number){\nif(id ){\n    await this.sql.query('DELETE FROM inst.usuario where id_user = $1' ,[id])\n    return {\"message\":\"usuario\" +id+\" eliminado \"}\n}else{\n    throw \"no se a encontrado el usuario\"\n}\n        \n    }\n\n    async register(usuarios: Usuario[]) {\n\n        const asaltos = 10;\n\n\n        try {\n\n            for await (const user of usuarios) {\n\n                var existe = await this.sql.query('Select id_user from inst.usuario where id_user = $1', [user.id_user])\n                if(existe.length){console.log(\"usuario existente\")}\n                if (!existe.length) {\n\n                   \n                    const salt = await bcrypt.genSalt(asaltos);\n\n                    const hashedPassword = await bcrypt.hash(user.password, salt);\n\n                    this.sql.query('INSERT INTO inst.usuario(id_user,email,password,nombre,fk_rol) values($1,$2,$3,$4,$5)',\n                        [user.id_user,\n                        user.email,\n                            hashedPassword,\n                        user.nombre,\n                        user.fk_rol])\n\n                        console.log(\"usuario creado\")\n\n                    \n                }\n                \n              \n\n\n            }\n            return \"usuario o usuaioos creados \"\n        } catch(error) {\n            console.log(error)\n\n        }\n      \n\n    }\n\n    async get_rol(){\n\n\n            const reslut = await this.sql.query('select u.id_user, u.email ,u.nombre, r.nombre_rol from inst.usuario as u left join inst.rol as r  ON u.fk_rol = r.id_rol')\n            return reslut\n    \n    \n        \n\n\n\n    }\n\n    async get_usets(){\n        const reslut = await this.sql.query('select nombre_rol from inst.rol')\n        return reslut\n    }\n\n\n\n\n\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/administrador/carga_l_lote/carga_l_lote.controller.ts\n            \n            controller\n            CargaLLoteController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/administrador/carga_l_lote/carga_l_lote.service.ts\n            \n            injectable\n            CargaLLoteService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/administrador/carrera/carrera.controller.ts\n            \n            controller\n            CarreraController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/administrador/carrera/carrera.service.ts\n            \n            injectable\n            CarreraService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/administrador/estadisticas/estadisticas.controller.ts\n            \n            controller\n            EstadisticasController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/administrador/estadisticas/estadisticas.service.ts\n            \n            injectable\n            EstadisticasService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/administrador/materia/materia.controller.ts\n            \n            controller\n            MateriaController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/administrador/materia/materia.interface.ts\n            \n            interface\n            materia\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/administrador/materia/materia.service.ts\n            \n            injectable\n            MateriaService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/administrador/nacionalidad/nacionalidad.controller.ts\n            \n            controller\n            NacionalidadController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/administrador/nacionalidad/nacionalidad.service.ts\n            \n            injectable\n            NacionalidadService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/administrador/usuarios/usuario.interface.ts\n            \n            interface\n            Usuario\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/administrador/usuarios/usuarios.controller.ts\n            \n            controller\n            UsuariosController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/administrador/usuarios/usuarios.service.ts\n            \n            injectable\n            UsuariosService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/dto/libro_upload.dto.ts\n            \n            class\n            Libro_Upload\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/dto/user.dto.ts\n            \n            class\n            RegisterUser\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/login/login.controller.ts\n            \n            controller\n            LoginController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/login/login.dto.ts\n            \n            interface\n            login\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/login/login.service.ts\n            \n            injectable\n            LoginService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profesor/autor/autor.controller.ts\n            \n            controller\n            AutorController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/profesor/autor/autor.service.ts\n            \n            injectable\n            AutorService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/profesor/libro/libro.controller.ts\n            \n            controller\n            LibroController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/profesor/libro/libro.interface.ts\n            \n            interface\n            Libro\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/profesor/libro/libro.service.ts\n            \n            injectable\n            LibroService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/profesor/libro/milibro/milibro.controller.ts\n            \n            controller\n            MilibroController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/roles/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/sql/sql.service.ts\n            \n            injectable\n            SqlService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/test/test.controller.ts\n            \n            controller\n            TestController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/usuarios/buscador/buscador.controller.ts\n            \n            controller\n            BuscadorController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/usuarios/buscador/buscador.service.ts\n            \n            injectable\n            BuscadorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/usuarios/cambio_contra/cambio_contra.controller.ts\n            \n            controller\n            CambioContraController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/usuarios/cambio_contra/cambio_contra.service.ts\n            \n            injectable\n            CambioContraService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/usuarios/descarga/descarga.controller.ts\n            \n            controller\n            DescargaController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/usuarios/descarga/descarga.service.ts\n            \n            injectable\n            DescargaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/usuarios/get_libro/get_libro.controller.ts\n            \n            controller\n            GetLibroController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/usuarios/get_libro/get_libro.service.ts\n            \n            injectable\n            GetLibroService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.23\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/platform-express : ^10.2.10\n        \n            axios : ^1.6.2\n        \n            bcrypt : ^5.1.1\n        \n            body-parser : ^1.20.2\n        \n            chart.js : ^4.4.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            dotenv : ^16.3.1\n        \n            google-auth-library : ^9.4.1\n        \n            googleapis : ^129.0.0\n        \n            jsonwebtoken : ^9.0.2\n        \n            multer : ^1.4.5-lts.1\n        \n            ng2-charts : ^5.0.3\n        \n            pdf-parse : ^1.1.1\n        \n            pg : ^8.11.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Roles   (src/.../Rol.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/roles/Rol.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Roles\n                    \n                \n                        \n                            \n                                 ADMINISTRADOR\n                            \n                        \n                        \n                            \n                                Value : ADMINISTRADOR\n                            \n                        \n                        \n                            \n                                 PROFESOR\n                            \n                        \n                        \n                            \n                                Value : PROFESOR\n                            \n                        \n                        \n                            \n                                 ESTUDIANTE\n                            \n                        \n                        \n                            \n                                Value : ESTUDIANTE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/login.html":{"url":"interfaces/login.html","title":"interface - login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/login/login.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cedula\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cedula\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cedula:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface login{\n    cedula:String\n    password:String\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/materia.html":{"url":"interfaces/materia.html","title":"interface - materia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  materia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/administrador/materia/materia.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fk_carrera\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fk_carrera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fk_carrera:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface materia{\nnombre : String\nfk_carrera:Number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAutorService\n\nAutorService\n\nAppModule -->\n\nAutorService->AppModule\n\n\n\n\n\nBuscadorService\n\nBuscadorService\n\nAppModule -->\n\nBuscadorService->AppModule\n\n\n\n\n\nCambioContraService\n\nCambioContraService\n\nAppModule -->\n\nCambioContraService->AppModule\n\n\n\n\n\nCargaLLoteService\n\nCargaLLoteService\n\nAppModule -->\n\nCargaLLoteService->AppModule\n\n\n\n\n\nCarreraService\n\nCarreraService\n\nAppModule -->\n\nCarreraService->AppModule\n\n\n\n\n\nDescargaService\n\nDescargaService\n\nAppModule -->\n\nDescargaService->AppModule\n\n\n\n\n\nEstadisticasService\n\nEstadisticasService\n\nAppModule -->\n\nEstadisticasService->AppModule\n\n\n\n\n\nGetLibroService\n\nGetLibroService\n\nAppModule -->\n\nGetLibroService->AppModule\n\n\n\n\n\nLibroService\n\nLibroService\n\nAppModule -->\n\nLibroService->AppModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nAppModule -->\n\nLoginService->AppModule\n\n\n\n\n\nMateriaService\n\nMateriaService\n\nAppModule -->\n\nMateriaService->AppModule\n\n\n\n\n\nNacionalidadService\n\nNacionalidadService\n\nAppModule -->\n\nNacionalidadService->AppModule\n\n\n\n\n\nSqlService\n\nSqlService\n\nAppModule -->\n\nSqlService->AppModule\n\n\n\n\n\nUsuariosService\n\nUsuariosService\n\nAppModule -->\n\nUsuariosService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
